{
  "version": 3,
  "sources": ["../bundle-eygzm5/checked-fetch.js", "../bundle-eygzm5/strip-cf-connecting-ip-header.js", "wrangler-modules-watch:wrangler:modules-watch", "../../../node_modules/wrangler/templates/modules-watch-stub.js", "../../../node_modules/jose/dist/browser/runtime/webcrypto.js", "../../../node_modules/jose/dist/browser/runtime/digest.js", "../../../node_modules/jose/dist/browser/lib/buffer_utils.js", "../../../node_modules/jose/dist/browser/runtime/base64url.js", "../../../node_modules/jose/dist/browser/util/errors.js", "../../../node_modules/jose/dist/browser/runtime/random.js", "../../../node_modules/jose/dist/browser/lib/iv.js", "../../../node_modules/jose/dist/browser/lib/check_iv_length.js", "../../../node_modules/jose/dist/browser/runtime/check_cek_length.js", "../../../node_modules/jose/dist/browser/runtime/timing_safe_equal.js", "../../../node_modules/jose/dist/browser/lib/crypto_key.js", "../../../node_modules/jose/dist/browser/lib/invalid_key_input.js", "../../../node_modules/jose/dist/browser/runtime/is_key_like.js", "../../../node_modules/jose/dist/browser/runtime/decrypt.js", "../../../node_modules/jose/dist/browser/lib/is_disjoint.js", "../../../node_modules/jose/dist/browser/lib/is_object.js", "../../../node_modules/jose/dist/browser/runtime/bogus.js", "../../../node_modules/jose/dist/browser/runtime/aeskw.js", "../../../node_modules/jose/dist/browser/runtime/ecdhes.js", "../../../node_modules/jose/dist/browser/lib/check_p2s.js", "../../../node_modules/jose/dist/browser/runtime/pbes2kw.js", "../../../node_modules/jose/dist/browser/runtime/subtle_rsaes.js", "../../../node_modules/jose/dist/browser/runtime/check_key_length.js", "../../../node_modules/jose/dist/browser/runtime/rsaes.js", "../../../node_modules/jose/dist/browser/lib/is_jwk.js", "../../../node_modules/jose/dist/browser/runtime/jwk_to_key.js", "../../../node_modules/jose/dist/browser/runtime/normalize_key.js", "../../../node_modules/jose/dist/browser/lib/cek.js", "../../../node_modules/jose/dist/browser/lib/format_pem.js", "../../../node_modules/jose/dist/browser/runtime/asn1.js", "../../../node_modules/jose/dist/browser/key/import.js", "../../../node_modules/jose/dist/browser/lib/check_key_type.js", "../../../node_modules/jose/dist/browser/runtime/encrypt.js", "../../../node_modules/jose/dist/browser/lib/aesgcmkw.js", "../../../node_modules/jose/dist/browser/lib/decrypt_key_management.js", "../../../node_modules/jose/dist/browser/lib/validate_crit.js", "../../../node_modules/jose/dist/browser/lib/validate_algorithms.js", "../../../node_modules/jose/dist/browser/jwe/flattened/decrypt.js", "../../../node_modules/jose/dist/browser/jwe/compact/decrypt.js", "../../../node_modules/jose/dist/browser/jwe/general/decrypt.js", "../../../node_modules/jose/dist/browser/lib/private_symbols.js", "../../../node_modules/jose/dist/browser/runtime/key_to_jwk.js", "../../../node_modules/jose/dist/browser/key/export.js", "../../../node_modules/jose/dist/browser/lib/encrypt_key_management.js", "../../../node_modules/jose/dist/browser/jwe/flattened/encrypt.js", "../../../node_modules/jose/dist/browser/jwe/general/encrypt.js", "../../../node_modules/jose/dist/browser/runtime/subtle_dsa.js", "../../../node_modules/jose/dist/browser/runtime/get_sign_verify_key.js", "../../../node_modules/jose/dist/browser/runtime/verify.js", "../../../node_modules/jose/dist/browser/jws/flattened/verify.js", "../../../node_modules/jose/dist/browser/jws/compact/verify.js", "../../../node_modules/jose/dist/browser/jws/general/verify.js", "../../../node_modules/jose/dist/browser/lib/epoch.js", "../../../node_modules/jose/dist/browser/lib/secs.js", "../../../node_modules/jose/dist/browser/lib/jwt_claims_set.js", "../../../node_modules/jose/dist/browser/jwt/verify.js", "../../../node_modules/jose/dist/browser/jwt/decrypt.js", "../../../node_modules/jose/dist/browser/jwe/compact/encrypt.js", "../../../node_modules/jose/dist/browser/runtime/sign.js", "../../../node_modules/jose/dist/browser/jws/flattened/sign.js", "../../../node_modules/jose/dist/browser/jws/compact/sign.js", "../../../node_modules/jose/dist/browser/jws/general/sign.js", "../../../node_modules/jose/dist/browser/jwt/produce.js", "../../../node_modules/jose/dist/browser/jwt/sign.js", "../../../node_modules/jose/dist/browser/jwt/encrypt.js", "../../../node_modules/jose/dist/browser/jwk/thumbprint.js", "../../../node_modules/jose/dist/browser/jwk/embedded.js", "../../../node_modules/jose/dist/browser/jwks/local.js", "../../../node_modules/jose/dist/browser/runtime/fetch_jwks.js", "../../../node_modules/jose/dist/browser/jwks/remote.js", "../../../node_modules/jose/dist/browser/jwt/unsecured.js", "../../../node_modules/jose/dist/browser/util/base64url.js", "../../../node_modules/jose/dist/browser/util/decode_protected_header.js", "../../../node_modules/jose/dist/browser/util/decode_jwt.js", "../../../node_modules/jose/dist/browser/runtime/generate.js", "../../../node_modules/jose/dist/browser/key/generate_key_pair.js", "../../../node_modules/jose/dist/browser/key/generate_secret.js", "../../../node_modules/jose/dist/browser/runtime/runtime.js", "../../../node_modules/jose/dist/browser/util/runtime.js", "../../../node_modules/jose/dist/browser/index.js", "../../../node_modules/stytch/dist/shared/envs.js", "../../../node_modules/stytch/package.json", "../../../node_modules/stytch/dist/shared/base64.js", "../../../node_modules/stytch/dist/shared/client.js", "../../../node_modules/stytch/dist/shared/method_options.js", "../../../node_modules/stytch/dist/shared/errors.js", "../../../node_modules/stytch/dist/shared/index.js", "../../../node_modules/stytch/dist/b2c/crypto_wallets.js", "../../../node_modules/stytch/dist/b2c/fraud_fingerprint.js", "../../../node_modules/stytch/dist/b2c/fraud_rules.js", "../../../node_modules/stytch/dist/b2c/fraud.js", "../../../node_modules/stytch/dist/b2c/impersonation.js", "../../../node_modules/stytch/dist/shared/sessions.js", "../../../node_modules/stytch/dist/b2c/m2m_clients_secrets.js", "../../../node_modules/stytch/dist/b2c/m2m_clients.js", "../../../node_modules/stytch/dist/b2c/m2m_local.js", "../../../node_modules/stytch/dist/b2c/m2m.js", "../../../node_modules/stytch/dist/b2c/magic_links_email.js", "../../../node_modules/stytch/dist/b2c/magic_links.js", "../../../node_modules/stytch/dist/b2c/oauth.js", "../../../node_modules/stytch/dist/b2c/otps_email.js", "../../../node_modules/stytch/dist/b2c/otps_sms.js", "../../../node_modules/stytch/dist/b2c/otps_whatsapp.js", "../../../node_modules/stytch/dist/b2c/otps.js", "../../../node_modules/stytch/dist/b2c/passwords_email.js", "../../../node_modules/stytch/dist/b2c/passwords_existing_password.js", "../../../node_modules/stytch/dist/b2c/passwords_session.js", "../../../node_modules/stytch/dist/b2c/passwords.js", "../../../node_modules/stytch/dist/b2c/project.js", "../../../node_modules/stytch/dist/b2c/sessions.js", "../../../node_modules/stytch/dist/b2c/totps.js", "../../../node_modules/stytch/dist/b2c/users.js", "../../../node_modules/stytch/dist/b2c/webauthn.js", "../../../node_modules/stytch/dist/b2c/idp.js", "../../../node_modules/stytch/dist/b2c/client.js", "../../../node_modules/stytch/dist/b2b/discovery_intermediate_sessions.js", "../../../node_modules/stytch/dist/b2b/discovery_organizations.js", "../../../node_modules/stytch/dist/b2b/discovery.js", "../../../node_modules/stytch/dist/b2b/impersonation.js", "../../../node_modules/stytch/dist/b2b/magic_links_discovery.js", "../../../node_modules/stytch/dist/b2b/magic_links_email_discovery.js", "../../../node_modules/stytch/dist/b2b/magic_links_email.js", "../../../node_modules/stytch/dist/b2b/magic_links.js", "../../../node_modules/stytch/dist/b2b/oauth_discovery.js", "../../../node_modules/stytch/dist/b2b/oauth.js", "../../../node_modules/stytch/dist/b2b/organizations_members_oauth_providers.js", "../../../node_modules/stytch/dist/b2b/organizations_members.js", "../../../node_modules/stytch/dist/b2b/organizations.js", "../../../node_modules/stytch/dist/b2b/otp_email_discovery.js", "../../../node_modules/stytch/dist/b2b/otp_email.js", "../../../node_modules/stytch/dist/b2b/otp_sms.js", "../../../node_modules/stytch/dist/b2b/otp.js", "../../../node_modules/stytch/dist/b2b/passwords_discovery_email.js", "../../../node_modules/stytch/dist/b2b/passwords_discovery.js", "../../../node_modules/stytch/dist/b2b/passwords_email.js", "../../../node_modules/stytch/dist/b2b/passwords_existing_password.js", "../../../node_modules/stytch/dist/b2b/passwords_session.js", "../../../node_modules/stytch/dist/b2b/passwords.js", "../../../node_modules/stytch/dist/b2b/rbac_local.js", "../../../node_modules/stytch/dist/b2b/rbac.js", "../../../node_modules/stytch/dist/b2b/recovery_codes.js", "../../../node_modules/stytch/dist/b2b/scim_connection.js", "../../../node_modules/stytch/dist/b2b/scim.js", "../../../node_modules/stytch/dist/b2b/sessions.js", "../../../node_modules/stytch/dist/b2b/sso_external.js", "../../../node_modules/stytch/dist/b2b/sso_oidc.js", "../../../node_modules/stytch/dist/b2b/sso_saml.js", "../../../node_modules/stytch/dist/b2b/sso.js", "../../../node_modules/stytch/dist/b2b/totps.js", "../../../node_modules/stytch/dist/b2b/idp.js", "../../../node_modules/stytch/dist/b2b/client.js", "../../../node_modules/stytch/dist/b2c/index.js", "../../../node_modules/stytch/dist/b2b/index.js", "../../../node_modules/stytch/dist/index.js", "../bundle-eygzm5/middleware-loader.entry.ts", "../bundle-eygzm5/middleware-insertion-facade.js", "../../../src/index.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "/Users/jkwasniewski/src/stytch-b2b-demo/backend-cf/.wrangler/tmp/dev-8byIwD",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "function stripCfConnectingIPHeader(input, init) {\n\tconst request = new Request(input, init);\n\trequest.headers.delete(\"CF-Connecting-IP\");\n\treturn request;\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\treturn Reflect.apply(target, thisArg, [\n\t\t\tstripCfConnectingIPHeader.apply(null, argArray),\n\t\t]);\n\t},\n});\n", "", "// `esbuild` doesn't support returning `watch*` options from `onStart()`\n// plugin callbacks. Instead, we define an empty virtual module that is\n// imported by this injected file. Importing the module registers watchers.\nimport \"wrangler:modules-watch\";\n", "export default crypto;\nexport const isCryptoKey = (key) => key instanceof CryptoKey;\n", "import crypto from './webcrypto.js';\nconst digest = async (algorithm, data) => {\n    const subtleDigest = `SHA-${algorithm.slice(-3)}`;\n    return new Uint8Array(await crypto.subtle.digest(subtleDigest, data));\n};\nexport default digest;\n", "import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    for (const buffer of buffers) {\n        buf.set(buffer, i);\n        i += buffer.length;\n    }\n    return buf;\n}\nexport function p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexport function lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await digest('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n", "import { encoder, decoder } from '../lib/buffer_utils.js';\nexport const encodeBase64 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n};\nexport const encode = (input) => {\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nexport const decodeBase64 = (encoded) => {\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n};\nexport const decode = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n", "export class JOSEError extends Error {\n    constructor(message, options) {\n        super(message, options);\n        this.code = 'ERR_JOSE_GENERIC';\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nJOSEError.code = 'ERR_JOSE_GENERIC';\nexport class JWTClaimValidationFailed extends JOSEError {\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message, { cause: { claim, reason, payload } });\n        this.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nJWTClaimValidationFailed.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\nexport class JWTExpired extends JOSEError {\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message, { cause: { claim, reason, payload } });\n        this.code = 'ERR_JWT_EXPIRED';\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nJWTExpired.code = 'ERR_JWT_EXPIRED';\nexport class JOSEAlgNotAllowed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n}\nJOSEAlgNotAllowed.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\nexport class JOSENotSupported extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_NOT_SUPPORTED';\n    }\n}\nJOSENotSupported.code = 'ERR_JOSE_NOT_SUPPORTED';\nexport class JWEDecryptionFailed extends JOSEError {\n    constructor(message = 'decryption operation failed', options) {\n        super(message, options);\n        this.code = 'ERR_JWE_DECRYPTION_FAILED';\n    }\n}\nJWEDecryptionFailed.code = 'ERR_JWE_DECRYPTION_FAILED';\nexport class JWEInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_INVALID';\n    }\n}\nJWEInvalid.code = 'ERR_JWE_INVALID';\nexport class JWSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_INVALID';\n    }\n}\nJWSInvalid.code = 'ERR_JWS_INVALID';\nexport class JWTInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWT_INVALID';\n    }\n}\nJWTInvalid.code = 'ERR_JWT_INVALID';\nexport class JWKInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWK_INVALID';\n    }\n}\nJWKInvalid.code = 'ERR_JWK_INVALID';\nexport class JWKSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_INVALID';\n    }\n}\nJWKSInvalid.code = 'ERR_JWKS_INVALID';\nexport class JWKSNoMatchingKey extends JOSEError {\n    constructor(message = 'no applicable key found in the JSON Web Key Set', options) {\n        super(message, options);\n        this.code = 'ERR_JWKS_NO_MATCHING_KEY';\n    }\n}\nJWKSNoMatchingKey.code = 'ERR_JWKS_NO_MATCHING_KEY';\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n    constructor(message = 'multiple matching keys found in the JSON Web Key Set', options) {\n        super(message, options);\n        this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    }\n}\nSymbol.asyncIterator;\nJWKSMultipleMatchingKeys.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\nexport class JWKSTimeout extends JOSEError {\n    constructor(message = 'request timed out', options) {\n        super(message, options);\n        this.code = 'ERR_JWKS_TIMEOUT';\n    }\n}\nJWKSTimeout.code = 'ERR_JWKS_TIMEOUT';\nexport class JWSSignatureVerificationFailed extends JOSEError {\n    constructor(message = 'signature verification failed', options) {\n        super(message, options);\n        this.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    }\n}\nJWSSignatureVerificationFailed.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n", "import crypto from './webcrypto.js';\nexport default crypto.getRandomValues.bind(crypto);\n", "import { JOSENotSupported } from '../util/errors.js';\nimport random from '../runtime/random.js';\nexport function bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A128GCMKW':\n        case 'A192GCM':\n        case 'A192GCMKW':\n        case 'A256GCM':\n        case 'A256GCMKW':\n            return 96;\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            return 128;\n        default:\n            throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexport default (alg) => random(new Uint8Array(bitLength(alg) >> 3));\n", "import { JWEInvalid } from '../util/errors.js';\nimport { bitLength } from './iv.js';\nconst checkIvLength = (enc, iv) => {\n    if (iv.length << 3 !== bitLength(enc)) {\n        throw new JWEInvalid('Invalid Initialization Vector length');\n    }\n};\nexport default checkIvLength;\n", "import { JWEInvalid } from '../util/errors.js';\nconst checkCekLength = (cek, expected) => {\n    const actual = cek.byteLength << 3;\n    if (actual !== expected) {\n        throw new JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);\n    }\n};\nexport default checkCekLength;\n", "const timingSafeEqual = (a, b) => {\n    if (!(a instanceof Uint8Array)) {\n        throw new TypeError('First argument must be a buffer');\n    }\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('Second argument must be a buffer');\n    }\n    if (a.length !== b.length) {\n        throw new TypeError('Input buffers must have the same length');\n    }\n    const len = a.length;\n    let out = 0;\n    let i = -1;\n    while (++i < len) {\n        out |= a[i] ^ b[i];\n    }\n    return out === 0;\n};\nexport default timingSafeEqual;\n", "function unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usages) {\n    if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {\n        let msg = 'CryptoKey does not support this operation, its usages must include ';\n        if (usages.length > 2) {\n            const last = usages.pop();\n            msg += `one of ${usages.join(', ')}, or ${last}.`;\n        }\n        else if (usages.length === 2) {\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\n        }\n        else {\n            msg += `${usages[0]}.`;\n        }\n        throw new TypeError(msg);\n    }\n}\nexport function checkSigCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'EdDSA': {\n            if (key.algorithm.name !== 'Ed25519' && key.algorithm.name !== 'Ed448') {\n                throw unusable('Ed25519 or Ed448');\n            }\n            break;\n        }\n        case 'Ed25519': {\n            if (!isAlgorithm(key.algorithm, 'Ed25519'))\n                throw unusable('Ed25519');\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\nexport function checkEncCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH': {\n            switch (key.algorithm.name) {\n                case 'ECDH':\n                case 'X25519':\n                case 'X448':\n                    break;\n                default:\n                    throw unusable('ECDH, X25519, or X448');\n            }\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\n", "function message(msg, actual, ...types) {\n    types = types.filter(Boolean);\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor?.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexport default (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nexport function withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n", "import { isCryptoKey } from './webcrypto.js';\nexport default (key) => {\n    if (isCryptoKey(key)) {\n        return true;\n    }\n    return key?.[Symbol.toStringTag] === 'KeyObject';\n};\nexport const types = ['CryptoKey'];\n", "import { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport timingSafeEqual from './timing_safe_equal.js';\nimport { JOSENotSupported, JWEDecryptionFailed, JWEInvalid } from '../util/errors.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nasync function cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    if (!(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n    }\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['decrypt']);\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n        hash: `SHA-${keySize << 1}`,\n        name: 'HMAC',\n    }, false, ['sign']);\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const expectedTag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n    let macCheckPassed;\n    try {\n        macCheckPassed = timingSafeEqual(tag, expectedTag);\n    }\n    catch {\n    }\n    if (!macCheckPassed) {\n        throw new JWEDecryptionFailed();\n    }\n    let plaintext;\n    try {\n        plaintext = new Uint8Array(await crypto.subtle.decrypt({ iv, name: 'AES-CBC' }, encKey, ciphertext));\n    }\n    catch {\n    }\n    if (!plaintext) {\n        throw new JWEDecryptionFailed();\n    }\n    return plaintext;\n}\nasync function gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    let encKey;\n    if (cek instanceof Uint8Array) {\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['decrypt']);\n    }\n    else {\n        checkEncCryptoKey(cek, enc, 'decrypt');\n        encKey = cek;\n    }\n    try {\n        return new Uint8Array(await crypto.subtle.decrypt({\n            additionalData: aad,\n            iv,\n            name: 'AES-GCM',\n            tagLength: 128,\n        }, encKey, concat(ciphertext, tag)));\n    }\n    catch {\n        throw new JWEDecryptionFailed();\n    }\n}\nconst decrypt = async (enc, cek, ciphertext, iv, tag, aad) => {\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n    }\n    if (!iv) {\n        throw new JWEInvalid('JWE Initialization Vector missing');\n    }\n    if (!tag) {\n        throw new JWEInvalid('JWE Authentication Tag missing');\n    }\n    checkIvLength(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\n            return cbcDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n            return gcmDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        default:\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexport default decrypt;\n", "const isDisjoint = (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\nexport default isDisjoint;\n", "function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport default function isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n", "const bogusWebCrypto = [\n    { hash: 'SHA-256', name: 'HMAC' },\n    true,\n    ['sign'],\n];\nexport default bogusWebCrypto;\n", "import bogusWebCrypto from './bogus.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nfunction checkKeySize(key, alg) {\n    if (key.algorithm.length !== parseInt(alg.slice(1, 4), 10)) {\n        throw new TypeError(`Invalid key size for alg: ${alg}`);\n    }\n}\nfunction getCryptoKey(key, alg, usage) {\n    if (isCryptoKey(key)) {\n        checkEncCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        return crypto.subtle.importKey('raw', key, 'AES-KW', true, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nexport const wrap = async (alg, key, cek) => {\n    const cryptoKey = await getCryptoKey(key, alg, 'wrapKey');\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\n    return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, cryptoKey, 'AES-KW'));\n};\nexport const unwrap = async (alg, key, encryptedKey) => {\n    const cryptoKey = await getCryptoKey(key, alg, 'unwrapKey');\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, cryptoKey, 'AES-KW', ...bogusWebCrypto);\n    return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\n};\n", "import { encoder, concat, uint32be, lengthAndInput, concatKdf } from '../lib/buffer_utils.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport async function deriveKey(publicKey, privateKey, algorithm, keyLength, apu = new Uint8Array(0), apv = new Uint8Array(0)) {\n    if (!isCryptoKey(publicKey)) {\n        throw new TypeError(invalidKeyInput(publicKey, ...types));\n    }\n    checkEncCryptoKey(publicKey, 'ECDH');\n    if (!isCryptoKey(privateKey)) {\n        throw new TypeError(invalidKeyInput(privateKey, ...types));\n    }\n    checkEncCryptoKey(privateKey, 'ECDH', 'deriveBits');\n    const value = concat(lengthAndInput(encoder.encode(algorithm)), lengthAndInput(apu), lengthAndInput(apv), uint32be(keyLength));\n    let length;\n    if (publicKey.algorithm.name === 'X25519') {\n        length = 256;\n    }\n    else if (publicKey.algorithm.name === 'X448') {\n        length = 448;\n    }\n    else {\n        length =\n            Math.ceil(parseInt(publicKey.algorithm.namedCurve.substr(-3), 10) / 8) <<\n                3;\n    }\n    const sharedSecret = new Uint8Array(await crypto.subtle.deriveBits({\n        name: publicKey.algorithm.name,\n        public: publicKey,\n    }, privateKey, length));\n    return concatKdf(sharedSecret, keyLength, value);\n}\nexport async function generateEpk(key) {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    return crypto.subtle.generateKey(key.algorithm, true, ['deriveBits']);\n}\nexport function ecdhAllowed(key) {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    return (['P-256', 'P-384', 'P-521'].includes(key.algorithm.namedCurve) ||\n        key.algorithm.name === 'X25519' ||\n        key.algorithm.name === 'X448');\n}\n", "import { JWEInvalid } from '../util/errors.js';\nexport default function checkP2s(p2s) {\n    if (!(p2s instanceof Uint8Array) || p2s.length < 8) {\n        throw new JWEInvalid('PBES2 Salt Input must be 8 or more octets');\n    }\n}\n", "import random from './random.js';\nimport { p2s as concatSalt } from '../lib/buffer_utils.js';\nimport { encode as base64url } from './base64url.js';\nimport { wrap, unwrap } from './aeskw.js';\nimport checkP2s from '../lib/check_p2s.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nfunction getCryptoKey(key, alg) {\n    if (key instanceof Uint8Array) {\n        return crypto.subtle.importKey('raw', key, 'PBKDF2', false, ['deriveBits']);\n    }\n    if (isCryptoKey(key)) {\n        checkEncCryptoKey(key, alg, 'deriveBits', 'deriveKey');\n        return key;\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nasync function deriveKey(p2s, alg, p2c, key) {\n    checkP2s(p2s);\n    const salt = concatSalt(alg, p2s);\n    const keylen = parseInt(alg.slice(13, 16), 10);\n    const subtleAlg = {\n        hash: `SHA-${alg.slice(8, 11)}`,\n        iterations: p2c,\n        name: 'PBKDF2',\n        salt,\n    };\n    const wrapAlg = {\n        length: keylen,\n        name: 'AES-KW',\n    };\n    const cryptoKey = await getCryptoKey(key, alg);\n    if (cryptoKey.usages.includes('deriveBits')) {\n        return new Uint8Array(await crypto.subtle.deriveBits(subtleAlg, cryptoKey, keylen));\n    }\n    if (cryptoKey.usages.includes('deriveKey')) {\n        return crypto.subtle.deriveKey(subtleAlg, cryptoKey, wrapAlg, false, ['wrapKey', 'unwrapKey']);\n    }\n    throw new TypeError('PBKDF2 key \"usages\" must include \"deriveBits\" or \"deriveKey\"');\n}\nexport const encrypt = async (alg, key, cek, p2c = 2048, p2s = random(new Uint8Array(16))) => {\n    const derived = await deriveKey(p2s, alg, p2c, key);\n    const encryptedKey = await wrap(alg.slice(-6), derived, cek);\n    return { encryptedKey, p2c, p2s: base64url(p2s) };\n};\nexport const decrypt = async (alg, key, encryptedKey, p2c, p2s) => {\n    const derived = await deriveKey(p2s, alg, p2c, key);\n    return unwrap(alg.slice(-6), derived, encryptedKey);\n};\n", "import { JOSENotSupported } from '../util/errors.js';\nexport default function subtleRsaEs(alg) {\n    switch (alg) {\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            return 'RSA-OAEP';\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n", "export default (alg, key) => {\n    if (alg.startsWith('RS') || alg.startsWith('PS')) {\n        const { modulusLength } = key.algorithm;\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n        }\n    }\n};\n", "import subtleAlgorithm from './subtle_rsaes.js';\nimport bogusWebCrypto from './bogus.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport checkKeyLength from './check_key_length.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport const encrypt = async (alg, key, cek) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    checkEncCryptoKey(key, alg, 'encrypt', 'wrapKey');\n    checkKeyLength(alg, key);\n    if (key.usages.includes('encrypt')) {\n        return new Uint8Array(await crypto.subtle.encrypt(subtleAlgorithm(alg), key, cek));\n    }\n    if (key.usages.includes('wrapKey')) {\n        const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\n        return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, key, subtleAlgorithm(alg)));\n    }\n    throw new TypeError('RSA-OAEP key \"usages\" must include \"encrypt\" or \"wrapKey\" for this operation');\n};\nexport const decrypt = async (alg, key, encryptedKey) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    checkEncCryptoKey(key, alg, 'decrypt', 'unwrapKey');\n    checkKeyLength(alg, key);\n    if (key.usages.includes('decrypt')) {\n        return new Uint8Array(await crypto.subtle.decrypt(subtleAlgorithm(alg), key, encryptedKey));\n    }\n    if (key.usages.includes('unwrapKey')) {\n        const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, key, subtleAlgorithm(alg), ...bogusWebCrypto);\n        return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\n    }\n    throw new TypeError('RSA-OAEP key \"usages\" must include \"decrypt\" or \"unwrapKey\" for this operation');\n};\n", "import isObject from './is_object.js';\nexport function isJWK(key) {\n    return isObject(key) && typeof key.kty === 'string';\n}\nexport function isPrivateJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'string';\n}\nexport function isPublicJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'undefined';\n}\nexport function isSecretJWK(key) {\n    return isJWK(key) && key.kty === 'oct' && typeof key.k === 'string';\n}\n", "import crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nfunction subtleMapping(jwk) {\n    let algorithm;\n    let keyUsages;\n    switch (jwk.kty) {\n        case 'RSA': {\n            switch (jwk.alg) {\n                case 'PS256':\n                case 'PS384':\n                case 'PS512':\n                    algorithm = { name: 'RSA-PSS', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RS256':\n                case 'RS384':\n                case 'RS512':\n                    algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RSA-OAEP':\n                case 'RSA-OAEP-256':\n                case 'RSA-OAEP-384':\n                case 'RSA-OAEP-512':\n                    algorithm = {\n                        name: 'RSA-OAEP',\n                        hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`,\n                    };\n                    keyUsages = jwk.d ? ['decrypt', 'unwrapKey'] : ['encrypt', 'wrapKey'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'EC': {\n            switch (jwk.alg) {\n                case 'ES256':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES384':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES512':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: 'ECDH', namedCurve: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'OKP': {\n            switch (jwk.alg) {\n                case 'Ed25519':\n                    algorithm = { name: 'Ed25519' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'EdDSA':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n    return { algorithm, keyUsages };\n}\nconst parse = async (jwk) => {\n    if (!jwk.alg) {\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\n    }\n    const { algorithm, keyUsages } = subtleMapping(jwk);\n    const rest = [\n        algorithm,\n        jwk.ext ?? false,\n        jwk.key_ops ?? keyUsages,\n    ];\n    const keyData = { ...jwk };\n    delete keyData.alg;\n    delete keyData.use;\n    return crypto.subtle.importKey('jwk', keyData, ...rest);\n};\nexport default parse;\n", "import { isJWK } from '../lib/is_jwk.js';\nimport { decode } from './base64url.js';\nimport importJWK from './jwk_to_key.js';\nconst exportKeyValue = (k) => decode(k);\nlet privCache;\nlet pubCache;\nconst isKeyObject = (key) => {\n    return key?.[Symbol.toStringTag] === 'KeyObject';\n};\nconst importAndCache = async (cache, key, jwk, alg, freeze = false) => {\n    let cached = cache.get(key);\n    if (cached?.[alg]) {\n        return cached[alg];\n    }\n    const cryptoKey = await importJWK({ ...jwk, alg });\n    if (freeze)\n        Object.freeze(key);\n    if (!cached) {\n        cache.set(key, { [alg]: cryptoKey });\n    }\n    else {\n        cached[alg] = cryptoKey;\n    }\n    return cryptoKey;\n};\nconst normalizePublicKey = (key, alg) => {\n    if (isKeyObject(key)) {\n        let jwk = key.export({ format: 'jwk' });\n        delete jwk.d;\n        delete jwk.dp;\n        delete jwk.dq;\n        delete jwk.p;\n        delete jwk.q;\n        delete jwk.qi;\n        if (jwk.k) {\n            return exportKeyValue(jwk.k);\n        }\n        pubCache || (pubCache = new WeakMap());\n        return importAndCache(pubCache, key, jwk, alg);\n    }\n    if (isJWK(key)) {\n        if (key.k)\n            return decode(key.k);\n        pubCache || (pubCache = new WeakMap());\n        const cryptoKey = importAndCache(pubCache, key, key, alg, true);\n        return cryptoKey;\n    }\n    return key;\n};\nconst normalizePrivateKey = (key, alg) => {\n    if (isKeyObject(key)) {\n        let jwk = key.export({ format: 'jwk' });\n        if (jwk.k) {\n            return exportKeyValue(jwk.k);\n        }\n        privCache || (privCache = new WeakMap());\n        return importAndCache(privCache, key, jwk, alg);\n    }\n    if (isJWK(key)) {\n        if (key.k)\n            return decode(key.k);\n        privCache || (privCache = new WeakMap());\n        const cryptoKey = importAndCache(privCache, key, key, alg, true);\n        return cryptoKey;\n    }\n    return key;\n};\nexport default { normalizePublicKey, normalizePrivateKey };\n", "import { JOSENotSupported } from '../util/errors.js';\nimport random from '../runtime/random.js';\nexport function bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n            return 128;\n        case 'A192GCM':\n            return 192;\n        case 'A256GCM':\n        case 'A128CBC-HS256':\n            return 256;\n        case 'A192CBC-HS384':\n            return 384;\n        case 'A256CBC-HS512':\n            return 512;\n        default:\n            throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexport default (alg) => random(new Uint8Array(bitLength(alg) >> 3));\n", "export default (b64, descriptor) => {\n    const newlined = (b64.match(/.{1,64}/g) || []).join('\\n');\n    return `-----BEGIN ${descriptor}-----\\n${newlined}\\n-----END ${descriptor}-----`;\n};\n", "import crypto, { isCryptoKey } from './webcrypto.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { encodeBase64, decodeBase64 } from './base64url.js';\nimport formatPEM from '../lib/format_pem.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { types } from './is_key_like.js';\nconst genericExport = async (keyType, keyFormat, key) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    if (!key.extractable) {\n        throw new TypeError('CryptoKey is not extractable');\n    }\n    if (key.type !== keyType) {\n        throw new TypeError(`key is not a ${keyType} key`);\n    }\n    return formatPEM(encodeBase64(new Uint8Array(await crypto.subtle.exportKey(keyFormat, key))), `${keyType.toUpperCase()} KEY`);\n};\nexport const toSPKI = (key) => {\n    return genericExport('public', 'spki', key);\n};\nexport const toPKCS8 = (key) => {\n    return genericExport('private', 'pkcs8', key);\n};\nconst findOid = (keyData, oid, from = 0) => {\n    if (from === 0) {\n        oid.unshift(oid.length);\n        oid.unshift(0x06);\n    }\n    const i = keyData.indexOf(oid[0], from);\n    if (i === -1)\n        return false;\n    const sub = keyData.subarray(i, i + oid.length);\n    if (sub.length !== oid.length)\n        return false;\n    return sub.every((value, index) => value === oid[index]) || findOid(keyData, oid, i + 1);\n};\nconst getNamedCurve = (keyData) => {\n    switch (true) {\n        case findOid(keyData, [0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07]):\n            return 'P-256';\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x22]):\n            return 'P-384';\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x23]):\n            return 'P-521';\n        case findOid(keyData, [0x2b, 0x65, 0x6e]):\n            return 'X25519';\n        case findOid(keyData, [0x2b, 0x65, 0x6f]):\n            return 'X448';\n        case findOid(keyData, [0x2b, 0x65, 0x70]):\n            return 'Ed25519';\n        case findOid(keyData, [0x2b, 0x65, 0x71]):\n            return 'Ed448';\n        default:\n            throw new JOSENotSupported('Invalid or unsupported EC Key Curve or OKP Key Sub Type');\n    }\n};\nconst genericImport = async (replace, keyFormat, pem, alg, options) => {\n    let algorithm;\n    let keyUsages;\n    const keyData = new Uint8Array(atob(pem.replace(replace, ''))\n        .split('')\n        .map((c) => c.charCodeAt(0)));\n    const isPublic = keyFormat === 'spki';\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            algorithm = { name: 'RSA-PSS', hash: `SHA-${alg.slice(-3)}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${alg.slice(-3)}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            algorithm = {\n                name: 'RSA-OAEP',\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,\n            };\n            keyUsages = isPublic ? ['encrypt', 'wrapKey'] : ['decrypt', 'unwrapKey'];\n            break;\n        case 'ES256':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ES384':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ES512':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            const namedCurve = getNamedCurve(keyData);\n            algorithm = namedCurve.startsWith('P-') ? { name: 'ECDH', namedCurve } : { name: namedCurve };\n            keyUsages = isPublic ? [] : ['deriveBits'];\n            break;\n        }\n        case 'Ed25519':\n            algorithm = { name: 'Ed25519' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'EdDSA':\n            algorithm = { name: getNamedCurve(keyData) };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        default:\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (Algorithm) value');\n    }\n    return crypto.subtle.importKey(keyFormat, keyData, algorithm, options?.extractable ?? false, keyUsages);\n};\nexport const fromPKCS8 = (pem, alg, options) => {\n    return genericImport(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\\s)/g, 'pkcs8', pem, alg, options);\n};\nexport const fromSPKI = (pem, alg, options) => {\n    return genericImport(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\\s)/g, 'spki', pem, alg, options);\n};\nfunction getElement(seq) {\n    const result = [];\n    let next = 0;\n    while (next < seq.length) {\n        const nextPart = parseElement(seq.subarray(next));\n        result.push(nextPart);\n        next += nextPart.byteLength;\n    }\n    return result;\n}\nfunction parseElement(bytes) {\n    let position = 0;\n    let tag = bytes[0] & 0x1f;\n    position++;\n    if (tag === 0x1f) {\n        tag = 0;\n        while (bytes[position] >= 0x80) {\n            tag = tag * 128 + bytes[position] - 0x80;\n            position++;\n        }\n        tag = tag * 128 + bytes[position] - 0x80;\n        position++;\n    }\n    let length = 0;\n    if (bytes[position] < 0x80) {\n        length = bytes[position];\n        position++;\n    }\n    else if (length === 0x80) {\n        length = 0;\n        while (bytes[position + length] !== 0 || bytes[position + length + 1] !== 0) {\n            if (length > bytes.byteLength) {\n                throw new TypeError('invalid indefinite form length');\n            }\n            length++;\n        }\n        const byteLength = position + length + 2;\n        return {\n            byteLength,\n            contents: bytes.subarray(position, position + length),\n            raw: bytes.subarray(0, byteLength),\n        };\n    }\n    else {\n        const numberOfDigits = bytes[position] & 0x7f;\n        position++;\n        length = 0;\n        for (let i = 0; i < numberOfDigits; i++) {\n            length = length * 256 + bytes[position];\n            position++;\n        }\n    }\n    const byteLength = position + length;\n    return {\n        byteLength,\n        contents: bytes.subarray(position, byteLength),\n        raw: bytes.subarray(0, byteLength),\n    };\n}\nfunction spkiFromX509(buf) {\n    const tbsCertificate = getElement(getElement(parseElement(buf).contents)[0].contents);\n    return encodeBase64(tbsCertificate[tbsCertificate[0].raw[0] === 0xa0 ? 6 : 5].raw);\n}\nfunction getSPKI(x509) {\n    const pem = x509.replace(/(?:-----(?:BEGIN|END) CERTIFICATE-----|\\s)/g, '');\n    const raw = decodeBase64(pem);\n    return formatPEM(spkiFromX509(raw), 'PUBLIC KEY');\n}\nexport const fromX509 = (pem, alg, options) => {\n    let spki;\n    try {\n        spki = getSPKI(pem);\n    }\n    catch (cause) {\n        throw new TypeError('Failed to parse the X.509 certificate', { cause });\n    }\n    return fromSPKI(spki, alg, options);\n};\n", "import { decode as decodeBase64URL } from '../runtime/base64url.js';\nimport { fromSPKI, fromPKCS8, fromX509 } from '../runtime/asn1.js';\nimport asKeyObject from '../runtime/jwk_to_key.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nexport async function importSPKI(spki, alg, options) {\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return fromSPKI(spki, alg, options);\n}\nexport async function importX509(x509, alg, options) {\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    return fromX509(x509, alg, options);\n}\nexport async function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return fromPKCS8(pkcs8, alg, options);\n}\nexport async function importJWK(jwk, alg) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    alg || (alg = jwk.alg);\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            return decodeBase64URL(jwk.k);\n        case 'RSA':\n            if ('oth' in jwk && jwk.oth !== undefined) {\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return asKeyObject({ ...jwk, alg });\n        default:\n            throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\n", "import { withAlg as invalidKeyInput } from './invalid_key_input.js';\nimport isKeyLike, { types } from '../runtime/is_key_like.js';\nimport * as jwk from './is_jwk.js';\nconst tag = (key) => key?.[Symbol.toStringTag];\nconst jwkMatchesOp = (alg, key, usage) => {\n    if (key.use !== undefined && key.use !== 'sig') {\n        throw new TypeError('Invalid key for this operation, when present its use must be sig');\n    }\n    if (key.key_ops !== undefined && key.key_ops.includes?.(usage) !== true) {\n        throw new TypeError(`Invalid key for this operation, when present its key_ops must include ${usage}`);\n    }\n    if (key.alg !== undefined && key.alg !== alg) {\n        throw new TypeError(`Invalid key for this operation, when present its alg must be ${alg}`);\n    }\n    return true;\n};\nconst symmetricTypeCheck = (alg, key, usage, allowJwk) => {\n    if (key instanceof Uint8Array)\n        return;\n    if (allowJwk && jwk.isJWK(key)) {\n        if (jwk.isSecretJWK(key) && jwkMatchesOp(alg, key, usage))\n            return;\n        throw new TypeError(`JSON Web Key for symmetric algorithms must have JWK \"kty\" (Key Type) equal to \"oct\" and the JWK \"k\" (Key Value) present`);\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, 'Uint8Array', allowJwk ? 'JSON Web Key' : null));\n    }\n    if (key.type !== 'secret') {\n        throw new TypeError(`${tag(key)} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage, allowJwk) => {\n    if (allowJwk && jwk.isJWK(key)) {\n        switch (usage) {\n            case 'sign':\n                if (jwk.isPrivateJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a private JWK`);\n            case 'verify':\n                if (jwk.isPublicJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a public JWK`);\n        }\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, allowJwk ? 'JSON Web Key' : null));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (usage === 'sign' && key.type === 'public') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm signing must be of type \"private\"`);\n    }\n    if (usage === 'decrypt' && key.type === 'public') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm decryption must be of type \"private\"`);\n    }\n    if (key.algorithm && usage === 'verify' && key.type === 'private') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm verifying must be of type \"public\"`);\n    }\n    if (key.algorithm && usage === 'encrypt' && key.type === 'private') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm encryption must be of type \"public\"`);\n    }\n};\nfunction checkKeyType(allowJwk, alg, key, usage) {\n    const symmetric = alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        /^A\\d{3}(?:GCM)?KW$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key, usage, allowJwk);\n    }\n    else {\n        asymmetricTypeCheck(alg, key, usage, allowJwk);\n    }\n}\nexport default checkKeyType.bind(undefined, false);\nexport const checkKeyTypeWithJwk = checkKeyType.bind(undefined, true);\n", "import { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport generateIv from '../lib/iv.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { types } from './is_key_like.js';\nasync function cbcEncrypt(enc, plaintext, cek, iv, aad) {\n    if (!(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n    }\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['encrypt']);\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n        hash: `SHA-${keySize << 1}`,\n        name: 'HMAC',\n    }, false, ['sign']);\n    const ciphertext = new Uint8Array(await crypto.subtle.encrypt({\n        iv,\n        name: 'AES-CBC',\n    }, encKey, plaintext));\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const tag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n    return { ciphertext, tag, iv };\n}\nasync function gcmEncrypt(enc, plaintext, cek, iv, aad) {\n    let encKey;\n    if (cek instanceof Uint8Array) {\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['encrypt']);\n    }\n    else {\n        checkEncCryptoKey(cek, enc, 'encrypt');\n        encKey = cek;\n    }\n    const encrypted = new Uint8Array(await crypto.subtle.encrypt({\n        additionalData: aad,\n        iv,\n        name: 'AES-GCM',\n        tagLength: 128,\n    }, encKey, plaintext));\n    const tag = encrypted.slice(-16);\n    const ciphertext = encrypted.slice(0, -16);\n    return { ciphertext, tag, iv };\n}\nconst encrypt = async (enc, plaintext, cek, iv, aad) => {\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n    }\n    if (iv) {\n        checkIvLength(enc, iv);\n    }\n    else {\n        iv = generateIv(enc);\n    }\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            if (cek instanceof Uint8Array) {\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\n            }\n            return cbcEncrypt(enc, plaintext, cek, iv, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            if (cek instanceof Uint8Array) {\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n            }\n            return gcmEncrypt(enc, plaintext, cek, iv, aad);\n        default:\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexport default encrypt;\n", "import encrypt from '../runtime/encrypt.js';\nimport decrypt from '../runtime/decrypt.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nexport async function wrap(alg, key, cek, iv) {\n    const jweAlgorithm = alg.slice(0, 7);\n    const wrapped = await encrypt(jweAlgorithm, cek, key, iv, new Uint8Array(0));\n    return {\n        encryptedKey: wrapped.ciphertext,\n        iv: base64url(wrapped.iv),\n        tag: base64url(wrapped.tag),\n    };\n}\nexport async function unwrap(alg, key, encryptedKey, iv, tag) {\n    const jweAlgorithm = alg.slice(0, 7);\n    return decrypt(jweAlgorithm, key, encryptedKey, iv, tag, new Uint8Array(0));\n}\n", "import { unwrap as aesKw } from '../runtime/aeskw.js';\nimport * as ECDH from '../runtime/ecdhes.js';\nimport { decrypt as pbes2Kw } from '../runtime/pbes2kw.js';\nimport { decrypt as rsaEs } from '../runtime/rsaes.js';\nimport { decode as base64url } from '../runtime/base64url.js';\nimport normalize from '../runtime/normalize_key.js';\nimport { JOSENotSupported, JWEInvalid } from '../util/errors.js';\nimport { bitLength as cekLength } from '../lib/cek.js';\nimport { importJWK } from '../key/import.js';\nimport checkKeyType from './check_key_type.js';\nimport isObject from './is_object.js';\nimport { unwrap as aesGcmKw } from './aesgcmkw.js';\nasync function decryptKeyManagement(alg, key, encryptedKey, joseHeader, options) {\n    checkKeyType(alg, key, 'decrypt');\n    key = (await normalize.normalizePrivateKey?.(key, alg)) || key;\n    switch (alg) {\n        case 'dir': {\n            if (encryptedKey !== undefined)\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n            return key;\n        }\n        case 'ECDH-ES':\n            if (encryptedKey !== undefined)\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!isObject(joseHeader.epk))\n                throw new JWEInvalid(`JOSE Header \"epk\" (Ephemeral Public Key) missing or invalid`);\n            if (!ECDH.ecdhAllowed(key))\n                throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n            const epk = await importJWK(joseHeader.epk, alg);\n            let partyUInfo;\n            let partyVInfo;\n            if (joseHeader.apu !== undefined) {\n                if (typeof joseHeader.apu !== 'string')\n                    throw new JWEInvalid(`JOSE Header \"apu\" (Agreement PartyUInfo) invalid`);\n                try {\n                    partyUInfo = base64url(joseHeader.apu);\n                }\n                catch {\n                    throw new JWEInvalid('Failed to base64url decode the apu');\n                }\n            }\n            if (joseHeader.apv !== undefined) {\n                if (typeof joseHeader.apv !== 'string')\n                    throw new JWEInvalid(`JOSE Header \"apv\" (Agreement PartyVInfo) invalid`);\n                try {\n                    partyVInfo = base64url(joseHeader.apv);\n                }\n                catch {\n                    throw new JWEInvalid('Failed to base64url decode the apv');\n                }\n            }\n            const sharedSecret = await ECDH.deriveKey(epk, key, alg === 'ECDH-ES' ? joseHeader.enc : alg, alg === 'ECDH-ES' ? cekLength(joseHeader.enc) : parseInt(alg.slice(-5, -2), 10), partyUInfo, partyVInfo);\n            if (alg === 'ECDH-ES')\n                return sharedSecret;\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return aesKw(alg.slice(-6), sharedSecret, encryptedKey);\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return rsaEs(alg, key, encryptedKey);\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.p2c !== 'number')\n                throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) missing or invalid`);\n            const p2cLimit = options?.maxPBES2Count || 10000;\n            if (joseHeader.p2c > p2cLimit)\n                throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) out is of acceptable bounds`);\n            if (typeof joseHeader.p2s !== 'string')\n                throw new JWEInvalid(`JOSE Header \"p2s\" (PBES2 Salt) missing or invalid`);\n            let p2s;\n            try {\n                p2s = base64url(joseHeader.p2s);\n            }\n            catch {\n                throw new JWEInvalid('Failed to base64url decode the p2s');\n            }\n            return pbes2Kw(alg, key, encryptedKey, joseHeader.p2c, p2s);\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return aesKw(alg, key, encryptedKey);\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.iv !== 'string')\n                throw new JWEInvalid(`JOSE Header \"iv\" (Initialization Vector) missing or invalid`);\n            if (typeof joseHeader.tag !== 'string')\n                throw new JWEInvalid(`JOSE Header \"tag\" (Authentication Tag) missing or invalid`);\n            let iv;\n            try {\n                iv = base64url(joseHeader.iv);\n            }\n            catch {\n                throw new JWEInvalid('Failed to base64url decode the iv');\n            }\n            let tag;\n            try {\n                tag = base64url(joseHeader.tag);\n            }\n            catch {\n                throw new JWEInvalid('Failed to base64url decode the tag');\n            }\n            return aesGcmKw(alg, key, encryptedKey, iv, tag);\n        }\n        default: {\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n        }\n    }\n}\nexport default decryptKeyManagement;\n", "import { JOSENotSupported } from '../util/errors.js';\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader?.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\nexport default validateCrit;\n", "const validateAlgorithms = (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\nexport default validateAlgorithms;\n", "import { decode as base64url } from '../../runtime/base64url.js';\nimport decrypt from '../../runtime/decrypt.js';\nimport { JOSEAlgNotAllowed, JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport decryptKeyManagement from '../../lib/decrypt_key_management.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport generateCek from '../../lib/cek.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedDecrypt(jwe, key, options) {\n    if (!isObject(jwe)) {\n        throw new JWEInvalid('Flattened JWE must be an object');\n    }\n    if (jwe.protected === undefined && jwe.header === undefined && jwe.unprotected === undefined) {\n        throw new JWEInvalid('JOSE Header missing');\n    }\n    if (jwe.iv !== undefined && typeof jwe.iv !== 'string') {\n        throw new JWEInvalid('JWE Initialization Vector incorrect type');\n    }\n    if (typeof jwe.ciphertext !== 'string') {\n        throw new JWEInvalid('JWE Ciphertext missing or incorrect type');\n    }\n    if (jwe.tag !== undefined && typeof jwe.tag !== 'string') {\n        throw new JWEInvalid('JWE Authentication Tag incorrect type');\n    }\n    if (jwe.protected !== undefined && typeof jwe.protected !== 'string') {\n        throw new JWEInvalid('JWE Protected Header incorrect type');\n    }\n    if (jwe.encrypted_key !== undefined && typeof jwe.encrypted_key !== 'string') {\n        throw new JWEInvalid('JWE Encrypted Key incorrect type');\n    }\n    if (jwe.aad !== undefined && typeof jwe.aad !== 'string') {\n        throw new JWEInvalid('JWE AAD incorrect type');\n    }\n    if (jwe.header !== undefined && !isObject(jwe.header)) {\n        throw new JWEInvalid('JWE Shared Unprotected Header incorrect type');\n    }\n    if (jwe.unprotected !== undefined && !isObject(jwe.unprotected)) {\n        throw new JWEInvalid('JWE Per-Recipient Unprotected Header incorrect type');\n    }\n    let parsedProt;\n    if (jwe.protected) {\n        try {\n            const protectedHeader = base64url(jwe.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch {\n            throw new JWEInvalid('JWE Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jwe.header, jwe.unprotected)) {\n        throw new JWEInvalid('JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jwe.header,\n        ...jwe.unprotected,\n    };\n    validateCrit(JWEInvalid, new Map(), options?.crit, parsedProt, joseHeader);\n    if (joseHeader.zip !== undefined) {\n        throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported.');\n    }\n    const { alg, enc } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWEInvalid('missing JWE Algorithm (alg) in JWE Header');\n    }\n    if (typeof enc !== 'string' || !enc) {\n        throw new JWEInvalid('missing JWE Encryption Algorithm (enc) in JWE Header');\n    }\n    const keyManagementAlgorithms = options && validateAlgorithms('keyManagementAlgorithms', options.keyManagementAlgorithms);\n    const contentEncryptionAlgorithms = options &&\n        validateAlgorithms('contentEncryptionAlgorithms', options.contentEncryptionAlgorithms);\n    if ((keyManagementAlgorithms && !keyManagementAlgorithms.has(alg)) ||\n        (!keyManagementAlgorithms && alg.startsWith('PBES2'))) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter value not allowed');\n    }\n    if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {\n        throw new JOSEAlgNotAllowed('\"enc\" (Encryption Algorithm) Header Parameter value not allowed');\n    }\n    let encryptedKey;\n    if (jwe.encrypted_key !== undefined) {\n        try {\n            encryptedKey = base64url(jwe.encrypted_key);\n        }\n        catch {\n            throw new JWEInvalid('Failed to base64url decode the encrypted_key');\n        }\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jwe);\n        resolvedKey = true;\n    }\n    let cek;\n    try {\n        cek = await decryptKeyManagement(alg, key, encryptedKey, joseHeader, options);\n    }\n    catch (err) {\n        if (err instanceof TypeError || err instanceof JWEInvalid || err instanceof JOSENotSupported) {\n            throw err;\n        }\n        cek = generateCek(enc);\n    }\n    let iv;\n    let tag;\n    if (jwe.iv !== undefined) {\n        try {\n            iv = base64url(jwe.iv);\n        }\n        catch {\n            throw new JWEInvalid('Failed to base64url decode the iv');\n        }\n    }\n    if (jwe.tag !== undefined) {\n        try {\n            tag = base64url(jwe.tag);\n        }\n        catch {\n            throw new JWEInvalid('Failed to base64url decode the tag');\n        }\n    }\n    const protectedHeader = encoder.encode(jwe.protected ?? '');\n    let additionalData;\n    if (jwe.aad !== undefined) {\n        additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(jwe.aad));\n    }\n    else {\n        additionalData = protectedHeader;\n    }\n    let ciphertext;\n    try {\n        ciphertext = base64url(jwe.ciphertext);\n    }\n    catch {\n        throw new JWEInvalid('Failed to base64url decode the ciphertext');\n    }\n    const plaintext = await decrypt(enc, cek, ciphertext, iv, tag, additionalData);\n    const result = { plaintext };\n    if (jwe.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jwe.aad !== undefined) {\n        try {\n            result.additionalAuthenticatedData = base64url(jwe.aad);\n        }\n        catch {\n            throw new JWEInvalid('Failed to base64url decode the aad');\n        }\n    }\n    if (jwe.unprotected !== undefined) {\n        result.sharedUnprotectedHeader = jwe.unprotected;\n    }\n    if (jwe.header !== undefined) {\n        result.unprotectedHeader = jwe.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n", "import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactDecrypt(jwe, key, options) {\n    if (jwe instanceof Uint8Array) {\n        jwe = decoder.decode(jwe);\n    }\n    if (typeof jwe !== 'string') {\n        throw new JWEInvalid('Compact JWE must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: encryptedKey, 2: iv, 3: ciphertext, 4: tag, length, } = jwe.split('.');\n    if (length !== 5) {\n        throw new JWEInvalid('Invalid Compact JWE');\n    }\n    const decrypted = await flattenedDecrypt({\n        ciphertext,\n        iv: iv || undefined,\n        protected: protectedHeader,\n        tag: tag || undefined,\n        encrypted_key: encryptedKey || undefined,\n    }, key, options);\n    const result = { plaintext: decrypted.plaintext, protectedHeader: decrypted.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\n", "import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEDecryptionFailed, JWEInvalid } from '../../util/errors.js';\nimport isObject from '../../lib/is_object.js';\nexport async function generalDecrypt(jwe, key, options) {\n    if (!isObject(jwe)) {\n        throw new JWEInvalid('General JWE must be an object');\n    }\n    if (!Array.isArray(jwe.recipients) || !jwe.recipients.every(isObject)) {\n        throw new JWEInvalid('JWE Recipients missing or incorrect type');\n    }\n    if (!jwe.recipients.length) {\n        throw new JWEInvalid('JWE Recipients has no members');\n    }\n    for (const recipient of jwe.recipients) {\n        try {\n            return await flattenedDecrypt({\n                aad: jwe.aad,\n                ciphertext: jwe.ciphertext,\n                encrypted_key: recipient.encrypted_key,\n                header: recipient.header,\n                iv: jwe.iv,\n                protected: jwe.protected,\n                tag: jwe.tag,\n                unprotected: jwe.unprotected,\n            }, key, options);\n        }\n        catch {\n        }\n    }\n    throw new JWEDecryptionFailed();\n}\n", "export const unprotected = Symbol();\n", "import crypto, { isCryptoKey } from './webcrypto.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { encode as base64url } from './base64url.js';\nimport { types } from './is_key_like.js';\nconst keyToJWK = async (key) => {\n    if (key instanceof Uint8Array) {\n        return {\n            kty: 'oct',\n            k: base64url(key),\n        };\n    }\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n    }\n    if (!key.extractable) {\n        throw new TypeError('non-extractable CryptoKey cannot be exported as a JWK');\n    }\n    const { ext, key_ops, alg, use, ...jwk } = await crypto.subtle.exportKey('jwk', key);\n    return jwk;\n};\nexport default keyToJWK;\n", "import { toSPKI as exportPublic } from '../runtime/asn1.js';\nimport { toPKCS8 as exportPrivate } from '../runtime/asn1.js';\nimport keyToJWK from '../runtime/key_to_jwk.js';\nexport async function exportSPKI(key) {\n    return exportPublic(key);\n}\nexport async function exportPKCS8(key) {\n    return exportPrivate(key);\n}\nexport async function exportJWK(key) {\n    return keyToJWK(key);\n}\n", "import { wrap as aesKw } from '../runtime/aeskw.js';\nimport * as ECDH from '../runtime/ecdhes.js';\nimport { encrypt as pbes2Kw } from '../runtime/pbes2kw.js';\nimport { encrypt as rsaEs } from '../runtime/rsaes.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport normalize from '../runtime/normalize_key.js';\nimport generateCek, { bitLength as cekLength } from '../lib/cek.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { exportJWK } from '../key/export.js';\nimport checkKeyType from './check_key_type.js';\nimport { wrap as aesGcmKw } from './aesgcmkw.js';\nasync function encryptKeyManagement(alg, enc, key, providedCek, providedParameters = {}) {\n    let encryptedKey;\n    let parameters;\n    let cek;\n    checkKeyType(alg, key, 'encrypt');\n    key = (await normalize.normalizePublicKey?.(key, alg)) || key;\n    switch (alg) {\n        case 'dir': {\n            cek = key;\n            break;\n        }\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!ECDH.ecdhAllowed(key)) {\n                throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n            }\n            const { apu, apv } = providedParameters;\n            let { epk: ephemeralKey } = providedParameters;\n            ephemeralKey || (ephemeralKey = (await ECDH.generateEpk(key)).privateKey);\n            const { x, y, crv, kty } = await exportJWK(ephemeralKey);\n            const sharedSecret = await ECDH.deriveKey(key, ephemeralKey, alg === 'ECDH-ES' ? enc : alg, alg === 'ECDH-ES' ? cekLength(enc) : parseInt(alg.slice(-5, -2), 10), apu, apv);\n            parameters = { epk: { x, crv, kty } };\n            if (kty === 'EC')\n                parameters.epk.y = y;\n            if (apu)\n                parameters.apu = base64url(apu);\n            if (apv)\n                parameters.apv = base64url(apv);\n            if (alg === 'ECDH-ES') {\n                cek = sharedSecret;\n                break;\n            }\n            cek = providedCek || generateCek(enc);\n            const kwAlg = alg.slice(-6);\n            encryptedKey = await aesKw(kwAlg, sharedSecret, cek);\n            break;\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            cek = providedCek || generateCek(enc);\n            encryptedKey = await rsaEs(alg, key, cek);\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            cek = providedCek || generateCek(enc);\n            const { p2c, p2s } = providedParameters;\n            ({ encryptedKey, ...parameters } = await pbes2Kw(alg, key, cek, p2c, p2s));\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            cek = providedCek || generateCek(enc);\n            encryptedKey = await aesKw(alg, key, cek);\n            break;\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            cek = providedCek || generateCek(enc);\n            const { iv } = providedParameters;\n            ({ encryptedKey, ...parameters } = await aesGcmKw(alg, key, cek, iv));\n            break;\n        }\n        default: {\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n        }\n    }\n    return { cek, encryptedKey, parameters };\n}\nexport default encryptKeyManagement;\n", "import { encode as base64url } from '../../runtime/base64url.js';\nimport { unprotected } from '../../lib/private_symbols.js';\nimport encrypt from '../../runtime/encrypt.js';\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\nimport { JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport validateCrit from '../../lib/validate_crit.js';\nexport class FlattenedEncrypt {\n    constructor(plaintext) {\n        if (!(plaintext instanceof Uint8Array)) {\n            throw new TypeError('plaintext must be an instance of Uint8Array');\n        }\n        this._plaintext = plaintext;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._sharedUnprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._sharedUnprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    async encrypt(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader && !this._sharedUnprotectedHeader) {\n            throw new JWEInvalid('either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()');\n        }\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, this._sharedUnprotectedHeader)) {\n            throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n            ...this._sharedUnprotectedHeader,\n        };\n        validateCrit(JWEInvalid, new Map(), options?.crit, this._protectedHeader, joseHeader);\n        if (joseHeader.zip !== undefined) {\n            throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported.');\n        }\n        const { alg, enc } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        if (typeof enc !== 'string' || !enc) {\n            throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n        }\n        let encryptedKey;\n        if (this._cek && (alg === 'dir' || alg === 'ECDH-ES')) {\n            throw new TypeError(`setContentEncryptionKey cannot be called with JWE \"alg\" (Algorithm) Header ${alg}`);\n        }\n        let cek;\n        {\n            let parameters;\n            ({ cek, encryptedKey, parameters } = await encryptKeyManagement(alg, enc, key, this._cek, this._keyManagementParameters));\n            if (parameters) {\n                if (options && unprotected in options) {\n                    if (!this._unprotectedHeader) {\n                        this.setUnprotectedHeader(parameters);\n                    }\n                    else {\n                        this._unprotectedHeader = { ...this._unprotectedHeader, ...parameters };\n                    }\n                }\n                else if (!this._protectedHeader) {\n                    this.setProtectedHeader(parameters);\n                }\n                else {\n                    this._protectedHeader = { ...this._protectedHeader, ...parameters };\n                }\n            }\n        }\n        let additionalData;\n        let protectedHeader;\n        let aadMember;\n        if (this._protectedHeader) {\n            protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        if (this._aad) {\n            aadMember = base64url(this._aad);\n            additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(aadMember));\n        }\n        else {\n            additionalData = protectedHeader;\n        }\n        const { ciphertext, tag, iv } = await encrypt(enc, this._plaintext, cek, this._iv, additionalData);\n        const jwe = {\n            ciphertext: base64url(ciphertext),\n        };\n        if (iv) {\n            jwe.iv = base64url(iv);\n        }\n        if (tag) {\n            jwe.tag = base64url(tag);\n        }\n        if (encryptedKey) {\n            jwe.encrypted_key = base64url(encryptedKey);\n        }\n        if (aadMember) {\n            jwe.aad = aadMember;\n        }\n        if (this._protectedHeader) {\n            jwe.protected = decoder.decode(protectedHeader);\n        }\n        if (this._sharedUnprotectedHeader) {\n            jwe.unprotected = this._sharedUnprotectedHeader;\n        }\n        if (this._unprotectedHeader) {\n            jwe.header = this._unprotectedHeader;\n        }\n        return jwe;\n    }\n}\n", "import { FlattenedEncrypt } from '../flattened/encrypt.js';\nimport { unprotected } from '../../lib/private_symbols.js';\nimport { JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport generateCek from '../../lib/cek.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\nimport { encode as base64url } from '../../runtime/base64url.js';\nimport validateCrit from '../../lib/validate_crit.js';\nclass IndividualRecipient {\n    constructor(enc, key, options) {\n        this.parent = enc;\n        this.key = key;\n        this.options = options;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addRecipient(...args) {\n        return this.parent.addRecipient(...args);\n    }\n    encrypt(...args) {\n        return this.parent.encrypt(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nexport class GeneralEncrypt {\n    constructor(plaintext) {\n        this._recipients = [];\n        this._plaintext = plaintext;\n    }\n    addRecipient(key, options) {\n        const recipient = new IndividualRecipient(this, key, { crit: options?.crit });\n        this._recipients.push(recipient);\n        return recipient;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    async encrypt() {\n        if (!this._recipients.length) {\n            throw new JWEInvalid('at least one recipient must be added');\n        }\n        if (this._recipients.length === 1) {\n            const [recipient] = this._recipients;\n            const flattened = await new FlattenedEncrypt(this._plaintext)\n                .setAdditionalAuthenticatedData(this._aad)\n                .setProtectedHeader(this._protectedHeader)\n                .setSharedUnprotectedHeader(this._unprotectedHeader)\n                .setUnprotectedHeader(recipient.unprotectedHeader)\n                .encrypt(recipient.key, { ...recipient.options });\n            const jwe = {\n                ciphertext: flattened.ciphertext,\n                iv: flattened.iv,\n                recipients: [{}],\n                tag: flattened.tag,\n            };\n            if (flattened.aad)\n                jwe.aad = flattened.aad;\n            if (flattened.protected)\n                jwe.protected = flattened.protected;\n            if (flattened.unprotected)\n                jwe.unprotected = flattened.unprotected;\n            if (flattened.encrypted_key)\n                jwe.recipients[0].encrypted_key = flattened.encrypted_key;\n            if (flattened.header)\n                jwe.recipients[0].header = flattened.header;\n            return jwe;\n        }\n        let enc;\n        for (let i = 0; i < this._recipients.length; i++) {\n            const recipient = this._recipients[i];\n            if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, recipient.unprotectedHeader)) {\n                throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n            }\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader,\n            };\n            const { alg } = joseHeader;\n            if (typeof alg !== 'string' || !alg) {\n                throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n            }\n            if (alg === 'dir' || alg === 'ECDH-ES') {\n                throw new JWEInvalid('\"dir\" and \"ECDH-ES\" alg may only be used with a single recipient');\n            }\n            if (typeof joseHeader.enc !== 'string' || !joseHeader.enc) {\n                throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n            }\n            if (!enc) {\n                enc = joseHeader.enc;\n            }\n            else if (enc !== joseHeader.enc) {\n                throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter must be the same for all recipients');\n            }\n            validateCrit(JWEInvalid, new Map(), recipient.options.crit, this._protectedHeader, joseHeader);\n            if (joseHeader.zip !== undefined) {\n                throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported.');\n            }\n        }\n        const cek = generateCek(enc);\n        const jwe = {\n            ciphertext: '',\n            iv: '',\n            recipients: [],\n            tag: '',\n        };\n        for (let i = 0; i < this._recipients.length; i++) {\n            const recipient = this._recipients[i];\n            const target = {};\n            jwe.recipients.push(target);\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader,\n            };\n            const p2c = joseHeader.alg.startsWith('PBES2') ? 2048 + i : undefined;\n            if (i === 0) {\n                const flattened = await new FlattenedEncrypt(this._plaintext)\n                    .setAdditionalAuthenticatedData(this._aad)\n                    .setContentEncryptionKey(cek)\n                    .setProtectedHeader(this._protectedHeader)\n                    .setSharedUnprotectedHeader(this._unprotectedHeader)\n                    .setUnprotectedHeader(recipient.unprotectedHeader)\n                    .setKeyManagementParameters({ p2c })\n                    .encrypt(recipient.key, {\n                    ...recipient.options,\n                    [unprotected]: true,\n                });\n                jwe.ciphertext = flattened.ciphertext;\n                jwe.iv = flattened.iv;\n                jwe.tag = flattened.tag;\n                if (flattened.aad)\n                    jwe.aad = flattened.aad;\n                if (flattened.protected)\n                    jwe.protected = flattened.protected;\n                if (flattened.unprotected)\n                    jwe.unprotected = flattened.unprotected;\n                target.encrypted_key = flattened.encrypted_key;\n                if (flattened.header)\n                    target.header = flattened.header;\n                continue;\n            }\n            const { encryptedKey, parameters } = await encryptKeyManagement(recipient.unprotectedHeader?.alg ||\n                this._protectedHeader?.alg ||\n                this._unprotectedHeader?.alg, enc, recipient.key, cek, { p2c });\n            target.encrypted_key = base64url(encryptedKey);\n            if (recipient.unprotectedHeader || parameters)\n                target.header = { ...recipient.unprotectedHeader, ...parameters };\n        }\n        return jwe;\n    }\n}\n", "import { JOSENotSupported } from '../util/errors.js';\nexport default function subtleDsa(alg, algorithm) {\n    const hash = `SHA-${alg.slice(-3)}`;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            return { hash, name: 'HMAC' };\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { hash, name: 'RSA-PSS', saltLength: alg.slice(-3) >> 3 };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { hash, name: 'RSASSA-PKCS1-v1_5' };\n        case 'ES256':\n        case 'ES384':\n        case 'ES512':\n            return { hash, name: 'ECDSA', namedCurve: algorithm.namedCurve };\n        case 'Ed25519':\n            return { name: 'Ed25519' };\n        case 'EdDSA':\n            return { name: algorithm.name };\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n", "import crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkSigCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nimport normalize from './normalize_key.js';\nexport default async function getCryptoKey(alg, key, usage) {\n    if (usage === 'sign') {\n        key = await normalize.normalizePrivateKey(key, alg);\n    }\n    if (usage === 'verify') {\n        key = await normalize.normalizePublicKey(key, alg);\n    }\n    if (isCryptoKey(key)) {\n        checkSigCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError(invalidKeyInput(key, ...types));\n        }\n        return crypto.subtle.importKey('raw', key, { hash: `SHA-${alg.slice(-3)}`, name: 'HMAC' }, false, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array', 'JSON Web Key'));\n}\n", "import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nconst verify = async (alg, key, signature, data) => {\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\n    checkKeyLength(alg, cryptoKey);\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\n    try {\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n    }\n    catch {\n        return false;\n    }\n};\nexport default verify;\n", "import { decode as base64url } from '../../runtime/base64url.js';\nimport verify from '../../runtime/verify.js';\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport { checkKeyTypeWithJwk } from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nimport { isJWK } from '../../lib/is_jwk.js';\nimport { importJWK } from '../../key/import.js';\nexport async function flattenedVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !isObject(jws.header)) {\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = base64url(jws.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch {\n            throw new JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jws.header)) {\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter value not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n        checkKeyTypeWithJwk(alg, key, 'verify');\n        if (isJWK(key)) {\n            key = await importJWK(key, alg);\n        }\n    }\n    else {\n        checkKeyTypeWithJwk(alg, key, 'verify');\n    }\n    const data = concat(encoder.encode(jws.protected ?? ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n    let signature;\n    try {\n        signature = base64url(jws.signature);\n    }\n    catch {\n        throw new JWSInvalid('Failed to base64url decode the signature');\n    }\n    const verified = await verify(alg, key, signature, data);\n    if (!verified) {\n        throw new JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        try {\n            payload = base64url(jws.payload);\n        }\n        catch {\n            throw new JWSInvalid('Failed to base64url decode the payload');\n        }\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n", "import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n", "import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport isObject from '../../lib/is_object.js';\nexport async function generalVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('General JWS must be an object');\n    }\n    if (!Array.isArray(jws.signatures) || !jws.signatures.every(isObject)) {\n        throw new JWSInvalid('JWS Signatures missing or incorrect type');\n    }\n    for (const signature of jws.signatures) {\n        try {\n            return await flattenedVerify({\n                header: signature.header,\n                payload: jws.payload,\n                protected: signature.protected,\n                signature: signature.signature,\n            }, key, options);\n        }\n        catch {\n        }\n    }\n    throw new JWSSignatureVerificationFailed();\n}\n", "export default (date) => Math.floor(date.getTime() / 1000);\n", "const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\+|\\-)? ?(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched || (matched[4] && matched[1])) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[2]);\n    const unit = matched[3].toLowerCase();\n    let numericDate;\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            numericDate = Math.round(value);\n            break;\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            numericDate = Math.round(value * minute);\n            break;\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            numericDate = Math.round(value * hour);\n            break;\n        case 'day':\n        case 'days':\n        case 'd':\n            numericDate = Math.round(value * day);\n            break;\n        case 'week':\n        case 'weeks':\n        case 'w':\n            numericDate = Math.round(value * week);\n            break;\n        default:\n            numericDate = Math.round(value * year);\n            break;\n    }\n    if (matched[1] === '-' || matched[4] === 'ago') {\n        return -numericDate;\n    }\n    return numericDate;\n};\n", "import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport default (protectedHeader, encodedPayload, options = {}) => {\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', payload, 'typ', 'check_failed');\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    const presenceCheck = [...requiredClaims];\n    if (maxTokenAge !== undefined)\n        presenceCheck.push('iat');\n    if (audience !== undefined)\n        presenceCheck.push('aud');\n    if (subject !== undefined)\n        presenceCheck.push('sub');\n    if (issuer !== undefined)\n        presenceCheck.push('iss');\n    for (const claim of new Set(presenceCheck.reverse())) {\n        if (!(claim in payload)) {\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, payload, claim, 'missing');\n        }\n    }\n    if (issuer &&\n        !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', payload, 'iss', 'check_failed');\n    }\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', payload, 'sub', 'check_failed');\n    }\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', payload, 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', payload, 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', payload, 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', payload, 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', payload, 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', payload, 'exp', 'check_failed');\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', payload, 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', payload, 'iat', 'check_failed');\n        }\n    }\n    return payload;\n};\n", "import { compactVerify } from '../jws/compact/verify.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n    const verified = await compactVerify(jwt, key, options);\n    if (verified.protectedHeader.crit?.includes('b64') && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = jwtPayload(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n", "import { compactDecrypt } from '../jwe/compact/decrypt.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTClaimValidationFailed } from '../util/errors.js';\nexport async function jwtDecrypt(jwt, key, options) {\n    const decrypted = await compactDecrypt(jwt, key, options);\n    const payload = jwtPayload(decrypted.protectedHeader, decrypted.plaintext, options);\n    const { protectedHeader } = decrypted;\n    if (protectedHeader.iss !== undefined && protectedHeader.iss !== payload.iss) {\n        throw new JWTClaimValidationFailed('replicated \"iss\" claim header parameter mismatch', payload, 'iss', 'mismatch');\n    }\n    if (protectedHeader.sub !== undefined && protectedHeader.sub !== payload.sub) {\n        throw new JWTClaimValidationFailed('replicated \"sub\" claim header parameter mismatch', payload, 'sub', 'mismatch');\n    }\n    if (protectedHeader.aud !== undefined &&\n        JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud)) {\n        throw new JWTClaimValidationFailed('replicated \"aud\" claim header parameter mismatch', payload, 'aud', 'mismatch');\n    }\n    const result = { payload, protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\n", "import { FlattenedEncrypt } from '../flattened/encrypt.js';\nexport class CompactEncrypt {\n    constructor(plaintext) {\n        this._flattened = new FlattenedEncrypt(plaintext);\n    }\n    setContentEncryptionKey(cek) {\n        this._flattened.setContentEncryptionKey(cek);\n        return this;\n    }\n    setInitializationVector(iv) {\n        this._flattened.setInitializationVector(iv);\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        this._flattened.setKeyManagementParameters(parameters);\n        return this;\n    }\n    async encrypt(key, options) {\n        const jwe = await this._flattened.encrypt(key, options);\n        return [jwe.protected, jwe.encrypted_key, jwe.iv, jwe.ciphertext, jwe.tag].join('.');\n    }\n}\n", "import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getSignKey from './get_sign_verify_key.js';\nconst sign = async (alg, key, data) => {\n    const cryptoKey = await getSignKey(alg, key, 'sign');\n    checkKeyLength(alg, cryptoKey);\n    const signature = await crypto.subtle.sign(subtleAlgorithm(alg, cryptoKey.algorithm), cryptoKey, data);\n    return new Uint8Array(signature);\n};\nexport default sign;\n", "import { encode as base64url } from '../../runtime/base64url.js';\nimport sign from '../../runtime/sign.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport { checkKeyTypeWithJwk } from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nexport class FlattenedSign {\n    constructor(payload) {\n        if (!(payload instanceof Uint8Array)) {\n            throw new TypeError('payload must be an instance of Uint8Array');\n        }\n        this._payload = payload;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader) {\n            throw new JWSInvalid('either setProtectedHeader or setUnprotectedHeader must be called before #sign()');\n        }\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader)) {\n            throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n        };\n        const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, this._protectedHeader, joseHeader);\n        let b64 = true;\n        if (extensions.has('b64')) {\n            b64 = this._protectedHeader.b64;\n            if (typeof b64 !== 'boolean') {\n                throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n            }\n        }\n        const { alg } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        checkKeyTypeWithJwk(alg, key, 'sign');\n        let payload = this._payload;\n        if (b64) {\n            payload = encoder.encode(base64url(payload));\n        }\n        let protectedHeader;\n        if (this._protectedHeader) {\n            protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        const data = concat(protectedHeader, encoder.encode('.'), payload);\n        const signature = await sign(alg, key, data);\n        const jws = {\n            signature: base64url(signature),\n            payload: '',\n        };\n        if (b64) {\n            jws.payload = decoder.decode(payload);\n        }\n        if (this._unprotectedHeader) {\n            jws.header = this._unprotectedHeader;\n        }\n        if (this._protectedHeader) {\n            jws.protected = decoder.decode(protectedHeader);\n        }\n        return jws;\n    }\n}\n", "import { FlattenedSign } from '../flattened/sign.js';\nexport class CompactSign {\n    constructor(payload) {\n        this._flattened = new FlattenedSign(payload);\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    async sign(key, options) {\n        const jws = await this._flattened.sign(key, options);\n        if (jws.payload === undefined) {\n            throw new TypeError('use the flattened module for creating JWS with b64: false');\n        }\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    }\n}\n", "import { FlattenedSign } from '../flattened/sign.js';\nimport { JWSInvalid } from '../../util/errors.js';\nclass IndividualSignature {\n    constructor(sig, key, options) {\n        this.parent = sig;\n        this.key = key;\n        this.options = options;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this.protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this.protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addSignature(...args) {\n        return this.parent.addSignature(...args);\n    }\n    sign(...args) {\n        return this.parent.sign(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nexport class GeneralSign {\n    constructor(payload) {\n        this._signatures = [];\n        this._payload = payload;\n    }\n    addSignature(key, options) {\n        const signature = new IndividualSignature(this, key, options);\n        this._signatures.push(signature);\n        return signature;\n    }\n    async sign() {\n        if (!this._signatures.length) {\n            throw new JWSInvalid('at least one signature must be added');\n        }\n        const jws = {\n            signatures: [],\n            payload: '',\n        };\n        for (let i = 0; i < this._signatures.length; i++) {\n            const signature = this._signatures[i];\n            const flattened = new FlattenedSign(this._payload);\n            flattened.setProtectedHeader(signature.protectedHeader);\n            flattened.setUnprotectedHeader(signature.unprotectedHeader);\n            const { payload, ...rest } = await flattened.sign(signature.key, signature.options);\n            if (i === 0) {\n                jws.payload = payload;\n            }\n            else if (jws.payload !== payload) {\n                throw new JWSInvalid('inconsistent use of JWS Unencoded Payload (RFC7797)');\n            }\n            jws.signatures.push(rest);\n        }\n        return jws;\n    }\n}\n", "import epoch from '../lib/epoch.js';\nimport isObject from '../lib/is_object.js';\nimport secs from '../lib/secs.js';\nfunction validateInput(label, input) {\n    if (!Number.isFinite(input)) {\n        throw new TypeError(`Invalid ${label} input`);\n    }\n    return input;\n}\nexport class ProduceJWT {\n    constructor(payload = {}) {\n        if (!isObject(payload)) {\n            throw new TypeError('JWT Claims Set MUST be an object');\n        }\n        this._payload = payload;\n    }\n    setIssuer(issuer) {\n        this._payload = { ...this._payload, iss: issuer };\n        return this;\n    }\n    setSubject(subject) {\n        this._payload = { ...this._payload, sub: subject };\n        return this;\n    }\n    setAudience(audience) {\n        this._payload = { ...this._payload, aud: audience };\n        return this;\n    }\n    setJti(jwtId) {\n        this._payload = { ...this._payload, jti: jwtId };\n        return this;\n    }\n    setNotBefore(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, nbf: validateInput('setNotBefore', input) };\n        }\n        else if (input instanceof Date) {\n            this._payload = { ...this._payload, nbf: validateInput('setNotBefore', epoch(input)) };\n        }\n        else {\n            this._payload = { ...this._payload, nbf: epoch(new Date()) + secs(input) };\n        }\n        return this;\n    }\n    setExpirationTime(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, exp: validateInput('setExpirationTime', input) };\n        }\n        else if (input instanceof Date) {\n            this._payload = { ...this._payload, exp: validateInput('setExpirationTime', epoch(input)) };\n        }\n        else {\n            this._payload = { ...this._payload, exp: epoch(new Date()) + secs(input) };\n        }\n        return this;\n    }\n    setIssuedAt(input) {\n        if (typeof input === 'undefined') {\n            this._payload = { ...this._payload, iat: epoch(new Date()) };\n        }\n        else if (input instanceof Date) {\n            this._payload = { ...this._payload, iat: validateInput('setIssuedAt', epoch(input)) };\n        }\n        else if (typeof input === 'string') {\n            this._payload = {\n                ...this._payload,\n                iat: validateInput('setIssuedAt', epoch(new Date()) + secs(input)),\n            };\n        }\n        else {\n            this._payload = { ...this._payload, iat: validateInput('setIssuedAt', input) };\n        }\n        return this;\n    }\n}\n", "import { CompactSign } from '../jws/compact/sign.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport { ProduceJWT } from './produce.js';\nexport class SignJWT extends ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        const sig = new CompactSign(encoder.encode(JSON.stringify(this._payload)));\n        sig.setProtectedHeader(this._protectedHeader);\n        if (Array.isArray(this._protectedHeader?.crit) &&\n            this._protectedHeader.crit.includes('b64') &&\n            this._protectedHeader.b64 === false) {\n            throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n        }\n        return sig.sign(key, options);\n    }\n}\n", "import { CompactEncrypt } from '../jwe/compact/encrypt.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport { ProduceJWT } from './produce.js';\nexport class EncryptJWT extends ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    replicateIssuerAsHeader() {\n        this._replicateIssuerAsHeader = true;\n        return this;\n    }\n    replicateSubjectAsHeader() {\n        this._replicateSubjectAsHeader = true;\n        return this;\n    }\n    replicateAudienceAsHeader() {\n        this._replicateAudienceAsHeader = true;\n        return this;\n    }\n    async encrypt(key, options) {\n        const enc = new CompactEncrypt(encoder.encode(JSON.stringify(this._payload)));\n        if (this._replicateIssuerAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, iss: this._payload.iss };\n        }\n        if (this._replicateSubjectAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, sub: this._payload.sub };\n        }\n        if (this._replicateAudienceAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, aud: this._payload.aud };\n        }\n        enc.setProtectedHeader(this._protectedHeader);\n        if (this._iv) {\n            enc.setInitializationVector(this._iv);\n        }\n        if (this._cek) {\n            enc.setContentEncryptionKey(this._cek);\n        }\n        if (this._keyManagementParameters) {\n            enc.setKeyManagementParameters(this._keyManagementParameters);\n        }\n        return enc.encrypt(key, options);\n    }\n}\n", "import digest from '../runtime/digest.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWKInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nconst check = (value, description) => {\n    if (typeof value !== 'string' || !value) {\n        throw new JWKInvalid(`${description} missing or invalid`);\n    }\n};\nexport async function calculateJwkThumbprint(jwk, digestAlgorithm) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    digestAlgorithm ?? (digestAlgorithm = 'sha256');\n    if (digestAlgorithm !== 'sha256' &&\n        digestAlgorithm !== 'sha384' &&\n        digestAlgorithm !== 'sha512') {\n        throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\n    }\n    let components;\n    switch (jwk.kty) {\n        case 'EC':\n            check(jwk.crv, '\"crv\" (Curve) Parameter');\n            check(jwk.x, '\"x\" (X Coordinate) Parameter');\n            check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x, y: jwk.y };\n            break;\n        case 'OKP':\n            check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n            check(jwk.x, '\"x\" (Public Key) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x };\n            break;\n        case 'RSA':\n            check(jwk.e, '\"e\" (Exponent) Parameter');\n            check(jwk.n, '\"n\" (Modulus) Parameter');\n            components = { e: jwk.e, kty: jwk.kty, n: jwk.n };\n            break;\n        case 'oct':\n            check(jwk.k, '\"k\" (Key Value) Parameter');\n            components = { k: jwk.k, kty: jwk.kty };\n            break;\n        default:\n            throw new JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n    }\n    const data = encoder.encode(JSON.stringify(components));\n    return base64url(await digest(digestAlgorithm, data));\n}\nexport async function calculateJwkThumbprintUri(jwk, digestAlgorithm) {\n    digestAlgorithm ?? (digestAlgorithm = 'sha256');\n    const thumbprint = await calculateJwkThumbprint(jwk, digestAlgorithm);\n    return `urn:ietf:params:oauth:jwk-thumbprint:sha-${digestAlgorithm.slice(-3)}:${thumbprint}`;\n}\n", "import { importJWK } from '../key/import.js';\nimport isObject from '../lib/is_object.js';\nimport { JWSInvalid } from '../util/errors.js';\nexport async function EmbeddedJWK(protectedHeader, token) {\n    const joseHeader = {\n        ...protectedHeader,\n        ...token?.header,\n    };\n    if (!isObject(joseHeader.jwk)) {\n        throw new JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a JSON object');\n    }\n    const key = await importJWK({ ...joseHeader.jwk, ext: true }, joseHeader.alg);\n    if (key instanceof Uint8Array || key.type !== 'public') {\n        throw new JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a public key');\n    }\n    return key;\n}\n", "import { importJWK } from '../key/import.js';\nimport { JWKSInvalid, JOSENotSupported, JWKSNoMatchingKey, JWKSMultipleMatchingKeys, } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nfunction getKtyFromAlg(alg) {\n    switch (typeof alg === 'string' && alg.slice(0, 2)) {\n        case 'RS':\n        case 'PS':\n            return 'RSA';\n        case 'ES':\n            return 'EC';\n        case 'Ed':\n            return 'OKP';\n        default:\n            throw new JOSENotSupported('Unsupported \"alg\" value for a JSON Web Key Set');\n    }\n}\nfunction isJWKSLike(jwks) {\n    return (jwks &&\n        typeof jwks === 'object' &&\n        Array.isArray(jwks.keys) &&\n        jwks.keys.every(isJWKLike));\n}\nfunction isJWKLike(key) {\n    return isObject(key);\n}\nfunction clone(obj) {\n    if (typeof structuredClone === 'function') {\n        return structuredClone(obj);\n    }\n    return JSON.parse(JSON.stringify(obj));\n}\nclass LocalJWKSet {\n    constructor(jwks) {\n        this._cached = new WeakMap();\n        if (!isJWKSLike(jwks)) {\n            throw new JWKSInvalid('JSON Web Key Set malformed');\n        }\n        this._jwks = clone(jwks);\n    }\n    async getKey(protectedHeader, token) {\n        const { alg, kid } = { ...protectedHeader, ...token?.header };\n        const kty = getKtyFromAlg(alg);\n        const candidates = this._jwks.keys.filter((jwk) => {\n            let candidate = kty === jwk.kty;\n            if (candidate && typeof kid === 'string') {\n                candidate = kid === jwk.kid;\n            }\n            if (candidate && typeof jwk.alg === 'string') {\n                candidate = alg === jwk.alg;\n            }\n            if (candidate && typeof jwk.use === 'string') {\n                candidate = jwk.use === 'sig';\n            }\n            if (candidate && Array.isArray(jwk.key_ops)) {\n                candidate = jwk.key_ops.includes('verify');\n            }\n            if (candidate) {\n                switch (alg) {\n                    case 'ES256':\n                        candidate = jwk.crv === 'P-256';\n                        break;\n                    case 'ES256K':\n                        candidate = jwk.crv === 'secp256k1';\n                        break;\n                    case 'ES384':\n                        candidate = jwk.crv === 'P-384';\n                        break;\n                    case 'ES512':\n                        candidate = jwk.crv === 'P-521';\n                        break;\n                    case 'Ed25519':\n                        candidate = jwk.crv === 'Ed25519';\n                        break;\n                    case 'EdDSA':\n                        candidate = jwk.crv === 'Ed25519' || jwk.crv === 'Ed448';\n                        break;\n                }\n            }\n            return candidate;\n        });\n        const { 0: jwk, length } = candidates;\n        if (length === 0) {\n            throw new JWKSNoMatchingKey();\n        }\n        if (length !== 1) {\n            const error = new JWKSMultipleMatchingKeys();\n            const { _cached } = this;\n            error[Symbol.asyncIterator] = async function* () {\n                for (const jwk of candidates) {\n                    try {\n                        yield await importWithAlgCache(_cached, jwk, alg);\n                    }\n                    catch { }\n                }\n            };\n            throw error;\n        }\n        return importWithAlgCache(this._cached, jwk, alg);\n    }\n}\nasync function importWithAlgCache(cache, jwk, alg) {\n    const cached = cache.get(jwk) || cache.set(jwk, {}).get(jwk);\n    if (cached[alg] === undefined) {\n        const key = await importJWK({ ...jwk, ext: true }, alg);\n        if (key instanceof Uint8Array || key.type !== 'public') {\n            throw new JWKSInvalid('JSON Web Key Set members must be public keys');\n        }\n        cached[alg] = key;\n    }\n    return cached[alg];\n}\nexport function createLocalJWKSet(jwks) {\n    const set = new LocalJWKSet(jwks);\n    const localJWKSet = async (protectedHeader, token) => set.getKey(protectedHeader, token);\n    Object.defineProperties(localJWKSet, {\n        jwks: {\n            value: () => clone(set._jwks),\n            enumerable: true,\n            configurable: false,\n            writable: false,\n        },\n    });\n    return localJWKSet;\n}\n", "import { JOSEError, JWKSTimeout } from '../util/errors.js';\nconst fetchJwks = async (url, timeout, options) => {\n    let controller;\n    let id;\n    let timedOut = false;\n    if (typeof AbortController === 'function') {\n        controller = new AbortController();\n        id = setTimeout(() => {\n            timedOut = true;\n            controller.abort();\n        }, timeout);\n    }\n    const response = await fetch(url.href, {\n        signal: controller ? controller.signal : undefined,\n        redirect: 'manual',\n        headers: options.headers,\n    }).catch((err) => {\n        if (timedOut)\n            throw new JWKSTimeout();\n        throw err;\n    });\n    if (id !== undefined)\n        clearTimeout(id);\n    if (response.status !== 200) {\n        throw new JOSEError('Expected 200 OK from the JSON Web Key Set HTTP response');\n    }\n    try {\n        return await response.json();\n    }\n    catch {\n        throw new JOSEError('Failed to parse the JSON Web Key Set HTTP response as JSON');\n    }\n};\nexport default fetchJwks;\n", "import fetchJwks from '../runtime/fetch_jwks.js';\nimport { JWKSNoMatchingKey } from '../util/errors.js';\nimport { createLocalJWKSet } from './local.js';\nimport isObject from '../lib/is_object.js';\nfunction isCloudflareWorkers() {\n    return (typeof WebSocketPair !== 'undefined' ||\n        (typeof navigator !== 'undefined' && navigator.userAgent === 'Cloudflare-Workers') ||\n        (typeof EdgeRuntime !== 'undefined' && EdgeRuntime === 'vercel'));\n}\nlet USER_AGENT;\nif (typeof navigator === 'undefined' || !navigator.userAgent?.startsWith?.('Mozilla/5.0 ')) {\n    const NAME = 'jose';\n    const VERSION = 'v5.10.0';\n    USER_AGENT = `${NAME}/${VERSION}`;\n}\nexport const jwksCache = Symbol();\nfunction isFreshJwksCache(input, cacheMaxAge) {\n    if (typeof input !== 'object' || input === null) {\n        return false;\n    }\n    if (!('uat' in input) || typeof input.uat !== 'number' || Date.now() - input.uat >= cacheMaxAge) {\n        return false;\n    }\n    if (!('jwks' in input) ||\n        !isObject(input.jwks) ||\n        !Array.isArray(input.jwks.keys) ||\n        !Array.prototype.every.call(input.jwks.keys, isObject)) {\n        return false;\n    }\n    return true;\n}\nclass RemoteJWKSet {\n    constructor(url, options) {\n        if (!(url instanceof URL)) {\n            throw new TypeError('url must be an instance of URL');\n        }\n        this._url = new URL(url.href);\n        this._options = { agent: options?.agent, headers: options?.headers };\n        this._timeoutDuration =\n            typeof options?.timeoutDuration === 'number' ? options?.timeoutDuration : 5000;\n        this._cooldownDuration =\n            typeof options?.cooldownDuration === 'number' ? options?.cooldownDuration : 30000;\n        this._cacheMaxAge = typeof options?.cacheMaxAge === 'number' ? options?.cacheMaxAge : 600000;\n        if (options?.[jwksCache] !== undefined) {\n            this._cache = options?.[jwksCache];\n            if (isFreshJwksCache(options?.[jwksCache], this._cacheMaxAge)) {\n                this._jwksTimestamp = this._cache.uat;\n                this._local = createLocalJWKSet(this._cache.jwks);\n            }\n        }\n    }\n    coolingDown() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cooldownDuration\n            : false;\n    }\n    fresh() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cacheMaxAge\n            : false;\n    }\n    async getKey(protectedHeader, token) {\n        if (!this._local || !this.fresh()) {\n            await this.reload();\n        }\n        try {\n            return await this._local(protectedHeader, token);\n        }\n        catch (err) {\n            if (err instanceof JWKSNoMatchingKey) {\n                if (this.coolingDown() === false) {\n                    await this.reload();\n                    return this._local(protectedHeader, token);\n                }\n            }\n            throw err;\n        }\n    }\n    async reload() {\n        if (this._pendingFetch && isCloudflareWorkers()) {\n            this._pendingFetch = undefined;\n        }\n        const headers = new Headers(this._options.headers);\n        if (USER_AGENT && !headers.has('User-Agent')) {\n            headers.set('User-Agent', USER_AGENT);\n            this._options.headers = Object.fromEntries(headers.entries());\n        }\n        this._pendingFetch || (this._pendingFetch = fetchJwks(this._url, this._timeoutDuration, this._options)\n            .then((json) => {\n            this._local = createLocalJWKSet(json);\n            if (this._cache) {\n                this._cache.uat = Date.now();\n                this._cache.jwks = json;\n            }\n            this._jwksTimestamp = Date.now();\n            this._pendingFetch = undefined;\n        })\n            .catch((err) => {\n            this._pendingFetch = undefined;\n            throw err;\n        }));\n        await this._pendingFetch;\n    }\n}\nexport function createRemoteJWKSet(url, options) {\n    const set = new RemoteJWKSet(url, options);\n    const remoteJWKSet = async (protectedHeader, token) => set.getKey(protectedHeader, token);\n    Object.defineProperties(remoteJWKSet, {\n        coolingDown: {\n            get: () => set.coolingDown(),\n            enumerable: true,\n            configurable: false,\n        },\n        fresh: {\n            get: () => set.fresh(),\n            enumerable: true,\n            configurable: false,\n        },\n        reload: {\n            value: () => set.reload(),\n            enumerable: true,\n            configurable: false,\n            writable: false,\n        },\n        reloading: {\n            get: () => !!set._pendingFetch,\n            enumerable: true,\n            configurable: false,\n        },\n        jwks: {\n            value: () => set._local?.jwks(),\n            enumerable: true,\n            configurable: false,\n            writable: false,\n        },\n    });\n    return remoteJWKSet;\n}\nexport const experimental_jwksCache = jwksCache;\n", "import * as base64url from '../runtime/base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { ProduceJWT } from './produce.js';\nexport class UnsecuredJWT extends ProduceJWT {\n    encode() {\n        const header = base64url.encode(JSON.stringify({ alg: 'none' }));\n        const payload = base64url.encode(JSON.stringify(this._payload));\n        return `${header}.${payload}.`;\n    }\n    static decode(jwt, options) {\n        if (typeof jwt !== 'string') {\n            throw new JWTInvalid('Unsecured JWT must be a string');\n        }\n        const { 0: encodedHeader, 1: encodedPayload, 2: signature, length } = jwt.split('.');\n        if (length !== 3 || signature !== '') {\n            throw new JWTInvalid('Invalid Unsecured JWT');\n        }\n        let header;\n        try {\n            header = JSON.parse(decoder.decode(base64url.decode(encodedHeader)));\n            if (header.alg !== 'none')\n                throw new Error();\n        }\n        catch {\n            throw new JWTInvalid('Invalid Unsecured JWT');\n        }\n        const payload = jwtPayload(header, base64url.decode(encodedPayload), options);\n        return { payload, header };\n    }\n}\n", "import * as base64url from '../runtime/base64url.js';\nexport const encode = base64url.encode;\nexport const decode = base64url.decode;\n", "import { decode as base64url } from './base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nexport function decodeProtectedHeader(token) {\n    let protectedB64u;\n    if (typeof token === 'string') {\n        const parts = token.split('.');\n        if (parts.length === 3 || parts.length === 5) {\n            ;\n            [protectedB64u] = parts;\n        }\n    }\n    else if (typeof token === 'object' && token) {\n        if ('protected' in token) {\n            protectedB64u = token.protected;\n        }\n        else {\n            throw new TypeError('Token does not contain a Protected Header');\n        }\n    }\n    try {\n        if (typeof protectedB64u !== 'string' || !protectedB64u) {\n            throw new Error();\n        }\n        const result = JSON.parse(decoder.decode(base64url(protectedB64u)));\n        if (!isObject(result)) {\n            throw new Error();\n        }\n        return result;\n    }\n    catch {\n        throw new TypeError('Invalid Token or Protected Header formatting');\n    }\n}\n", "import { decode as base64url } from './base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nimport { JWTInvalid } from './errors.js';\nexport function decodeJwt(jwt) {\n    if (typeof jwt !== 'string')\n        throw new JWTInvalid('JWTs must use Compact JWS serialization, JWT must be a string');\n    const { 1: payload, length } = jwt.split('.');\n    if (length === 5)\n        throw new JWTInvalid('Only JWTs using Compact JWS serialization can be decoded');\n    if (length !== 3)\n        throw new JWTInvalid('Invalid JWT');\n    if (!payload)\n        throw new JWTInvalid('JWTs must contain a payload');\n    let decoded;\n    try {\n        decoded = base64url(payload);\n    }\n    catch {\n        throw new JWTInvalid('Failed to base64url decode the payload');\n    }\n    let result;\n    try {\n        result = JSON.parse(decoder.decode(decoded));\n    }\n    catch {\n        throw new JWTInvalid('Failed to parse the decoded payload as JSON');\n    }\n    if (!isObject(result))\n        throw new JWTInvalid('Invalid JWT Claims Set');\n    return result;\n}\n", "import crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport random from './random.js';\nexport async function generateSecret(alg, options) {\n    let length;\n    let algorithm;\n    let keyUsages;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            length = parseInt(alg.slice(-3), 10);\n            algorithm = { name: 'HMAC', hash: `SHA-${length}`, length };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            length = parseInt(alg.slice(-3), 10);\n            return random(new Uint8Array(length >> 3));\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW':\n            length = parseInt(alg.slice(1, 4), 10);\n            algorithm = { name: 'AES-KW', length };\n            keyUsages = ['wrapKey', 'unwrapKey'];\n            break;\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW':\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            length = parseInt(alg.slice(1, 4), 10);\n            algorithm = { name: 'AES-GCM', length };\n            keyUsages = ['encrypt', 'decrypt'];\n            break;\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return crypto.subtle.generateKey(algorithm, options?.extractable ?? false, keyUsages);\n}\nfunction getModulusLengthOption(options) {\n    const modulusLength = options?.modulusLength ?? 2048;\n    if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n        throw new JOSENotSupported('Invalid or unsupported modulusLength option provided, 2048 bits or larger keys must be used');\n    }\n    return modulusLength;\n}\nexport async function generateKeyPair(alg, options) {\n    let algorithm;\n    let keyUsages;\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            algorithm = {\n                name: 'RSA-PSS',\n                hash: `SHA-${alg.slice(-3)}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            algorithm = {\n                name: 'RSASSA-PKCS1-v1_5',\n                hash: `SHA-${alg.slice(-3)}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            algorithm = {\n                name: 'RSA-OAEP',\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['decrypt', 'unwrapKey', 'encrypt', 'wrapKey'];\n            break;\n        case 'ES256':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'ES384':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'ES512':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'Ed25519':\n            algorithm = { name: 'Ed25519' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'EdDSA': {\n            keyUsages = ['sign', 'verify'];\n            const crv = options?.crv ?? 'Ed25519';\n            switch (crv) {\n                case 'Ed25519':\n                case 'Ed448':\n                    algorithm = { name: crv };\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported crv option provided');\n            }\n            break;\n        }\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            keyUsages = ['deriveKey', 'deriveBits'];\n            const crv = options?.crv ?? 'P-256';\n            switch (crv) {\n                case 'P-256':\n                case 'P-384':\n                case 'P-521': {\n                    algorithm = { name: 'ECDH', namedCurve: crv };\n                    break;\n                }\n                case 'X25519':\n                case 'X448':\n                    algorithm = { name: crv };\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported crv option provided, supported values are P-256, P-384, P-521, X25519, and X448');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return crypto.subtle.generateKey(algorithm, options?.extractable ?? false, keyUsages);\n}\n", "import { generateKeyPair as generate } from '../runtime/generate.js';\nexport async function generateKeyPair(alg, options) {\n    return generate(alg, options);\n}\n", "import { generateSecret as generate } from '../runtime/generate.js';\nexport async function generateSecret(alg, options) {\n    return generate(alg, options);\n}\n", "export default 'WebCryptoAPI';\n", "import value from '../runtime/runtime.js';\nexport default value;\n", "export { compactDecrypt } from './jwe/compact/decrypt.js';\nexport { flattenedDecrypt } from './jwe/flattened/decrypt.js';\nexport { generalDecrypt } from './jwe/general/decrypt.js';\nexport { GeneralEncrypt } from './jwe/general/encrypt.js';\nexport { compactVerify } from './jws/compact/verify.js';\nexport { flattenedVerify } from './jws/flattened/verify.js';\nexport { generalVerify } from './jws/general/verify.js';\nexport { jwtVerify } from './jwt/verify.js';\nexport { jwtDecrypt } from './jwt/decrypt.js';\nexport { CompactEncrypt } from './jwe/compact/encrypt.js';\nexport { FlattenedEncrypt } from './jwe/flattened/encrypt.js';\nexport { CompactSign } from './jws/compact/sign.js';\nexport { FlattenedSign } from './jws/flattened/sign.js';\nexport { GeneralSign } from './jws/general/sign.js';\nexport { SignJWT } from './jwt/sign.js';\nexport { EncryptJWT } from './jwt/encrypt.js';\nexport { calculateJwkThumbprint, calculateJwkThumbprintUri } from './jwk/thumbprint.js';\nexport { EmbeddedJWK } from './jwk/embedded.js';\nexport { createLocalJWKSet } from './jwks/local.js';\nexport { createRemoteJWKSet, jwksCache, experimental_jwksCache } from './jwks/remote.js';\nexport { UnsecuredJWT } from './jwt/unsecured.js';\nexport { exportPKCS8, exportSPKI, exportJWK } from './key/export.js';\nexport { importSPKI, importPKCS8, importX509, importJWK } from './key/import.js';\nexport { decodeProtectedHeader } from './util/decode_protected_header.js';\nexport { decodeJwt } from './util/decode_jwt.js';\nexport * as errors from './util/errors.js';\nexport { generateKeyPair } from './key/generate_key_pair.js';\nexport { generateSecret } from './key/generate_secret.js';\nexport * as base64url from './util/base64url.js';\nexport { default as cryptoRuntime } from './util/runtime.js';\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.test = exports.live = exports.fraud = void 0;\nconst test = exports.test = \"https://test.stytch.com/\";\nconst live = exports.live = \"https://api.stytch.com/\";\nconst fraud = exports.fraud = \"https://telemetry.stytch.com/\";", "{\n  \"name\": \"stytch\",\n  \"version\": \"12.19.0\",\n  \"description\": \"A wrapper for the Stytch API\",\n  \"types\": \"./types/lib/index.d.ts\",\n  \"main\": \"./dist/index.js\",\n  \"type\": \"commonjs\",\n  \"exports\": {\n    \"types\": \"./types/lib/index.d.ts\",\n    \"require\": \"./dist/index.js\",\n    \"default\": \"./dist/index.js\"\n  },\n  \"files\": [\n    \"dist/**/*\",\n    \"types/**/*\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/stytchauth/stytch-node.git\"\n  },\n  \"engines\": {\n    \"node\": \">= 18.0.0\"\n  },\n  \"scripts\": {\n    \"build\": \"rm -rf dist types && babel lib --out-dir dist --extensions '.ts' && tsc --declaration --outDir types --emitDeclarationOnly\",\n    \"format\": \"prettier --write .\",\n    \"check-format\": \"prettier --check .\",\n    \"lint\": \"eslint lib\",\n    \"test\": \"jest\",\n    \"test-packages\": \"./test-packages/test.sh\"\n  },\n  \"author\": \"Stytch\",\n  \"bugs\": {\n    \"url\": \"git://github.com/stytchauth/stytch-node/issues\"\n  },\n  \"license\": \"MIT\",\n  \"devDependencies\": {\n    \"@babel/cli\": \"^7.23.0\",\n    \"@babel/core\": \"^7.23.0\",\n    \"@babel/preset-env\": \"^7.22.20\",\n    \"@babel/preset-typescript\": \"^7.23.0\",\n    \"@types/jest\": \"^29.5.5\",\n    \"@types/node\": \"^20.14.8\",\n    \"@typescript-eslint/eslint-plugin\": \"^4.33.0\",\n    \"@typescript-eslint/parser\": \"^4.33.0\",\n    \"eslint\": \"^7.32.0\",\n    \"jest\": \"^29.7.0\",\n    \"prettier\": \"2.4.1\",\n    \"ts-jest\": \"^29.1.1\",\n    \"typescript\": \"^5.5.4\"\n  },\n  \"dependencies\": {\n    \"jose\": \"^5.6.3\",\n    \"undici\": \"^6.19.5\"\n  },\n  \"eslintConfig\": {\n    \"extends\": \"airbnb\",\n    \"env\": {\n      \"commonjs\": true,\n      \"node\": true,\n      \"mocha\": true\n    },\n    \"rules\": {\n      \"indent\": [\n        \"error\",\n        4\n      ],\n      \"no-underscore-dangle\": 0,\n      \"strict\": 0,\n      \"prefer-rest-params\": 0\n    }\n  }\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.base64Encode = base64Encode;\nconst LOOKUP_TABLE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n/**\n * base64Encode is a vanilla-javascript implementation of base64 encoding\n * We expect stytch-node to be run in a variety of runtimes, so\n * we often can't depend on `window.atob` or `new Buffer`.\n *\n * We've experienced problems with two isomorphic base64 libraries so far,\n * so let's just roll our own!\n *\n * We only use this to encode project IDs and secrets, which are guaranteed to be ASCII and not unicode.\n *\n * Heavily, heavily inspired by http://www.webtoolkit.info/javascript-base64.html\n * @param input string\n */\nfunction base64Encode(input) {\n  let output = \"\";\n\n  // Unicode sanity check\n  for (let i = 0; i < input.length; i++) {\n    if (input.charCodeAt(i) > 128) {\n      throw Error(\"Base64 encoded unicode is not supported. Cannot encode \" + input);\n    }\n  }\n  let char1 = 0,\n    char2 = 0,\n    char3 = 0;\n  let enc1 = 0,\n    enc2 = 0,\n    enc3 = 0,\n    enc4 = 0;\n  let i = 0;\n  while (i < input.length) {\n    char1 = input.charCodeAt(i++);\n    char2 = input.charCodeAt(i++);\n    char3 = input.charCodeAt(i++);\n    enc1 = char1 >> 2;\n    enc2 = (char1 & 3) << 4 | char2 >> 4;\n    enc3 = (char2 & 15) << 2 | char3 >> 6;\n    enc4 = char3 & 63;\n    if (isNaN(char2)) {\n      enc3 = enc4 = 64;\n    } else if (isNaN(char3)) {\n      enc4 = 64;\n    }\n    output = output + LOOKUP_TABLE.charAt(enc1) + LOOKUP_TABLE.charAt(enc2) + LOOKUP_TABLE.charAt(enc3) + LOOKUP_TABLE.charAt(enc4);\n  }\n  return output;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseClient = void 0;\nvar envs = _interopRequireWildcard(require(\"./envs\"));\nvar _package = require(\"../../package.json\");\nvar _base = require(\"./base64\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nconst DEFAULT_TIMEOUT = 10 * 60 * 1000; // Ten minutes\n\nclass BaseClient {\n  constructor(config) {\n    if (typeof config != \"object\") {\n      throw new Error(\"Unexpected config type. Refer to https://github.com/stytchauth/stytch-node for how to use the Node client library.\");\n    }\n    if (!config.project_id) {\n      throw new Error('Missing \"project_id\" in config');\n    }\n    if (!config.secret) {\n      throw new Error('Missing \"secret\" in config');\n    }\n    if (config.env && config.custom_base_url) {\n      console.warn(`[Stytch] Warning: Both 'env' and 'base_url' were provided in the client config. 'env' will be ignored in favor of 'base_url'.`);\n    }\n\n    // Validate custom_base_url is using HTTPS\n    if (config.custom_base_url && !config.custom_base_url.startsWith(\"https://\")) {\n      throw new Error(\"custom_base_url must use HTTPS scheme\");\n    }\n    if (!config.env) {\n      if (config.project_id.startsWith(\"project-live-\")) {\n        config.env = envs.live;\n      } else {\n        config.env = envs.test;\n      }\n    }\n    if (!config.fraud_env) {\n      config.fraud_env = envs.fraud;\n    }\n    if (config.env != envs.test && config.env != envs.live) {\n      console.warn(`[Stytch] Warning: Using a custom 'env' value (\"${config.env}\") instead of 'envs.test' or 'envs.live\". If you're attempting to use a custom baseURL consider the base_url parameter.`);\n    }\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"User-Agent\": `Stytch Node v${_package.version}`,\n      Authorization: \"Basic \" + (0, _base.base64Encode)(config.project_id + \":\" + config.secret)\n    };\n    const baseURL = config.custom_base_url || config.env;\n    this.fetchConfig = {\n      baseURL: baseURL,\n      fraudBaseURL: config.fraud_env,\n      headers,\n      timeout: config.timeout || DEFAULT_TIMEOUT,\n      dispatcher: config.dispatcher\n    };\n\n    // Get a baseURL that ends with a slash to make building route URLs easier.\n    this.baseURL = baseURL;\n    if (!this.baseURL.endsWith(\"/\")) {\n      this.baseURL += \"/\";\n    }\n  }\n}\nexports.BaseClient = BaseClient;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addAuthorizationHeaders = addAuthorizationHeaders;\nfunction addAuthorizationHeaders(headers, authorization) {\n  if (authorization.session_token) {\n    headers[\"X-Stytch-Member-Session\"] = authorization.session_token;\n  }\n  if (authorization.session_jwt) {\n    headers[\"X-Stytch-Member-SessionJWT\"] = authorization.session_jwt;\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StytchError = exports.RequestError = exports.ClientError = void 0;\nclass StytchError extends Error {\n  constructor(data) {\n    super(JSON.stringify(data));\n    if (\"error\" in data) {\n      this.status_code = data.status_code;\n      this.request_id = data.request_id;\n      this.error_type = data.error;\n      this.error_message = data.error_description;\n      this.error_url = data.error_uri;\n    } else {\n      this.status_code = data.status_code;\n      this.request_id = data.request_id;\n      this.error_type = data.error_type;\n      this.error_message = data.error_message;\n      this.error_url = data.error_url;\n      this.error_details = data.error_details;\n    }\n  }\n}\nexports.StytchError = StytchError;\nclass RequestError extends Error {\n  constructor(message, request) {\n    super(message);\n    this.request = request;\n  }\n}\nexports.RequestError = RequestError;\nclass ClientError extends Error {\n  constructor(code, message, cause) {\n    let msg = `${code}: ${message}`;\n    if (cause) {\n      msg += `: ${cause}`;\n    }\n    super(msg);\n    this.code = code;\n    this.cause = cause;\n  }\n}\nexports.ClientError = ClientError;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.request = request;\nvar _errors = require(\"./errors\");\nasync function request(fetchConfig, requestConfig) {\n  const baseURL = requestConfig.baseURLType == \"FRAUD\" ? fetchConfig.fraudBaseURL : fetchConfig.baseURL;\n  const url = new URL(requestConfig.url, baseURL);\n  if (requestConfig.params) {\n    Object.entries(requestConfig.params).forEach(([key, value]) => {\n      if (value !== undefined) {\n        url.searchParams.append(key, String(value));\n      }\n    });\n  }\n  const finalHeaders = {\n    ...fetchConfig.headers,\n    ...requestConfig.headers\n  };\n  let response;\n  try {\n    const body = requestConfig.data ? JSON.stringify(requestConfig.data) : requestConfig.dataRaw;\n    response = await fetch(url.toString(), {\n      method: requestConfig.method,\n      body: body,\n      // @ts-expect-error [AUTH-2047] things fail catastrophically when using the NextJS fetch-cache\n      // so we need to explicitly opt out of it using the \"no-store\" tag - which isn't part of the core Node fetch API\n      cache: \"no-store\",\n      ...fetchConfig,\n      headers: finalHeaders\n    });\n  } catch (e) {\n    const err = e;\n    throw new _errors.RequestError(err.message, requestConfig);\n  }\n  let responseJSON;\n  try {\n    responseJSON = await response.json();\n  } catch (e) {\n    const err = e;\n    throw new _errors.RequestError(`Unable to parse JSON response from server: ${err.message}`, requestConfig);\n  }\n  if (response.status >= 400) {\n    throw new _errors.StytchError(responseJSON);\n  }\n  return responseJSON;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CryptoWallets = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `cryptoWallets.authenticate`.\n\n// Response type for `cryptoWallets.authenticate`.\n\n// Request type for `cryptoWallets.authenticateStart`.\n\n// Response type for `cryptoWallets.authenticateStart`.\n\nclass CryptoWallets {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Initiate the authentication of a crypto wallet. After calling this endpoint, the user will need to sign\n   * a message containing the returned `challenge` field.\n   *\n   * For Ethereum crypto wallets, you can optionally use the Sign In With Ethereum (SIWE) protocol for the\n   * message by passing in the `siwe_params`. The only required fields are `domain` and `uri`.\n   * If the crypto wallet detects that the domain in the message does not match the website's domain, it will\n   * display a warning to the user.\n   *\n   * If not using the SIWE protocol, the message will simply consist of the project name and a random string.\n   * @param data {@link CryptoWalletsAuthenticateStartRequest}\n   * @returns {@link CryptoWalletsAuthenticateStartResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  authenticateStart(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/crypto_wallets/authenticate/start`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Complete the authentication of a crypto wallet by passing the signature.\n   * @param data {@link CryptoWalletsAuthenticateRequest}\n   * @returns {@link CryptoWalletsAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  authenticate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/crypto_wallets/authenticate`,\n      headers,\n      data\n    });\n  }\n}\nexports.CryptoWallets = CryptoWallets;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Fingerprint = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `fraud.fingerprint.lookup`.\n\n// Response type for `fraud.fingerprint.lookup`.\n\nclass Fingerprint {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Lookup the associated fingerprint for the `telemetry_id` returned from the `GetTelemetryID` function.\n   * Learn more about the different fingerprint types and verdicts in our\n   * [DFP guide](https://stytch.com/docs/fraud/guides/device-fingerprinting/overview).\n   *\n   * Make a decision based on the returned `verdict`:\n   * * `ALLOW` - This is a known valid device grouping or device profile that is part of the default `ALLOW`\n   * listed set of known devices by Stytch. This grouping is made up of  verified device profiles that match\n   * the characteristics of known/authentic traffic origins.\n   * * `BLOCK` - This is a known bad or malicious device profile that is undesirable and should be blocked\n   * from completing the privileged action in question.\n   * * `CHALLENGE` - This is an unknown or potentially malicious device that should be put through increased\n   * friction such as 2FA or other forms of extended user verification before allowing the privileged action\n   * to proceed.\n   *\n   * If the `telemetry_id` is not found, we will return a 404 `telemetry_id_not_found`\n   * [error](https://stytch.com/docs/fraud/api/errors/404#telemetry_id_not_found). We recommend treating 404\n   * errors as a `BLOCK`, since it could be a sign of an attacker trying to bypass DFP protections by\n   * generating fake telemetry IDs.\n   * @param data {@link FraudFingerprintLookupRequest}\n   * @returns {@link FraudFingerprintLookupResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  lookup(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/fingerprint/lookup`,\n      baseURLType: \"FRAUD\",\n      headers,\n      data\n    });\n  }\n}\nexports.Fingerprint = Fingerprint;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Rules = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `fraud.rules.list`.\n\n// Response type for `fraud.rules.list`.\n\n// Request type for `fraud.rules.set`.\n\n// Response type for `fraud.rules.set`.\n\nclass Rules {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Set a rule for a particular `visitor_id`, `browser_id`, `visitor_fingerprint`, `browser_fingerprint`,\n   * `hardware_fingerprint`, `network_fingerprint`, `cidr_block`, `asn`, or `country_code`. This is helpful\n   * in cases where you want to allow or block a specific user or fingerprint. You should be careful when\n   * setting rules for `browser_fingerprint`, `hardware_fingerprint`, or `network_fingerprint` as they can be\n   * shared across multiple users, and you could affect more users than intended.\n   *\n   * You may not set an `ALLOW` rule for a `country_code`.\n   *\n   * Rules are applied in the order specified above. For example, if an end user has an `ALLOW` rule set for\n   * their `visitor_id` but a `BLOCK` rule set for their `hardware_fingerprint`, they will receive an `ALLOW`\n   * verdict because the `visitor_id` rule takes precedence.\n   *\n   * If there are conflicts between multiple `cidr_block` rules (for example, if the `ip_address` of the end\n   * user overlaps with multiple CIDR blocks that have rules set), the conflicts are resolved as follows:\n   * - The smallest block size takes precedence. For example, if an `ip_address` overlaps with a `cidr_block`\n   * rule of `ALLOW` for a block with a prefix of `/32` and a `cidr_block` rule of `BLOCK` with a prefix of\n   * `/24`, the rule match verdict will be `ALLOW`.\n   * - Among equivalent size blocks, `BLOCK` takes precedence over `CHALLENGE`, which takes precedence over\n   * `ALLOW`. For example, if an `ip_address` overlaps with two `cidr_block` rules with blocks of the same\n   * size that return `CHALLENGE` and `ALLOW`, the rule match verdict will be `CHALLENGE`.\n   * @param data {@link FraudRulesSetRequest}\n   * @returns {@link FraudRulesSetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  set(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/rules/set`,\n      baseURLType: \"FRAUD\",\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Get all rules that have been set for your project.\n   * @param data {@link FraudRulesListRequest}\n   * @returns {@link FraudRulesListResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  list(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/rules/list`,\n      baseURLType: \"FRAUD\",\n      headers,\n      data\n    });\n  }\n}\nexports.Rules = Rules;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Fraud = void 0;\nrequire(\"../shared/method_options\");\nvar _fraud_fingerprint = require(\"./fraud_fingerprint\");\nvar _fraud_rules = require(\"./fraud_rules\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\nclass Fraud {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.fingerprint = new _fraud_fingerprint.Fingerprint(this.fetchConfig);\n    this.rules = new _fraud_rules.Rules(this.fetchConfig);\n  }\n}\nexports.Fraud = Fraud;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Impersonation = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `impersonation.authenticate`.\n\n// Response type for `impersonation.authenticate`.\n\nclass Impersonation {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Authenticate an impersonation token to impersonate a User. This endpoint requires an impersonation token\n   * that is not expired or previously used.\n   * A Stytch session will be created for the impersonated user with a 60 minute duration. Impersonated\n   * sessions cannot be extended.\n   *\n   * Prior to this step, you can generate an impersonation token by visiting the Stytch dashboard, viewing a\n   * user, and clicking the `Impersonate User` button.\n   * @param data {@link ImpersonationAuthenticateRequest}\n   * @returns {@link ImpersonationAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  authenticate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/impersonation/authenticate`,\n      headers,\n      data\n    });\n  }\n}\nexports.Impersonation = Impersonation;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.authenticateJwtLocal = authenticateJwtLocal;\nexports.authenticateM2MJwtLocal = authenticateM2MJwtLocal;\nexports.authenticateSessionJwtLocal = authenticateSessionJwtLocal;\nexports.trimTrailingSlash = trimTrailingSlash;\nvar jose = _interopRequireWildcard(require(\"jose\"));\nvar _errors = require(\"./errors\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nconst sessionClaim = \"https://stytch.com/session\";\n// We expect issuers with no trailing slash at the end but store the base URL with one.\n// We use this function to normalize this difference.\nfunction trimTrailingSlash(baseURL) {\n  while (baseURL.endsWith(\"/\")) {\n    baseURL = baseURL.slice(0, -1);\n  }\n  return baseURL;\n}\n\n// An IntermediateSession can be either a MemberSession or a UserSession\n\nasync function authenticateJwtLocal(jwksClient, jwtOptions, jwt, options) {\n  const now = options?.current_date || new Date();\n  let payload;\n  try {\n    const token = await jose.jwtVerify(jwt, jwksClient, {\n      ...jwtOptions,\n      clockTolerance: options?.clock_tolerance_seconds,\n      currentDate: now\n      // Don't pass maxTokenAge directly to jwtVerify because it interprets zero as \"infinity\".\n      // We want zero to mean \"every token is stale\" and force remote verification.\n    });\n\n    payload = token.payload;\n  } catch (err) {\n    throw new _errors.ClientError(\"jwt_invalid\", \"Could not verify JWT\", err);\n  }\n  const maxTokenAge = options?.max_token_age_seconds;\n  if (maxTokenAge != null) {\n    const iat = payload.iat;\n    if (!iat) {\n      throw new _errors.ClientError(\"jwt_invalid\", \"JWT was missing iat claim\");\n    }\n    const nowEpoch = +now / 1000; // Epoch seconds from milliseconds\n    if (nowEpoch - iat >= maxTokenAge) {\n      throw new _errors.ClientError(\"jwt_too_old\", `JWT was issued at ${iat}, more than ${maxTokenAge} seconds ago`);\n    }\n  }\n\n  // The custom claim set is all the claims in the payload except for the standard claims and\n  // the Stytch session claim. The cleanest way to collect those seems to be naming what we want\n  // to omit and using ...rest for to collect the custom claims.\n  const {\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    aud: _aud,\n    exp: _exp,\n    iat: _iat,\n    iss: _iss,\n    jti: _jti,\n    nbf: _nbf,\n    sub: _sub,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...customClaims\n  } = payload;\n  return {\n    payload,\n    customClaims\n  };\n}\nasync function authenticateM2MJwtLocal(jwksClient, jwtOptions, jwt, options) {\n  const {\n    payload,\n    customClaims: untypedClaims\n  } = await authenticateJwtLocal(jwksClient, jwtOptions, jwt, options);\n  const {\n    scope: scopeClaim,\n    ...customClaims\n  } = untypedClaims;\n  const scope = scopeClaim;\n  return {\n    sub: payload.sub ?? \"\",\n    scope: scope,\n    custom_claims: customClaims\n  };\n}\nasync function authenticateSessionJwtLocal(jwksClient, jwtOptions, jwt, options) {\n  const {\n    payload,\n    customClaims: untypedClaims\n  } = await authenticateJwtLocal(jwksClient, jwtOptions, jwt, options);\n\n  // The custom claim set is all the claims in the payload except for the standard claims and\n  // the Stytch session claim. The cleanest way to collect those seems to be naming what we want\n  // to omit and using ...rest for to collect the custom claims.\n  const {\n    [sessionClaim]: stytchClaim,\n    ...customClaims\n  } = untypedClaims;\n  const claim = stytchClaim;\n  return {\n    session_id: claim.id,\n    attributes: claim.attributes,\n    authentication_factors: claim.authentication_factors,\n    sub: payload.sub || \"\",\n    // The JWT expiration time is the same as the session's.\n    // The exp claim is a Unix timestamp in seconds, so convert it to milliseconds first. The\n    // other timestamps are RFC3339-formatted strings.\n    started_at: claim.started_at,\n    last_accessed_at: claim.last_accessed_at,\n    // For JWTs that include it, prefer the inner expires_at claim.\n    expires_at: new Date(claim.expires_at || (payload.exp || 0) * 1000).toISOString(),\n    custom_claims: customClaims,\n    roles: claim.roles\n  };\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Secrets = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `m2m.clients.secrets.rotateCancel`.\n\n// Response type for `m2m.clients.secrets.rotateCancel`.\n\n// Request type for `m2m.clients.secrets.rotate`.\n\n// Response type for `m2m.clients.secrets.rotate`.\n\n// Request type for `m2m.clients.secrets.rotateStart`.\n\n// Response type for `m2m.clients.secrets.rotateStart`.\n\nclass Secrets {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Initiate the rotation of an M2M client secret. After this endpoint is called, both the client's\n   * `client_secret` and `next_client_secret` will be valid. To complete the secret rotation flow, update all\n   * usages of `client_secret` to `next_client_secret` and call the\n   * [Rotate Secret Endpoint](https://stytch.com/docs/b2b/api/m2m-rotate-secret)[Rotate Secret Endpoint](https://stytch.com/docs/api/m2m-rotate-secret) to complete the flow.Secret rotation can be cancelled using the [Rotate Cancel Endpoint](https://stytch.com/docs/b2b/api/m2m-rotate-secret-cancel)[Rotate Cancel Endpoint](https://stytch.com/docs/api/m2m-rotate-secret-cancel).\n   *\n   * **Important:** This is the only time you will be able to view the generated `next_client_secret` in the\n   * API response. Stytch stores a hash of the `next_client_secret` and cannot recover the value if lost. Be\n   * sure to persist the `next_client_secret` in a secure location. If the `next_client_secret` is lost, you\n   * will need to trigger a secret rotation flow to receive another one.\n   * @param data {@link M2MClientsSecretsRotateStartRequest}\n   * @returns {@link M2MClientsSecretsRotateStartResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  rotateStart(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/m2m/clients/${data.client_id}/secrets/rotate/start`,\n      headers,\n      data: {}\n    });\n  }\n\n  /**\n   * Cancel the rotation of an M2M client secret started with the\n   * [Start Secret Rotation Endpoint](https://stytch.com/docs/b2b/api/m2m-rotate-secret-start)\n   * [Start Secret Rotation Endpoint](https://stytch.com/docs/api/m2m-rotate-secret-start).\n   * After this endpoint is called, the client's `next_client_secret` is discarded and only the original\n   * `client_secret` will be valid.\n   * @param data {@link M2MClientsSecretsRotateCancelRequest}\n   * @returns {@link M2MClientsSecretsRotateCancelResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  rotateCancel(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/m2m/clients/${data.client_id}/secrets/rotate/cancel`,\n      headers,\n      data: {}\n    });\n  }\n\n  /**\n   * Complete the rotation of an M2M client secret started with the\n   * [Start Secret Rotation Endpoint](https://stytch.com/docs/b2b/api/m2m-rotate-secret-start)\n   * [Start Secret Rotation Endpoint](https://stytch.com/docs/api/m2m-rotate-secret-start).\n   * After this endpoint is called, the client's `next_client_secret` becomes its `client_secret` and the\n   * previous `client_secret` will no longer be valid.\n   * @param data {@link M2MClientsSecretsRotateRequest}\n   * @returns {@link M2MClientsSecretsRotateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  rotate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/m2m/clients/${data.client_id}/secrets/rotate`,\n      headers,\n      data: {}\n    });\n  }\n}\nexports.Secrets = Secrets;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Clients = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\nvar _m2m_clients_secrets = require(\"./m2m_clients_secrets\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `m2m.clients.create`.\n\n// Response type for `m2m.clients.create`.\n\n// Request type for `m2m.clients.delete`.\n\n// Response type for `m2m.clients.delete`.\n\n// Request type for `m2m.clients.get`.\n\n// Response type for `m2m.clients.get`.\n\n// Request type for `m2m.clients.search`.\n\n// Response type for `m2m.clients.search`.\n\n// Request type for `m2m.clients.update`.\n\n// Response type for `m2m.clients.update`.\n\nclass Clients {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.secrets = new _m2m_clients_secrets.Secrets(this.fetchConfig);\n  }\n\n  /**\n   * Gets information about an existing M2M Client.\n   * @param params {@link M2MClientsGetRequest}\n   * @returns {@link M2MClientsGetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  get(params) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/m2m/clients/${params.client_id}`,\n      headers,\n      params: {}\n    });\n  }\n\n  /**\n   * Search for M2M Clients within your Stytch Project. Submit an empty `query` in the request to return all\n   * M2M Clients.\n   *\n   * The following search filters are supported today:\n   * - `client_id`: Pass in a list of client IDs to get many clients in a single request\n   * - `client_name`: Search for clients by exact match on client name\n   * - `scopes`: Search for clients assigned a specific scope\n   * @param data {@link M2MClientsSearchRequest}\n   * @returns {@link M2MClientsSearchResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  search(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/m2m/clients/search`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Updates an existing M2M Client. You can use this endpoint to activate or deactivate a M2M Client by\n   * changing its `status`. A deactivated M2M Client will not be allowed to perform future token exchange\n   * flows until it is reactivated.\n   *\n   * **Important:** Deactivating a M2M Client will not invalidate any existing JWTs issued to the client,\n   * only prevent it from receiving new ones.\n   * To protect more-sensitive routes, pass a lower `max_token_age` value\n   * when[authenticating the token](https://stytch.com/docs/b2b/api/authenticate-m2m-token)[authenticating the token](https://stytch.com/docs/api/authenticate-m2m-token).\n   * @param data {@link M2MClientsUpdateRequest}\n   * @returns {@link M2MClientsUpdateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  update(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"PUT\",\n      url: `/v1/m2m/clients/${data.client_id}`,\n      headers,\n      data: {\n        client_name: data.client_name,\n        client_description: data.client_description,\n        status: data.status,\n        scopes: data.scopes,\n        trusted_metadata: data.trusted_metadata\n      }\n    });\n  }\n\n  /**\n   * Deletes the M2M Client.\n   *\n   * **Important:** Deleting a M2M Client will not invalidate any existing JWTs issued to the client, only\n   * prevent it from receiving new ones.\n   * To protect more-sensitive routes, pass a lower `max_token_age` value\n   * when[authenticating the token](https://stytch.com/docs/b2b/api/authenticate-m2m-token)[authenticating the token](https://stytch.com/docs/api/authenticate-m2m-token).\n   * @param data {@link M2MClientsDeleteRequest}\n   * @returns {@link M2MClientsDeleteResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  delete(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/m2m/clients/${data.client_id}`,\n      headers,\n      data: {}\n    });\n  }\n\n  /**\n   * Creates a new M2M Client. On initial client creation, you may pass in a custom `client_id` or\n   * `client_secret` to import an existing M2M client. If you do not pass in a custom `client_id` or\n   * `client_secret`, one will be generated automatically. The `client_id` must be unique among all clients\n   * in your project.\n   *\n   * **Important:** This is the only time you will be able to view the generated `client_secret` in the API\n   * response. Stytch stores a hash of the `client_secret` and cannot recover the value if lost. Be sure to\n   * persist the `client_secret` in a secure location. If the `client_secret` is lost, you will need to\n   * trigger a secret rotation flow to receive another one.\n   * @param data {@link M2MClientsCreateRequest}\n   * @returns {@link M2MClientsCreateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  create(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/m2m/clients`,\n      headers,\n      data\n    });\n  }\n}\nexports.Clients = Clients;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.performAuthorizationCheck = performAuthorizationCheck;\nfunction performAuthorizationCheck({\n  hasScopes,\n  requiredScopes\n}) {\n  const clientScopes = {};\n  hasScopes.forEach(scope => {\n    let action = scope;\n    let resource = \"-\";\n    if (scope.includes(\":\")) {\n      [action, resource] = scope.split(\":\");\n    }\n    if (!clientScopes[action]) {\n      clientScopes[action] = new Set();\n    }\n    clientScopes[action].add(resource);\n  });\n  for (const requiredScope of requiredScopes) {\n    let requiredAction = requiredScope;\n    let requiredResource = \"-\";\n    if (requiredScope.includes(\":\")) {\n      [requiredAction, requiredResource] = requiredScope.split(\":\");\n    }\n    if (!clientScopes[requiredAction]) {\n      return false;\n    }\n    const resources = clientScopes[requiredAction];\n    // The client can either have a wildcard resource or the specific resource\n    if (!resources.has(\"*\") && !resources.has(requiredResource)) {\n      return false;\n    }\n  }\n  return true;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.M2M = void 0;\nrequire(\"../shared/method_options\");\nvar _m2m_clients = require(\"./m2m_clients\");\nvar _sessions = require(\"../shared/sessions\");\nvar _errors = require(\"../shared/errors\");\nvar _m2m_local = require(\"./m2m_local\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// MANUAL(M2MSearchQueryOperand)(TYPES)\n\n// ENDMANUAL(M2MSearchQueryOperand)\n\n// MANUAL(AuthenticateToken)(TYPES)\n\n// ENDMANUAL(AuthenticateToken)\n\n// MANUAL(Token)(TYPES)\n\n// ENDMANUAL(Token)\n\nclass M2M {\n  constructor(fetchConfig, jwtConfig) {\n    this.fetchConfig = fetchConfig;\n    this.clients = new _m2m_clients.Clients(this.fetchConfig);\n    this.jwksClient = jwtConfig.jwks;\n    this.jwtOptions = {\n      audience: jwtConfig.projectID,\n      issuer: jwtConfig.issuers,\n      typ: \"JWT\"\n    };\n  }\n\n  // MANUAL(token)(SERVICE_METHOD)\n  /**\n   * Retrieve an access token for the given M2M Client.\n   * Access tokens are JWTs signed with the project's JWKS, and are valid for one hour after issuance.\n   * M2M Access tokens contain a standard set of claims as well as any custom claims generated from templates.\n   *\n   * M2M Access tokens can be validated locally using the Authenticate Access Token method in the Stytch Backend SDKs,\n   * or with any library that supports JWT signature validation.\n   *\n   * Here is an example of a standard set of claims from a M2M Access Token:\n   *   ```\n   *  {\n   *    \"sub\": \"m2m-client-test-d731954d-dab3-4a2b-bdee-07f3ad1be885\",\n   *    \"iss\": \"stytch.com/project-test-3e71d0a1-1e3e-4ee2-9be0-d7c0900f02c2\",\n   *    \"aud\": [\"project-test-3e71d0a1-1e3e-4ee2-9be0-d7c0900f02c2\"],\n   *    \"scope\": \"read:users write:users\",\n   *    \"iat\": 4102473300,\n   *    \"nbf\": 4102473300,\n   *    \"exp\": 4102476900\n   *  }\n   *  ```\n   * @param data {@link TokenRequest}\n   * @async\n   * @returns {@link TokenResponse}\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  async token(data) {\n    const fetchConfig = {\n      ...this.fetchConfig,\n      headers: {\n        [\"User-Agent\"]: this.fetchConfig.headers[\"User-Agent\"],\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    };\n    const params = {\n      client_id: data.client_id,\n      client_secret: data.client_secret,\n      grant_type: \"client_credentials\"\n    };\n    if (data.scopes && data.scopes.length > 0) {\n      params.scope = data.scopes?.join(\" \");\n    }\n    return (0, _shared.request)(fetchConfig, {\n      method: \"POST\",\n      url: `/v1/public/${this.jwtOptions.audience}/oauth2/token`,\n      dataRaw: new URLSearchParams(params)\n    });\n  }\n  // ENDMANUAL(token)\n\n  // MANUAL(authenticateToken)(SERVICE_METHOD)\n  // ADDIMPORT: import { authenticateM2MJwtLocal, JwtConfig } from \"../shared/sessions\";\n  // ADDIMPORT: import { request } from \"../shared\";\n  // ADDIMPORT: import { performAuthorizationCheck, ScopeAuthorizationFunc } from \"./m2m_local\";\n  // ADDIMPORT: import { ClientError } from \"../shared/errors\";\n  /**\n    * Authenticate an access token issued by Stytch from the Token endpoint.\n    * M2M access tokens are JWTs signed with the project's JWKs, and can be validated locally using any Stytch client library.\n    * You may pass in an optional set of scopes that the JWT must contain in order to enforce permissions.\n    * You may also override the default scope authorization function to implement custom authorization logic.\n    *\n    * @param data {@link AuthenticateTokenRequest}\n    * @param scopeAuthorizationFunc {@link ScopeAuthorizationFunc} - A function that checks if the token has the required scopes. \n      The default function assumes scopes are either direct string matches or written in the form \"action:resource\". See the \n      documentation for {@link performAuthorizationCheck} for more information.\n    * @async\n    * @returns {@link AuthenticateTokenResponse}\n    * @throws {ClientError} when token can not be authenticated\n  */\n  async authenticateToken(data, scopeAuthorizationFunc = _m2m_local.performAuthorizationCheck) {\n    const {\n      sub,\n      scope,\n      custom_claims\n    } = await (0, _sessions.authenticateM2MJwtLocal)(this.jwksClient, this.jwtOptions, data.access_token, {\n      max_token_age_seconds: data.max_token_age_seconds,\n      clock_tolerance_seconds: data.clock_tolerance_seconds\n    });\n    const scopes = scope.split(\" \");\n    if (data.required_scopes && data.required_scopes.length > 0) {\n      const isAuthorized = scopeAuthorizationFunc({\n        hasScopes: scopes,\n        requiredScopes: data.required_scopes\n      });\n      if (!isAuthorized) {\n        throw new _errors.ClientError(\"missing_scopes\", \"Missing at least one required scope\", data.required_scopes);\n      }\n    }\n    return {\n      client_id: sub,\n      scopes,\n      custom_claims\n    };\n  }\n  // ENDMANUAL(authenticateToken)\n}\nexports.M2M = M2M;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Email = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `magicLinks.email.invite`.\n\n// Response type for `magicLinks.email.invite`.\n\n// Request type for `magicLinks.email.loginOrCreate`.\n\n// Response type for `magicLinks.email.loginOrCreate`.\n\n// Request type for `magicLinks.email.revokeInvite`.\n\n// Response type for `magicLinks.email.revokeInvite`.\n\n// Request type for `magicLinks.email.send`.\n\n// Response type for `magicLinks.email.send`.\n\nclass Email {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Send a magic link to an existing Stytch user using their email address. If you'd like to create a user\n   * and send them a magic link by email with one request, use our\n   * [log in or create endpoint](https://stytch.com/docs/api/log-in-or-create-user-by-email).\n   *\n   * ### Add an email to an existing user\n   * This endpoint also allows you to add a new email address to an existing Stytch User. Including a\n   * `user_id`, `session_token`, or `session_jwt` in your Send Magic Link by email request will add the new,\n   * unverified email address to the existing Stytch User. If the user successfully authenticates within 5\n   * minutes, the new email address will be marked as verified and remain permanently on the existing Stytch\n   * User. Otherwise, it will be removed from the User object, and any subsequent login requests using that\n   * email address will create a new User.\n   *\n   * ### Next steps\n   * The user is emailed a magic link which redirects them to the provided\n   * [redirect URL](https://stytch.com/docs/guides/magic-links/email-magic-links/redirect-routing). Collect\n   * the `token` from the URL query parameters, and call\n   * [Authenticate magic link](https://stytch.com/docs/api/authenticate-magic-link) to complete\n   * authentication.\n   * @param data {@link MagicLinksEmailSendRequest}\n   * @returns {@link MagicLinksEmailSendResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  send(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/magic_links/email/send`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Send either a login or signup Magic Link to the User based on if the email is associated with a User\n   * already. A new or pending User will receive a signup Magic Link. An active User will receive a login\n   * Magic Link. For more information on how to control the status your Users are created in see the\n   * `create_user_as_pending` flag.\n   *\n   * ### Next steps\n   * The User is emailed a Magic Link which redirects them to the provided\n   * [redirect URL](https://stytch.com/docs/guides/magic-links/email-magic-links/redirect-routing). Collect\n   * the `token` from the URL query parameters and call\n   * [Authenticate Magic Link](https://stytch.com/docs/api/authenticate-magic-link) to complete\n   * authentication.\n   * @param data {@link MagicLinksEmailLoginOrCreateRequest}\n   * @returns {@link MagicLinksEmailLoginOrCreateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  loginOrCreate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/magic_links/email/login_or_create`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Create a User and send an invite Magic Link to the provided `email`. The User will be created with a\n   * `pending` status until they click the Magic Link in the invite email.\n   *\n   * ### Next steps\n   * The User is emailed a Magic Link which redirects them to the provided\n   * [redirect URL](https://stytch.com/docs/guides/magic-links/email-magic-links/redirect-routing). Collect\n   * the `token` from the URL query parameters and call\n   * [Authenticate Magic Link](https://stytch.com/docs/api/authenticate-magic-link) to complete\n   * authentication.\n   * @param data {@link MagicLinksEmailInviteRequest}\n   * @returns {@link MagicLinksEmailInviteResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  invite(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/magic_links/email/invite`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Revoke a pending invite based on the `email` provided.\n   * @param data {@link MagicLinksEmailRevokeInviteRequest}\n   * @returns {@link MagicLinksEmailRevokeInviteResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  revokeInvite(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/magic_links/email/revoke_invite`,\n      headers,\n      data\n    });\n  }\n}\nexports.Email = Email;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MagicLinks = void 0;\nrequire(\"../shared/method_options\");\nvar _magic_links_email = require(\"./magic_links_email\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `magicLinks.authenticate`.\n\n// Response type for `magicLinks.authenticate`.\n\n// Request type for `magicLinks.create`.\n\n// Response type for `magicLinks.create`.\n\nclass MagicLinks {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.email = new _magic_links_email.Email(this.fetchConfig);\n  }\n\n  /**\n   * Authenticate a User given a Magic Link. This endpoint verifies that the Magic Link token is valid,\n   * hasn't expired or been previously used, and any optional security settings such as IP match or user\n   * agent match are satisfied.\n   * @param data {@link MagicLinksAuthenticateRequest}\n   * @returns {@link MagicLinksAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  authenticate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/magic_links/authenticate`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Create an Embeddable Magic Link token for a User. Access to this endpoint is restricted. To enable it,\n   * please send us a note at support@stytch.com.\n   *\n   * ### Next steps\n   * Send the returned `token` value to the end user in a link which directs to your application. When the\n   * end user follows your link, collect the token, and call\n   * [Authenticate Magic Link](https://stytch.com/docs/api/authenticate-magic-link) to complete\n   * authentication.\n   *\n   * **Note:** Authenticating an Embeddable Magic Link token will **not** result in any of the Stytch User's\n   * factors (email address or phone number) being marked as verified, as Stytch cannot confirm where the\n   * user received the token.\n   * @param data {@link MagicLinksCreateRequest}\n   * @returns {@link MagicLinksCreateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  create(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/magic_links`,\n      headers,\n      data\n    });\n  }\n}\nexports.MagicLinks = MagicLinks;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OAuth = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `oauth.attach`.\n\n// Response type for `oauth.attach`.\n\n// Request type for `oauth.authenticate`.\n\n// Response type for `oauth.authenticate`.\n\nclass OAuth {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Generate an OAuth Attach Token to pre-associate an OAuth flow with an existing Stytch User. Pass the\n   * returned `oauth_attach_token` to the same provider's OAuth Start endpoint to treat this OAuth flow as a\n   * login for that user instead of a signup for a new user.\n   *\n   * Exactly one of `user_id`, `session_token`, or `session_jwt` must be provided to identify the target\n   * Stytch User.\n   *\n   * **Note**: This is an optional step in the OAuth flow. Stytch can often determine whether to associate a\n   * new OAuth login with an existing User based on verified information (such as an email address) from the\n   * identity provider. This endpoint is useful for cases where we can't, such as missing or unverified\n   * provider information.\n   *\n   * See our [OAuth email address behavior](https://stytch.com/docs/guides/oauth/email-behavior) resource for\n   * additional information.\n   * @param data {@link OAuthAttachRequest}\n   * @returns {@link OAuthAttachResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  attach(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/oauth/attach`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Authenticate a User given a `token`. This endpoint verifies that the user completed the OAuth flow by\n   * verifying that the token is valid and hasn't expired. To initiate a Stytch session for the user while\n   * authenticating their OAuth token, include `session_duration_minutes`; a session with the identity\n   * provider, e.g. Google or Facebook, will always be initiated upon successful authentication.\n   * @param data {@link OAuthAuthenticateRequest}\n   * @returns {@link OAuthAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  authenticate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/oauth/authenticate`,\n      headers,\n      data\n    });\n  }\n}\nexports.OAuth = OAuth;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Email = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `otps.email.loginOrCreate`.\n\n// Response type for `otps.email.loginOrCreate`.\n\n// Request type for `otps.email.send`.\n\n// Response type for `otps.email.send`.\n\nclass Email {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Send a One-Time Passcode (OTP) to a User using their email. If you'd like to create a user and send them\n   * a passcode with one request, use our\n   * [log in or create endpoint](https://stytch.com/docs/api/log-in-or-create-user-by-email-otp).\n   *\n   * ### Add an email to an existing user\n   * This endpoint also allows you to add a new email address to an existing Stytch User. Including a\n   * `user_id`, `session_token`, or `session_jwt` in your Send one-time passcode by email request will add\n   * the new, unverified email address to the existing Stytch User. If the user successfully authenticates\n   * within 5 minutes, the new email address will be marked as verified and remain permanently on the\n   * existing Stytch User. Otherwise, it will be removed from the User object, and any subsequent login\n   * requests using that email address will create a new User.\n   *\n   * ### Next steps\n   * Collect the OTP which was delivered to the user. Call\n   * [Authenticate OTP](https://stytch.com/docs/api/authenticate-otp) using the OTP `code` along with the\n   * `email_id` found in the response as the `method_id`.\n   * @param data {@link OTPsEmailSendRequest}\n   * @returns {@link OTPsEmailSendResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  send(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/otps/email/send`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Send a one-time passcode (OTP) to a User using their email. If the email is not associated with a User\n   * already, a User will be created.\n   *\n   * ### Next steps\n   *\n   * Collect the OTP which was delivered to the User. Call\n   * [Authenticate OTP](https://stytch.com/docs/api/authenticate-otp) using the OTP `code` along with the\n   * `phone_id` found in the response as the `method_id`.\n   * @param data {@link OTPsEmailLoginOrCreateRequest}\n   * @returns {@link OTPsEmailLoginOrCreateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  loginOrCreate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/otps/email/login_or_create`,\n      headers,\n      data\n    });\n  }\n}\nexports.Email = Email;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sms = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `otps.sms.loginOrCreate`.\n\n// Response type for `otps.sms.loginOrCreate`.\n\n// Request type for `otps.sms.send`.\n\n// Response type for `otps.sms.send`.\n\nclass Sms {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Send a one-time passcode (OTP) to a user's phone number. If you'd like to create a user and send them a\n   * passcode with one request, use our\n   * [log in or create](https://stytch.com/docs/api/log-in-or-create-user-by-sms) endpoint.\n   *\n   * Note that sending another OTP code before the first has expired will invalidate the first code.\n   *\n   * ### Cost to send SMS OTP\n   * Before configuring SMS or WhatsApp OTPs, please review how Stytch\n   * [bills the costs of international OTPs](https://stytch.com/pricing) and understand how to protect your\n   * app against [toll fraud](https://stytch.com/docs/guides/passcodes/toll-fraud/overview).\n   *\n   * __Note:__ SMS to phone numbers outside of the US and Canada is disabled by default for customers who did\n   * not use SMS prior to October 2023. If you're interested in sending international SMS, please reach out\n   * to [support@stytch.com](mailto:support@stytch.com?subject=Enable%20international%20SMS).\n   *\n   * Even when international SMS is enabled, we do not support sending SMS to countries on our\n   * [Unsupported countries list](https://stytch.com/docs/guides/passcodes/unsupported-countries).\n   *\n   * ### Add a phone number to an existing user\n   *\n   * This endpoint also allows you to add a new phone number to an existing Stytch User. Including a\n   * `user_id`, `session_token`, or `session_jwt` in your Send one-time passcode by SMS request will add the\n   * new, unverified phone number to the existing Stytch User. If the user successfully authenticates within\n   * 5 minutes, the new phone number will be marked as verified and remain permanently on the existing Stytch\n   * User. Otherwise, it will be removed from the User object, and any subsequent login requests using that\n   * phone number will create a new User.\n   *\n   * ### Next steps\n   *\n   * Collect the OTP which was delivered to the user. Call\n   * [Authenticate OTP](https://stytch.com/docs/api/authenticate-otp) using the OTP `code` along with the\n   * `phone_id` found in the response as the `method_id`.\n   * @param data {@link OTPsSmsSendRequest}\n   * @returns {@link OTPsSmsSendResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  send(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/otps/sms/send`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Send a One-Time Passcode (OTP) to a User using their phone number. If the phone number is not associated\n   * with a user already, a user will be created.\n   *\n   * ### Cost to send SMS OTP\n   * Before configuring SMS or WhatsApp OTPs, please review how Stytch\n   * [bills the costs of international OTPs](https://stytch.com/pricing) and understand how to protect your\n   * app against [toll fraud](https://stytch.com/docs/guides/passcodes/toll-fraud/overview).\n   *\n   * __Note:__ SMS to phone numbers outside of the US and Canada is disabled by default for customers who did\n   * not use SMS prior to October 2023. If you're interested in sending international SMS, please reach out\n   * to [support@stytch.com](mailto:support@stytch.com?subject=Enable%20international%20SMS).\n   *\n   * Even when international SMS is enabled, we do not support sending SMS to countries on our\n   * [Unsupported countries list](https://stytch.com/docs/guides/passcodes/unsupported-countries).\n   *\n   * ### Next steps\n   *\n   * Collect the OTP which was delivered to the User. Call\n   * [Authenticate OTP](https://stytch.com/docs/api/authenticate-otp) using the OTP `code` along with the\n   * `phone_id` found in the response as the `method_id`.\n   * @param data {@link OTPsSmsLoginOrCreateRequest}\n   * @returns {@link OTPsSmsLoginOrCreateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  loginOrCreate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/otps/sms/login_or_create`,\n      headers,\n      data\n    });\n  }\n}\nexports.Sms = Sms;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Whatsapp = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `otps.whatsapp.loginOrCreate`.\n\n// Response type for `otps.whatsapp.loginOrCreate`.\n\n// Request type for `otps.whatsapp.send`.\n\n// Response type for `otps.whatsapp.send`.\n\nclass Whatsapp {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Send a One-Time Passcode (OTP) to a User's WhatsApp. If you'd like to create a user and send them a\n   * passcode with one request, use our\n   * [log in or create](https://stytch.com/docs/api/whatsapp-login-or-create) endpoint.\n   *\n   * Note that sending another OTP code before the first has expired will invalidate the first code.\n   *\n   * ### Cost to send SMS OTP\n   * Before configuring SMS or WhatsApp OTPs, please review how Stytch\n   * [bills the costs of international OTPs](https://stytch.com/pricing) and understand how to protect your\n   * app against [toll fraud](https://stytch.com/docs/guides/passcodes/toll-fraud/overview).\n   *\n   * ### Add a phone number to an existing user\n   *\n   * This endpoint also allows you to add a new phone number to an existing Stytch User. Including a\n   * `user_id`, `session_token`, or `session_jwt` in your Send one-time passcode by WhatsApp request will add\n   * the new, unverified phone number to the existing Stytch User. If the user successfully authenticates\n   * within 5 minutes, the new phone number will be marked as verified and remain permanently on the existing\n   * Stytch User. Otherwise, it will be removed from the User object, and any subsequent login requests using\n   * that phone number will create a new User.\n   *\n   * ### Next steps\n   *\n   * Collect the OTP which was delivered to the user. Call\n   * [Authenticate OTP](https://stytch.com/docs/api/authenticate-otp) using the OTP `code` along with the\n   * `phone_id` found in the response as the `method_id`.\n   * @param data {@link OTPsWhatsappSendRequest}\n   * @returns {@link OTPsWhatsappSendResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  send(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/otps/whatsapp/send`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Send a one-time passcode (OTP) to a User's WhatsApp using their phone number. If the phone number is not\n   * associated with a User already, a User will be created.\n   *\n   * ### Cost to send SMS OTP\n   * Before configuring SMS or WhatsApp OTPs, please review how Stytch\n   * [bills the costs of international OTPs](https://stytch.com/pricing) and understand how to protect your\n   * app against [toll fraud](https://stytch.com/docs/guides/passcodes/toll-fraud/overview).\n   *\n   * ### Next steps\n   *\n   * Collect the OTP which was delivered to the User. Call\n   * [Authenticate OTP](https://stytch.com/docs/api/authenticate-otp) using the OTP `code` along with the\n   * `phone_id` found in the response as the `method_id`.\n   * @param data {@link OTPsWhatsappLoginOrCreateRequest}\n   * @returns {@link OTPsWhatsappLoginOrCreateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  loginOrCreate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/otps/whatsapp/login_or_create`,\n      headers,\n      data\n    });\n  }\n}\nexports.Whatsapp = Whatsapp;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OTPs = void 0;\nrequire(\"../shared/method_options\");\nvar _otps_email = require(\"./otps_email\");\nvar _shared = require(\"../shared\");\nvar _otps_sms = require(\"./otps_sms\");\nvar _otps_whatsapp = require(\"./otps_whatsapp\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `otps.authenticate`.\n\n// Response type for `otps.authenticate`.\n\nclass OTPs {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.sms = new _otps_sms.Sms(this.fetchConfig);\n    this.whatsapp = new _otps_whatsapp.Whatsapp(this.fetchConfig);\n    this.email = new _otps_email.Email(this.fetchConfig);\n  }\n\n  /**\n   * Authenticate a User given a `method_id` (the associated `email_id` or `phone_id`) and a `code`. This\n   * endpoint verifies that the code is valid, hasn't expired or been previously used, and any optional\n   * security settings such as IP match or user agent match are satisfied. A given `method_id` may only have\n   * a single active OTP code at any given time, if a User requests another OTP code before the first one has\n   * expired, the first one will be invalidated.\n   * @param data {@link OTPsAuthenticateRequest}\n   * @returns {@link OTPsAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  authenticate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/otps/authenticate`,\n      headers,\n      data\n    });\n  }\n}\nexports.OTPs = OTPs;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Email = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `passwords.email.reset`.\n\n// Response type for `passwords.email.reset`.\n\n// Request type for `passwords.email.resetStart`.\n\n// Response type for `passwords.email.resetStart`.\n\nclass Email {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Initiates a password reset for the email address provided. This will trigger an email to be sent to the\n   * address, containing a magic link that will allow them to set a new password and authenticate.\n   * @param data {@link PasswordsEmailResetStartRequest}\n   * @returns {@link PasswordsEmailResetStartResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  resetStart(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/passwords/email/reset/start`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Reset the user\u2019s password and authenticate them. This endpoint checks that the magic link `token` is\n   * valid, hasn\u2019t expired, or already been used \u2013 and can optionally require additional security settings,\n   * such as the IP address and user agent matching the initial reset request.\n   *\n   * The provided password needs to meet our password strength requirements, which can be checked in advance\n   * with the password strength endpoint. If the token and password are accepted, the password is securely\n   * stored for future authentication and the user is authenticated.\n   *\n   * Note that a successful password reset by email will revoke all active sessions for the `user_id`.\n   * @param data {@link PasswordsEmailResetRequest}\n   * @returns {@link PasswordsEmailResetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  reset(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/passwords/email/reset`,\n      headers,\n      data\n    });\n  }\n}\nexports.Email = Email;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExistingPassword = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `passwords.existingPassword.reset`.\n\n// Response type for `passwords.existingPassword.reset`.\n\nclass ExistingPassword {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Reset the User\u2019s password using their existing password.\n   *\n   * Note that a successful password reset via an existing password will revoke all active sessions for the\n   * `user_id`.\n   * @param data {@link PasswordsExistingPasswordResetRequest}\n   * @returns {@link PasswordsExistingPasswordResetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  reset(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/passwords/existing_password/reset`,\n      headers,\n      data\n    });\n  }\n}\nexports.ExistingPassword = ExistingPassword;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sessions = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `passwords.sessions.reset`.\n\n// Response type for `passwords.sessions.reset`.\n\nclass Sessions {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Reset the user\u2019s password using their existing session. The endpoint will error if the session does not\n   * have a password, email magic link, or email OTP authentication factor that has been issued within the\n   * last 5 minutes. This endpoint requires either a `session_jwt` or `session_token` be included in the\n   * request.\n   *\n   * Note that a successful password reset via an existing session will revoke all active sessions for the\n   * `user_id`, except for the one used during the reset flow.\n   * @param data {@link PasswordsSessionResetRequest}\n   * @returns {@link PasswordsSessionResetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  reset(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/passwords/session/reset`,\n      headers,\n      data\n    });\n  }\n}\nexports.Sessions = Sessions;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Passwords = void 0;\nrequire(\"../shared/method_options\");\nvar _passwords_email = require(\"./passwords_email\");\nvar _passwords_existing_password = require(\"./passwords_existing_password\");\nvar _shared = require(\"../shared\");\nvar _passwords_session = require(\"./passwords_session\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `passwords.authenticate`.\n\n// Response type for `passwords.authenticate`.\n\n// Request type for `passwords.create`.\n\n// Response type for `passwords.create`.\n\n// Request type for `passwords.migrate`.\n\n// Response type for `passwords.migrate`.\n\n// Request type for `passwords.strengthCheck`.\n\n// Response type for `passwords.strengthCheck`.\n\nclass Passwords {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.email = new _passwords_email.Email(this.fetchConfig);\n    this.existingPassword = new _passwords_existing_password.ExistingPassword(this.fetchConfig);\n    this.sessions = new _passwords_session.Sessions(this.fetchConfig);\n  }\n\n  /**\n   * Create a new user with a password. If `session_duration_minutes` is specified, a new session will be\n   * started as well.\n   *\n   * If a user with this email already exists in your Stytch project, this endpoint will return a\n   * `duplicate_email` error. To add a password to an existing passwordless user, you'll need to either call\n   * the [Migrate password endpoint](https://stytch.com/docs/api/password-migrate) or prompt the user to\n   * complete one of our password reset flows.\n   *\n   * This endpoint will return an error if the password provided does not meet our strength requirements,\n   * which you can check beforehand via the\n   * [Password strength check endpoint](https://stytch.com/docs/api/password-strength-check).\n   *\n   * When creating new Passwords users, it's good practice to enforce an email verification flow. We'd\n   * recommend checking out our\n   * [Email verification guide](https://stytch.com/docs/guides/passwords/email-verification/overview) for\n   * more information.\n   * @param data {@link PasswordsCreateRequest}\n   * @returns {@link PasswordsCreateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  create(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/passwords`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Authenticate a user with their email address and password. This endpoint verifies that the user has a\n   * password currently set, and that the entered password is correct. There are two instances where the\n   * endpoint will return a `reset_password` error even if they enter their previous password:\n   *\n   * **One:** The user\u2019s credentials appeared in the HaveIBeenPwned dataset. We force a password reset to\n   * ensure that the user is the legitimate owner of the email address, and not a malicious actor abusing the\n   * compromised credentials.\n   *\n   * **Two:** A user that has previously authenticated with email/password uses a passwordless authentication\n   * method tied to the same email address (e.g. Magic Links, Google OAuth) for the first time. Any\n   * subsequent email/password authentication attempt will result in this error. We force a password reset in\n   * this instance in order to safely deduplicate the account by email address, without introducing the risk\n   * of a pre-hijack account takeover attack.\n   *\n   * Imagine a bad actor creates many accounts using passwords and the known email addresses of their\n   * victims. If a victim comes to the site and logs in for the first time with an email-based passwordless\n   * authentication method then both the victim and the bad actor have credentials to access to the same\n   * account. To prevent this, any further email/password login attempts first require a password reset which\n   * can only be accomplished by someone with access to the underlying email address.\n   * @param data {@link PasswordsAuthenticateRequest}\n   * @returns {@link PasswordsAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  authenticate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/passwords/authenticate`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * This API allows you to check whether or not the user\u2019s provided password is valid, and to provide\n   * feedback to the user on how to increase the strength of their password.\n   *\n   * This endpoint adapts to your Project's password strength configuration. If you're using\n   * [zxcvbn](https://stytch.com/docs/guides/passwords/strength-policy), the default, your passwords are\n   * considered valid if the strength score is >= 3. If you're using\n   * [LUDS](https://stytch.com/docs/guides/passwords/strength-policy), your passwords are considered valid if\n   * they meet the requirements that you've set with Stytch. You may update your password strength\n   * configuration in the [stytch dashboard](https://stytch.com/dashboard/password-strength-config).\n   *\n   *\n   * ### Password feedback\n   *\n   * The `feedback` object contains relevant fields for you to relay feedback to users that failed to create\n   * a strong enough password.\n   *\n   * If you're using zxcvbn, the `feedback` object will contain `warning` and `suggestions` for any password\n   * that does not meet the zxcvbn strength requirements. You can return these strings directly to the user\n   * to help them craft a strong password.\n   *\n   * If you're using LUDS, the `feedback` object will contain an object named `luds_requirements` which\n   * contain a collection of fields that the user failed or passed. You'll want to prompt the user to create\n   * a password that meets all of the requirements that they failed.\n   * @param data {@link PasswordsStrengthCheckRequest}\n   * @returns {@link PasswordsStrengthCheckResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  strengthCheck(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/passwords/strength_check`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Adds an existing password to a User's email that doesn't have a password yet. We support migrating users\n   * from passwords stored with `bcrypt`, `scrypt`, `argon2`, `MD-5`, `SHA-1`, or `PBKDF2`. This endpoint has\n   * a rate limit of 100 requests per second.\n   * @param data {@link PasswordsMigrateRequest}\n   * @returns {@link PasswordsMigrateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  migrate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/passwords/migrate`,\n      headers,\n      data\n    });\n  }\n}\nexports.Passwords = Passwords;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Project = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\nclass Project {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * @param params {@link ProjectMetricsRequest}\n   * @returns {@link ProjectMetricsResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  metrics() {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/projects/metrics`,\n      headers\n    });\n  }\n}\nexports.Project = Project;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sessions = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\nvar _sessions = require(\"../shared/sessions\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `sessions.authenticate`.\n\n// Response type for `sessions.authenticate`.\n\n// Request type for `sessions.exchangeAccessToken`.\n\n// Response type for `sessions.exchangeAccessToken`.\n\n// Request type for `sessions.getJWKS`.\n\n// Response type for `sessions.getJWKS`.\n\n// Request type for `sessions.get`.\n\n// Response type for `sessions.get`.\n\n// Request type for `sessions.migrate`.\n\n// Response type for `sessions.migrate`.\n\n// Request type for `sessions.revoke`.\n\n// Response type for `sessions.revoke`.\n\n// MANUAL(authenticateJwt)(TYPES)\n\n// Request type for `sessions.authenticateJwt`\n\n// Request type for `sessions.authenticateJwtLocal`\n\n// ENDMANUAL(authenticateJwt)\n\nclass Sessions {\n  constructor(fetchConfig, jwtConfig) {\n    this.fetchConfig = fetchConfig;\n    this.jwksClient = jwtConfig.jwks;\n    this.jwtOptions = {\n      audience: jwtConfig.projectID,\n      issuer: jwtConfig.issuers,\n      typ: \"JWT\"\n    };\n  }\n\n  /**\n   * List all active Sessions for a given `user_id`. All timestamps are formatted according to the RFC 3339\n   * standard and are expressed in UTC, e.g. `2021-12-29T12:33:09Z`.\n   * @param params {@link SessionsGetRequest}\n   * @returns {@link SessionsGetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  get(params) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/sessions`,\n      headers,\n      params: {\n        ...params\n      }\n    });\n  }\n\n  /**\n   * Authenticate a session token or session JWT and retrieve associated session data. If\n   * `session_duration_minutes` is included, update the lifetime of the session to be that many minutes from\n   * now. All timestamps are formatted according to the RFC 3339 standard and are expressed in UTC, e.g.\n   * `2021-12-29T12:33:09Z`. This endpoint requires exactly one `session_jwt` or `session_token` as part of\n   * the request. If both are included, you will receive a `too_many_session_arguments` error.\n   *\n   * You may provide a JWT that needs to be refreshed and is expired according to its `exp` claim. A new JWT\n   * will be returned if both the signature and the underlying Session are still valid. See our\n   * [How to use Stytch Session JWTs](https://stytch.com/docs/guides/sessions/using-jwts) guide for more\n   * information.\n   * @param data {@link SessionsAuthenticateRequest}\n   * @returns {@link SessionsAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  authenticate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/sessions/authenticate`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Revoke a Session, immediately invalidating all of its session tokens. You can revoke a session in three\n   * ways: using its ID, or using one of its session tokens, or one of its JWTs. This endpoint requires\n   * exactly one of those to be included in the request. It will return an error if multiple are present.\n   * @param data {@link SessionsRevokeRequest}\n   * @returns {@link SessionsRevokeResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  revoke(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/sessions/revoke`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Migrate a session from an external OIDC compliant endpoint. Stytch will call the external UserInfo\n   * endpoint defined in your Stytch Project settings in the [Dashboard](https://stytch.com/docs/dashboard),\n   * and then perform a lookup using the `session_token`. If the response contains a valid email address,\n   * Stytch will attempt to match that email address with an existing User and create a Stytch Session. You\n   * will need to create the user before using this endpoint.\n   * @param data {@link SessionsMigrateRequest}\n   * @returns {@link SessionsMigrateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  migrate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/sessions/migrate`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Use this endpoint to exchange a Connected Apps Access Token back into a Stytch Session for the\n   * underlying User.\n   * This session can be used with the Stytch SDKs and APIs.\n   *\n   * The Access Token must contain the `full_access` scope and must not be more than 5 minutes old. Access\n   * Tokens may only be exchanged a single time.\n   * @param data {@link SessionsExchangeAccessTokenRequest}\n   * @returns {@link SessionsExchangeAccessTokenResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  exchangeAccessToken(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/sessions/exchange_access_token`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Get the JSON Web Key Set (JWKS) for a project.\n   *\n   * JWKS are rotated every ~6 months. Upon rotation, new JWTs will be signed using the new key, and both\n   * keys will be returned by this endpoint for a period of 1 month.\n   *\n   * JWTs have a set lifetime of 5 minutes, so there will be a 5 minute period where some JWTs will be signed\n   * by the old JWKS, and some JWTs will be signed by the new JWKS. The correct JWKS to use for validation is\n   * determined by matching the `kid` value of the JWT and JWKS.\n   *\n   * If you're using one of our [backend SDKs](https://stytch.com/docs/sdks), the JWKS rotation will be\n   * handled for you.\n   *\n   * If you're using your own JWT validation library, many have built-in support for JWKS rotation, and\n   * you'll just need to supply this API endpoint. If not, your application should decide which JWKS to use\n   * for validation by inspecting the `kid` value.\n   *\n   * See our [How to use Stytch Session JWTs](https://stytch.com/docs/guides/sessions/using-jwts) guide for\n   * more information.\n   * @param params {@link SessionsGetJWKSRequest}\n   * @returns {@link SessionsGetJWKSResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  getJWKS(params) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/sessions/jwks/${params.project_id}`,\n      headers,\n      params: {}\n    });\n  }\n\n  // MANUAL(authenticateJwt)(SERVICE_METHOD)\n  // ADDIMPORT: import { JwtConfig, authenticateSessionJwtLocal } from \"../shared/sessions\";\n  /** Parse a JWT and verify the signature, preferring local verification over remote.\n   *\n   * If max_token_age_seconds is set, remote verification will be forced if the JWT was issued at\n   * (based on the \"iat\" claim) more than that many seconds ago.\n   *\n   * To force remote validation for all tokens, set max_token_age_seconds to zero or use the\n   * authenticate method instead.\n   */\n  async authenticateJwt(params) {\n    try {\n      const session = await this.authenticateJwtLocal(params);\n      return {\n        session,\n        session_jwt: params.session_jwt\n      };\n    } catch (err) {\n      // JWT could not be verified locally. Check with the Stytch API.\n      return this.authenticate({\n        session_jwt: params.session_jwt\n      });\n    }\n  }\n\n  /** Parse a JWT and verify the signature locally (without calling /authenticate in the API).\n   *\n   * If max_token_age_seconds is set, this will return an error if the JWT was issued (based on the \"iat\"\n   * claim) more than max_token_age_seconds seconds ago.\n   *\n   * If max_token_age_seconds is explicitly set to zero, all tokens will be considered too old,\n   * even if they are otherwise valid.\n   *\n   * The value for current_date is used to compare timestamp claims (\"exp\", \"nbf\", \"iat\"). It\n   * defaults to the current date (new Date()).\n   *\n   * The value for clock_tolerance_seconds is the maximum allowable difference when comparing\n   * timestamps. It defaults to zero.\n   */\n  async authenticateJwtLocal(params) {\n    const sess = await (0, _sessions.authenticateSessionJwtLocal)(this.jwksClient, this.jwtOptions, params.session_jwt, {\n      clock_tolerance_seconds: params.clock_tolerance_seconds,\n      max_token_age_seconds: params.max_token_age_seconds,\n      current_date: params.current_date\n    });\n    return {\n      session_id: sess.session_id,\n      attributes: sess.attributes,\n      authentication_factors: sess.authentication_factors,\n      user_id: sess.sub,\n      started_at: sess.started_at,\n      last_accessed_at: sess.last_accessed_at,\n      expires_at: sess.expires_at,\n      custom_claims: sess.custom_claims\n    };\n  }\n  // ENDMANUAL(authenticateJwt)\n}\nexports.Sessions = Sessions;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TOTPs = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `totps.authenticate`.\n\n// Response type for `totps.authenticate`.\n\n// Request type for `totps.create`.\n\n// Response type for `totps.create`.\n\n// Request type for `totps.recover`.\n\n// Response type for `totps.recover`.\n\n// Request type for `totps.recoveryCodes`.\n\n// Response type for `totps.recoveryCodes`.\n\nclass TOTPs {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Create a new TOTP instance for a user. The user can use the authenticator application of their choice to\n   * scan the QR code or enter the secret.\n   * @param data {@link TOTPsCreateRequest}\n   * @returns {@link TOTPsCreateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  create(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/totps`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Authenticate a TOTP code entered by a user.\n   * @param data {@link TOTPsAuthenticateRequest}\n   * @returns {@link TOTPsAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  authenticate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/totps/authenticate`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Retrieve the recovery codes for a TOTP instance tied to a User.\n   * @param data {@link TOTPsRecoveryCodesRequest}\n   * @returns {@link TOTPsRecoveryCodesResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  recoveryCodes(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/totps/recovery_codes`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Authenticate a recovery code for a TOTP instance.\n   * @param data {@link TOTPsRecoverRequest}\n   * @returns {@link TOTPsRecoverResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  recover(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/totps/recover`,\n      headers,\n      data\n    });\n  }\n}\nexports.TOTPs = TOTPs;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Users = exports.UserSearchIterator = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n// Request type for `users.create`.\n// Response type for `users.create`.\n// Request type for `users.deleteBiometricRegistration`.\n// Response type for `users.deleteBiometricRegistration`.\n// Request type for `users.deleteCryptoWallet`.\n// Response type for `users.deleteCryptoWallet`.\n// Request type for `users.deleteEmail`.\n// Response type for `users.deleteEmail`.\n// Request type for `users.deleteOAuthRegistration`.\n// Response type for `users.deleteOAuthRegistration`.\n// Request type for `users.deletePassword`.\n// Response type for `users.deletePassword`.\n// Request type for `users.deletePhoneNumber`.\n// Response type for `users.deletePhoneNumber`.\n// Request type for `users.delete`.\n// Response type for `users.delete`.\n// Request type for `users.deleteTOTP`.\n// Response type for `users.deleteTOTP`.\n// Request type for `users.deleteWebAuthnRegistration`.\n// Response type for `users.deleteWebAuthnRegistration`.\n// Request type for `users.exchangePrimaryFactor`.\n// Response type for `users.exchangePrimaryFactor`.\n// Request type for `users.get`.\n// Response type for `users.get`.\n// Request type for `users.search`.\n// Response type for `users.search`.\n// Request type for `users.update`.\n// Response type for `users.update`.\n// MANUAL(SearchUsersQueryOperand)(TYPES)\n// ENDMANUAL(SearchUsersQueryOperand)\n// MANUAL(UserSearchIterator)(FREE_FUNCTION)\nvar mode = /*#__PURE__*/function (mode) {\n  mode[mode[\"pending\"] = 0] = \"pending\";\n  mode[mode[\"inProgress\"] = 1] = \"inProgress\";\n  mode[mode[\"complete\"] = 2] = \"complete\";\n  return mode;\n}(mode || {});\nclass UserSearchIterator {\n  constructor(client, data) {\n    this.client = client;\n    this.data = data;\n    this.mode = mode.pending;\n  }\n  async next() {\n    const res = await this.client.search(this.data);\n    this.data = {\n      ...this.data,\n      cursor: res.results_metadata.next_cursor\n    };\n    if (!this.data.cursor) {\n      this.mode = mode.complete;\n    } else {\n      this.mode = mode.inProgress;\n    }\n    return res.results;\n  }\n  hasNext() {\n    return this.mode !== mode.complete;\n  }\n  async *[Symbol.asyncIterator]() {\n    while (this.hasNext()) {\n      yield this.next();\n    }\n  }\n}\n// ENDMANUAL(UserSearchIterator)\nexports.UserSearchIterator = UserSearchIterator;\nclass Users {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Add a User to Stytch. A `user_id` is returned in the response that can then be used to perform other\n   * operations within Stytch. An `email` or a `phone_number` is required.\n   * @param data {@link UsersCreateRequest}\n   * @returns {@link UsersCreateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  create(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/users`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Get information about a specific User.\n   * @param params {@link UsersGetRequest}\n   * @returns {@link UsersGetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  get(params) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/users/${params.user_id}`,\n      headers,\n      params: {}\n    });\n  }\n\n  /**\n   * Search for Users within your Stytch Project.\n   *\n   * Use the `query` object to filter by different fields. See the `query.operands.filter_value`\n   * documentation below for a list of available filters.\n   *\n   * ### Export all User data\n   *\n   * Submit an empty `query` in your Search Users request to return all of your Stytch Project's Users.\n   *\n   * [This Github repository](https://github.com/stytchauth/stytch-node-export-users) contains a utility that\n   * leverages the Search Users endpoint to export all of your User data to a CSV or JSON file.\n   * @param data {@link UsersSearchRequest}\n   * @returns {@link UsersSearchResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  search(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/users/search`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Update a User's attributes.\n   *\n   * **Note:** In order to add a new email address or phone number to an existing User object, pass the new\n   * email address or phone number into the respective `/send` endpoint for the authentication method of your\n   * choice. If you specify the existing User's `user_id` while calling the `/send` endpoint, the new,\n   * unverified email address or phone number will be added to the existing User object. If the user\n   * successfully authenticates within 5 minutes of the `/send` request, the new email address or phone\n   * number will be marked as verified and remain permanently on the existing Stytch User. Otherwise, it will\n   * be removed from the User object, and any subsequent login requests using that phone number will create a\n   * new User. We require this process to guard against an account takeover vulnerability.\n   * @param data {@link UsersUpdateRequest}\n   * @returns {@link UsersUpdateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  update(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"PUT\",\n      url: `/v1/users/${data.user_id}`,\n      headers,\n      data: {\n        name: data.name,\n        attributes: data.attributes,\n        trusted_metadata: data.trusted_metadata,\n        untrusted_metadata: data.untrusted_metadata,\n        external_id: data.external_id\n      }\n    });\n  }\n\n  /**\n   * Exchange a user's email address or phone number for another.\n   *\n   * Must pass either an `email_address` or a `phone_number`.\n   *\n   * This endpoint only works if the user has exactly one factor. You are able to exchange the type of factor\n   * for another as well, i.e. exchange an `email_address` for a `phone_number`.\n   *\n   * Use this endpoint with caution as it performs an admin level action.\n   * @param data {@link UsersExchangePrimaryFactorRequest}\n   * @returns {@link UsersExchangePrimaryFactorResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  exchangePrimaryFactor(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"PUT\",\n      url: `/v1/users/${data.user_id}/exchange_primary_factor`,\n      headers,\n      data: {\n        email_address: data.email_address,\n        phone_number: data.phone_number\n      }\n    });\n  }\n\n  /**\n   * Delete a User from Stytch.\n   * @param data {@link UsersDeleteRequest}\n   * @returns {@link UsersDeleteResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  delete(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/${data.user_id}`,\n      headers,\n      data: {}\n    });\n  }\n\n  /**\n   * Delete an email from a User.\n   * @param data {@link UsersDeleteEmailRequest}\n   * @returns {@link UsersDeleteEmailResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  deleteEmail(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/emails/${data.email_id}`,\n      headers,\n      data: {}\n    });\n  }\n\n  /**\n   * Delete a phone number from a User.\n   * @param data {@link UsersDeletePhoneNumberRequest}\n   * @returns {@link UsersDeletePhoneNumberResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  deletePhoneNumber(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/phone_numbers/${data.phone_id}`,\n      headers,\n      data: {}\n    });\n  }\n\n  /**\n   * Delete a WebAuthn registration from a User.\n   * @param data {@link UsersDeleteWebAuthnRegistrationRequest}\n   * @returns {@link UsersDeleteWebAuthnRegistrationResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  deleteWebAuthnRegistration(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/webauthn_registrations/${data.webauthn_registration_id}`,\n      headers,\n      data: {}\n    });\n  }\n\n  /**\n   * Delete a biometric registration from a User.\n   * @param data {@link UsersDeleteBiometricRegistrationRequest}\n   * @returns {@link UsersDeleteBiometricRegistrationResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  deleteBiometricRegistration(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/biometric_registrations/${data.biometric_registration_id}`,\n      headers,\n      data: {}\n    });\n  }\n\n  /**\n   * Delete a TOTP from a User.\n   * @param data {@link UsersDeleteTOTPRequest}\n   * @returns {@link UsersDeleteTOTPResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  deleteTOTP(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/totps/${data.totp_id}`,\n      headers,\n      data: {}\n    });\n  }\n\n  /**\n   * Delete a crypto wallet from a User.\n   * @param data {@link UsersDeleteCryptoWalletRequest}\n   * @returns {@link UsersDeleteCryptoWalletResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  deleteCryptoWallet(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/crypto_wallets/${data.crypto_wallet_id}`,\n      headers,\n      data: {}\n    });\n  }\n\n  /**\n   * Delete a password from a User.\n   * @param data {@link UsersDeletePasswordRequest}\n   * @returns {@link UsersDeletePasswordResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  deletePassword(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/passwords/${data.password_id}`,\n      headers,\n      data: {}\n    });\n  }\n\n  /**\n   * Delete an OAuth registration from a User.\n   * @param data {@link UsersDeleteOAuthRegistrationRequest}\n   * @returns {@link UsersDeleteOAuthRegistrationResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  deleteOAuthRegistration(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/users/oauth/${data.oauth_user_registration_id}`,\n      headers,\n      data: {}\n    });\n  }\n\n  // MANUAL(searchAll)(SERVICE_METHOD)\n  // Return an iterator over all search results.  Submit an empty `query` in the request to return all Users.\n  searchAll(data) {\n    return new UserSearchIterator(this, data);\n  }\n  // ENDMANUAL(searchAll)\n}\nexports.Users = Users;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebAuthn = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `webauthn.authenticate`.\n\n// Response type for `webauthn.authenticate`.\n\n// Request type for `webauthn.authenticateStart`.\n\n// Response type for `webauthn.authenticateStart`.\n\n// Request type for `webauthn.listCredentials`.\n\n// Response type for `webauthn.listCredentials`.\n\n// Request type for `webauthn.register`.\n\n// Response type for `webauthn.register`.\n\n// Request type for `webauthn.registerStart`.\n\n// Response type for `webauthn.registerStart`.\n\n// Request type for `webauthn.update`.\n\n// Response type for `webauthn.update`.\n\nclass WebAuthn {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Initiate the process of creating a new Passkey or WebAuthn registration.\n   *\n   * To optimize for Passkeys, set the `return_passkey_credential_options` field to `true`.\n   *\n   * After calling this endpoint, the browser will need to call\n   * [navigator.credentials.create()](https://www.w3.org/TR/webauthn-2/#sctn-createCredential) with the data\n   * from\n   * [public_key_credential_creation_options](https://w3c.github.io/webauthn/#dictionary-makecredentialoptions)\n   * passed to the [navigator.credentials.create()](https://www.w3.org/TR/webauthn-2/#sctn-createCredential)\n   * request via the public key argument. We recommend using the `create()` wrapper provided by the\n   * webauthn-json library.\n   *\n   * If you are not using the [webauthn-json](https://github.com/github/webauthn-json) library, the\n   * `public_key_credential_creation_options` will need to be converted to a suitable public key by\n   * unmarshalling the JSON, base64 decoding the user ID field, and converting user ID and the challenge\n   * fields into an array buffer.\n   * @param data {@link WebAuthnRegisterStartRequest}\n   * @returns {@link WebAuthnRegisterStartResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  registerStart(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/webauthn/register/start`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Complete the creation of a WebAuthn registration by passing the response from the\n   * [navigator.credentials.create()](https://www.w3.org/TR/webauthn-2/#sctn-createCredential) request to\n   * this endpoint as the `public_key_credential` parameter.\n   *\n   * If the [webauthn-json](https://github.com/github/webauthn-json) library's `create()` method was used,\n   * the response can be passed directly to the\n   * [register endpoint](https://stytch.com/docs/api/webauthn-register). If not, some fields (the client data\n   * and the attestation object) from the\n   * [navigator.credentials.create()](https://www.w3.org/TR/webauthn-2/#sctn-createCredential) response will\n   * need to be converted from array buffers to strings and marshalled into JSON.\n   * @param data {@link WebAuthnRegisterRequest}\n   * @returns {@link WebAuthnRegisterResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  register(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/webauthn/register`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Initiate the authentication of a Passkey or WebAuthn registration.\n   *\n   * To optimize for Passkeys, set the `return_passkey_credential_options` field to `true`.\n   *\n   * After calling this endpoint, the browser will need to call\n   * [navigator.credentials.get()](https://www.w3.org/TR/webauthn-2/#sctn-getAssertion) with the data from\n   * `public_key_credential_request_options` passed to the\n   * [navigator.credentials.get()](https://www.w3.org/TR/webauthn-2/#sctn-getAssertion) request via the\n   * public key argument. We recommend using the `get()` wrapper provided by the webauthn-json library.\n   *\n   * If you are not using the [webauthn-json](https://github.com/github/webauthn-json) library, `the\n   * public_key_credential_request_options` will need to be converted to a suitable public key by\n   * unmarshalling the JSON and converting some the fields to array buffers.\n   * @param data {@link WebAuthnAuthenticateStartRequest}\n   * @returns {@link WebAuthnAuthenticateStartResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  authenticateStart(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/webauthn/authenticate/start`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Complete the authentication of a Passkey or WebAuthn registration by passing the response from the\n   * [navigator.credentials.get()](https://www.w3.org/TR/webauthn-2/#sctn-getAssertion) request to the\n   * authenticate endpoint.\n   *\n   * If the [webauthn-json](https://github.com/github/webauthn-json) library's `get()` method was used, the\n   * response can be passed directly to the\n   * [authenticate endpoint](https://stytch.com/docs/api/webauthn-authenticate). If not some fields from the\n   * [navigator.credentials.get()](https://www.w3.org/TR/webauthn-2/#sctn-getAssertion) response will need to\n   * be converted from array buffers to strings and marshalled into JSON.\n   * @param data {@link WebAuthnAuthenticateRequest}\n   * @returns {@link WebAuthnAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  authenticate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/webauthn/authenticate`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Updates a Passkey or WebAuthn registration.\n   * @param data {@link WebAuthnUpdateRequest}\n   * @returns {@link WebAuthnUpdateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  update(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"PUT\",\n      url: `/v1/webauthn/${data.webauthn_registration_id}`,\n      headers,\n      data: {\n        name: data.name\n      }\n    });\n  }\n\n  /**\n   * List the public key credentials of the WebAuthn Registrations or Passkeys registered to a specific User.\n   * @param params {@link WebAuthnListCredentialsRequest}\n   * @returns {@link WebAuthnListCredentialsResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  listCredentials(params) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/webauthn/credentials/${params.user_id}/${params.domain}`,\n      headers,\n      params: {}\n    });\n  }\n}\nexports.WebAuthn = WebAuthn;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IDP = void 0;\nvar jose = _interopRequireWildcard(require(\"jose\"));\nvar _shared = require(\"../shared\");\nvar _errors = require(\"../shared/errors\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nclass IDP {\n  constructor(fetchConfig, jwtConfig) {\n    this.fetchConfig = fetchConfig;\n    this.jwtConfig = jwtConfig;\n    this.jwksClient = jwtConfig.jwks;\n  }\n  async introspectTokenNetwork(data) {\n    const fetchConfig = {\n      ...this.fetchConfig,\n      headers: {\n        [\"User-Agent\"]: this.fetchConfig.headers[\"User-Agent\"],\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    };\n    const params = {\n      token: data.token,\n      client_id: data.client_id\n    };\n    if (data.client_secret && data.client_secret.length > 0) {\n      params.client_secret = data.client_secret;\n    }\n    if (data.token_type_hint && data.token_type_hint.length > 0) {\n      params.token_type_hint = data.token_type_hint;\n    }\n    let response;\n    try {\n      response = await (0, _shared.request)(fetchConfig, {\n        method: \"POST\",\n        url: `/v1/public/${this.jwtConfig.projectID}/oauth2/introspect`,\n        dataRaw: new URLSearchParams(params)\n      });\n    } catch (err) {\n      throw new _errors.ClientError(\"token_invalid\", \"Could not introspect token\", err);\n    }\n    if (!response.active) {\n      throw new _errors.ClientError(\"token_invalid\", \"Token was not active\", null);\n    }\n    const {\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      aud: _aud,\n      exp: _exp,\n      iat: _iat,\n      iss: _iss,\n      nbf: _nbf,\n      sub: _sub,\n      status_code: _status_code,\n      scope: _scope,\n      active: _active,\n      request_id: _request_id,\n      token_type: _token_type,\n      client_id: _client_id,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      ...customClaims\n    } = response;\n    return {\n      subject: _sub,\n      scope: _scope,\n      audience: _aud,\n      expires_at: _exp,\n      issued_at: _iat,\n      issuer: _iss,\n      not_before: _nbf,\n      custom_claims: customClaims,\n      token_type: _token_type\n    };\n  }\n  async introspectTokenLocal(tokenJWT, options) {\n    const jwtOptions = {\n      audience: this.jwtConfig.projectID,\n      issuer: this.jwtConfig.issuers,\n      typ: \"JWT\"\n    };\n    const now = options?.current_date || new Date();\n    let payload;\n    try {\n      const token = await jose.jwtVerify(tokenJWT, this.jwksClient, {\n        ...jwtOptions,\n        clockTolerance: options?.clock_tolerance_seconds,\n        currentDate: now\n      });\n      payload = token.payload;\n    } catch (err) {\n      throw new _errors.ClientError(\"jwt_invalid\", \"Could not verify JWT\", err);\n    }\n\n    // The custom claim set is all the claims in the payload except for the standard claims and\n    // the scope and token_type claims. The cleanest way to collect those seems to be naming what we want\n    // to omit and using ...rest for to collect the custom claims.\n    const {\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      aud: _aud,\n      exp: _exp,\n      iat: _iat,\n      iss: _iss,\n      jti: _jti,\n      nbf: _nbf,\n      sub: _sub,\n      scope: _scope,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      ...custom_claims\n    } = payload;\n    return {\n      subject: _sub,\n      expires_at: _exp,\n      audience: _aud,\n      issued_at: _iat,\n      issuer: _iss,\n      not_before: _nbf,\n      scope: _scope,\n      token_type: \"access_token\",\n      custom_claims\n    };\n  }\n}\nexports.IDP = IDP;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Client = void 0;\nvar jose = _interopRequireWildcard(require(\"jose\"));\nvar _client = require(\"../shared/client\");\nvar _crypto_wallets = require(\"./crypto_wallets\");\nvar _fraud = require(\"./fraud\");\nvar _impersonation = require(\"./impersonation\");\nvar _sessions = require(\"../shared/sessions\");\nvar _m2m = require(\"./m2m\");\nvar _magic_links = require(\"./magic_links\");\nvar _oauth = require(\"./oauth\");\nvar _otps = require(\"./otps\");\nvar _passwords = require(\"./passwords\");\nvar _project = require(\"./project\");\nvar _sessions2 = require(\"./sessions\");\nvar _totps = require(\"./totps\");\nvar _users = require(\"./users\");\nvar _webauthn = require(\"./webauthn\");\nvar _idp = require(\"./idp\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nclass Client extends _client.BaseClient {\n  constructor(config) {\n    super(config);\n    this.jwtConfig = {\n      // Only allow JWTs that were meant for this project.\n      projectID: config.project_id,\n      // Fetch the signature verification keys for this project as needed.\n      jwks: jose.createRemoteJWKSet(new URL(`/v1/sessions/jwks/${config.project_id}`, this.fetchConfig.baseURL)),\n      issuers: [`stytch.com/${config.project_id}`, (0, _sessions.trimTrailingSlash)(this.fetchConfig.baseURL)]\n    };\n    this.cryptoWallets = new _crypto_wallets.CryptoWallets(this.fetchConfig);\n    this.fraud = new _fraud.Fraud(this.fetchConfig);\n    this.impersonation = new _impersonation.Impersonation(this.fetchConfig);\n    this.m2m = new _m2m.M2M(this.fetchConfig, this.jwtConfig);\n    this.magicLinks = new _magic_links.MagicLinks(this.fetchConfig);\n    this.oauth = new _oauth.OAuth(this.fetchConfig);\n    this.otps = new _otps.OTPs(this.fetchConfig);\n    this.passwords = new _passwords.Passwords(this.fetchConfig);\n    this.project = new _project.Project(this.fetchConfig);\n    this.sessions = new _sessions2.Sessions(this.fetchConfig, this.jwtConfig);\n    this.totps = new _totps.TOTPs(this.fetchConfig);\n    this.users = new _users.Users(this.fetchConfig);\n    this.webauthn = new _webauthn.WebAuthn(this.fetchConfig);\n    this.idp = new _idp.IDP(this.fetchConfig, this.jwtConfig);\n  }\n}\nexports.Client = Client;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IntermediateSessions = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `discovery.intermediateSessions.exchange`.\n\n// Response type for `discovery.intermediateSessions.exchange`.\n\nclass IntermediateSessions {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Exchange an Intermediate Session for a fully realized\n   * [Member Session](https://stytch.com/docs/b2b/api/session-object) in a desired\n   * [Organization](https://stytch.com/docs/b2b/api/organization-object).\n   * This operation consumes the Intermediate Session.\n   *\n   * This endpoint can be used to accept invites and create new members via domain matching.\n   *\n   * If the is required to complete MFA to log in to the, the returned value of `member_authenticated` will\n   * be `false`.\n   * The `intermediate_session_token` will not be consumed and instead will be returned in the response.\n   * The `intermediate_session_token` can be passed into the\n   * [OTP SMS Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-otp-sms) to complete the\n   * MFA step and acquire a full member session.\n   * The `intermediate_session_token` can also be used with the\n   * [Exchange Intermediate Session endpoint](https://stytch.com/docs/b2b/api/exchange-intermediate-session)\n   * or the\n   * [Create Organization via Discovery endpoint](https://stytch.com/docs/b2b/api/create-organization-via-discovery) to join a different Organization or create a new one.\n   * The `session_duration_minutes` and `session_custom_claims` parameters will be ignored.\n   *\n   * If the Member is logging in via an OAuth provider that does not fully verify the email, the returned\n   * value of `member_authenticated` will be `false`.\n   * The `intermediate_session_token` will not be consumed and instead will be returned in the response.\n   * The `primary_required` field details the authentication flow the Member must perform in order to\n   * [complete a step-up authentication](https://stytch.com/docs/b2b/guides/oauth/auth-flows) into the\n   * organization. The `intermediate_session_token` must be passed into that authentication flow.\n   * @param data {@link B2BDiscoveryIntermediateSessionsExchangeRequest}\n   * @returns {@link B2BDiscoveryIntermediateSessionsExchangeResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  exchange(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/discovery/intermediate_sessions/exchange`,\n      headers,\n      data\n    });\n  }\n}\nexports.IntermediateSessions = IntermediateSessions;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Organizations = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `discovery.organizations.create`.\n\n// Response type for `discovery.organizations.create`.\n\n// Request type for `discovery.organizations.list`.\n\n// Response type for `discovery.organizations.list`.\n\nclass Organizations {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * If an end user does not want to join any already-existing, or has no possible Organizations to join,\n   * this endpoint can be used to create a new\n   * [Organization](https://stytch.com/docs/b2b/api/organization-object) and\n   * [Member](https://stytch.com/docs/b2b/api/member-object).\n   *\n   * This operation consumes the Intermediate Session.\n   *\n   * This endpoint will also create an initial Member Session for the newly created Member.\n   *\n   * The created by this endpoint will automatically be granted the `stytch_admin` Role. See the\n   * [RBAC guide](https://stytch.com/docs/b2b/guides/rbac/stytch-default) for more details on this Role.\n   *\n   * If the new Organization is created with a `mfa_policy` of `REQUIRED_FOR_ALL`, the newly created Member\n   * will need to complete an MFA step to log in to the Organization.\n   * The `intermediate_session_token` will not be consumed and instead will be returned in the response.\n   * The `intermediate_session_token` can be passed into the\n   * [OTP SMS Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-otp-sms) to complete the\n   * MFA step and acquire a full member session.\n   * The `intermediate_session_token` can also be used with the\n   * [Exchange Intermediate Session endpoint](https://stytch.com/docs/b2b/api/exchange-intermediate-session)\n   * or the\n   * [Create Organization via Discovery endpoint](https://stytch.com/docs/b2b/api/create-organization-via-discovery) to join a different Organization or create a new one.\n   * The `session_duration_minutes` and `session_custom_claims` parameters will be ignored.\n   * @param data {@link B2BDiscoveryOrganizationsCreateRequest}\n   * @returns {@link B2BDiscoveryOrganizationsCreateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  create(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/discovery/organizations/create`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * List all possible organization relationships connected to a\n   * [Member Session](https://stytch.com/docs/b2b/api/session-object) or Intermediate Session.\n   *\n   * When a Member Session is passed in, relationships with a type of `active_member`, `pending_member`, or\n   * `invited_member`\n   * will be returned, and any membership can be assumed by calling the\n   * [Exchange Session](https://stytch.com/docs/b2b/api/exchange-session) endpoint.\n   *\n   * When an Intermediate Session is passed in, all relationship types - `active_member`, `pending_member`,\n   * `invited_member`,\n   * `eligible_to_join_by_email_domain`, and `eligible_to_join_by_oauth_tenant` - will be returned,\n   * and any membership can be assumed by calling the\n   * [Exchange Intermediate Session](https://stytch.com/docs/b2b/api/exchange-intermediate-session) endpoint.\n   *\n   * This endpoint requires either an `intermediate_session_token`, `session_jwt` or `session_token` be\n   * included in the request.\n   * It will return an error if multiple are present.\n   *\n   * This operation does not consume the Intermediate Session or Session Token passed in.\n   * @param data {@link B2BDiscoveryOrganizationsListRequest}\n   * @returns {@link B2BDiscoveryOrganizationsListResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  list(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/discovery/organizations`,\n      headers,\n      data\n    });\n  }\n}\nexports.Organizations = Organizations;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Discovery = void 0;\nrequire(\"../shared/method_options\");\nvar _discovery_intermediate_sessions = require(\"./discovery_intermediate_sessions\");\nvar _discovery_organizations = require(\"./discovery_organizations\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\nclass Discovery {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.intermediateSessions = new _discovery_intermediate_sessions.IntermediateSessions(this.fetchConfig);\n    this.organizations = new _discovery_organizations.Organizations(this.fetchConfig);\n  }\n}\nexports.Discovery = Discovery;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Impersonation = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `impersonation.authenticate`.\n\n// Response type for `impersonation.authenticate`.\n\nclass Impersonation {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Authenticate an impersonation token to impersonate a. This endpoint requires an impersonation token that\n   * is not expired or previously used.\n   * A Stytch session will be created for the impersonated member with a 60 minute duration. Impersonated\n   * sessions cannot be extended.\n   *\n   * Prior to this step, you can generate an impersonation token by visiting the Stytch dashboard, viewing a\n   * member, and clicking the `Impersonate Member` button.\n   * @param data {@link B2BImpersonationAuthenticateRequest}\n   * @returns {@link B2BImpersonationAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  authenticate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/impersonation/authenticate`,\n      headers,\n      data\n    });\n  }\n}\nexports.Impersonation = Impersonation;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Discovery = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `magicLinks.discovery.authenticate`.\n\n// Response type for `magicLinks.discovery.authenticate`.\n\nclass Discovery {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Authenticates the Discovery Magic Link token and exchanges it for an Intermediate Session Token.\n   * Intermediate Session Tokens can be used for various Discovery login flows and are valid for 10 minutes.\n   * @param data {@link B2BMagicLinksDiscoveryAuthenticateRequest}\n   * @returns {@link B2BMagicLinksDiscoveryAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  authenticate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/magic_links/discovery/authenticate`,\n      headers,\n      data\n    });\n  }\n}\nexports.Discovery = Discovery;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Discovery = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `magicLinks.email.discovery.send`.\n\n// Response type for `magicLinks.email.discovery.send`.\n\nclass Discovery {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Send a discovery magic link to an email address. The magic link is valid for 60 minutes.\n   * @param data {@link B2BMagicLinksEmailDiscoverySendRequest}\n   * @returns {@link B2BMagicLinksEmailDiscoverySendResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  send(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/magic_links/email/discovery/send`,\n      headers,\n      data\n    });\n  }\n}\nexports.Discovery = Discovery;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Email = void 0;\nvar _method_options = require(\"../shared/method_options\");\nvar _magic_links_email_discovery = require(\"./magic_links_email_discovery\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `magicLinks.email.invite`.\n\n// Response type for `magicLinks.email.invite`.\n\n// Request type for `magicLinks.email.loginOrSignup`.\n\n// Response type for `magicLinks.email.loginOrSignup`.\n\nclass Email {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.discovery = new _magic_links_email_discovery.Discovery(this.fetchConfig);\n  }\n\n  /**\n   * Send either a login or signup magic link to a Member. A new, pending, or invited Member will receive a\n   * signup Email Magic Link. Members will have a `pending` status until they successfully authenticate. An\n   * active Member will receive a login Email Magic Link.\n   *\n   * The magic link is valid for 60 minutes.\n   * @param data {@link B2BMagicLinksEmailLoginOrSignupRequest}\n   * @returns {@link B2BMagicLinksEmailLoginOrSignupResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  loginOrSignup(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/magic_links/email/login_or_signup`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Send an invite email to a new to join an. The Member will be created with an `invited` status until they\n   * successfully authenticate. Sending invites to `pending` Members will update their status to `invited`.\n   * Sending invites to already `active` Members will return an error.\n   *\n   * The magic link invite will be valid for 1 week.\n   *\n   * ## Revoke an invite\n   *\n   * To revoke an existing invite, use the [Delete Member](https://stytch.com/docs/b2b/api/delete-member)\n   * endpoint. This will both delete the invited Member from the target Organization and revoke all existing\n   * invite emails.\n   * @param data {@link B2BMagicLinksEmailInviteRequest}\n   * @param options {@link B2BMagicLinksEmailInviteRequestOptions}\n   * @returns {@link B2BMagicLinksEmailInviteResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  invite(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/magic_links/email/invite`,\n      headers,\n      data\n    });\n  }\n}\nexports.Email = Email;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MagicLinks = void 0;\nrequire(\"../shared/method_options\");\nvar _magic_links_discovery = require(\"./magic_links_discovery\");\nvar _magic_links_email = require(\"./magic_links_email\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `magicLinks.authenticate`.\n\n// Response type for `magicLinks.authenticate`.\n\nclass MagicLinks {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.email = new _magic_links_email.Email(this.fetchConfig);\n    this.discovery = new _magic_links_discovery.Discovery(this.fetchConfig);\n  }\n\n  /**\n   * Authenticate a with a Magic Link. This endpoint requires a Magic Link token that is not expired or\n   * previously used. If the Member\u2019s status is `pending` or `invited`, they will be updated to `active`.\n   * Provide the `session_duration_minutes` parameter to set the lifetime of the session. If the\n   * `session_duration_minutes` parameter is not specified, a Stytch session will be created with a 60 minute\n   * duration.\n   *\n   * If the Member is required to complete MFA to log in to the, the returned value of `member_authenticated`\n   * will be `false`, and an `intermediate_session_token` will be returned.\n   * The `intermediate_session_token` can be passed into the\n   * [OTP SMS Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-otp-sms),\n   * [TOTP Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-totp),\n   * or [Recovery Codes Recover endpoint](https://stytch.com/docs/b2b/api/recovery-codes-recover) to complete\n   * the MFA step and acquire a full member session.\n   * The `intermediate_session_token` can also be used with the\n   * [Exchange Intermediate Session endpoint](https://stytch.com/docs/b2b/api/exchange-intermediate-session)\n   * or the\n   * [Create Organization via Discovery endpoint](https://stytch.com/docs/b2b/api/create-organization-via-discovery) to join a different Organization or create a new one.\n   * The `session_duration_minutes` and `session_custom_claims` parameters will be ignored.\n   *\n   * If a valid `session_token` or `session_jwt` is passed in, the Member will not be required to complete an\n   * MFA step.\n   * @param data {@link B2BMagicLinksAuthenticateRequest}\n   * @returns {@link B2BMagicLinksAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  authenticate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/magic_links/authenticate`,\n      headers,\n      data\n    });\n  }\n}\nexports.MagicLinks = MagicLinks;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Discovery = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `oauth.discovery.authenticate`.\n\n// Response type for `oauth.discovery.authenticate`.\n\nclass Discovery {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Authenticates the Discovery token and exchanges it for an Intermediate\n   * Session Token. Intermediate Session Tokens can be used for various Discovery login flows and are valid\n   * for 10 minutes.\n   * @param data {@link B2BOAuthDiscoveryAuthenticateRequest}\n   * @returns {@link B2BOAuthDiscoveryAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  authenticate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/oauth/discovery/authenticate`,\n      headers,\n      data\n    });\n  }\n}\nexports.Discovery = Discovery;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OAuth = void 0;\nrequire(\"../shared/method_options\");\nvar _oauth_discovery = require(\"./oauth_discovery\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `oauth.authenticate`.\n\n// Response type for `oauth.authenticate`.\n\nclass OAuth {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.discovery = new _oauth_discovery.Discovery(this.fetchConfig);\n  }\n\n  /**\n   * Authenticate a given a `token`. This endpoint verifies that the member completed the flow by verifying\n   * that the token is valid and hasn't expired.  Provide the `session_duration_minutes` parameter to set the\n   * lifetime of the session. If the `session_duration_minutes` parameter is not specified, a Stytch session\n   * will be created with a 60 minute duration.\n   *\n   * If the Member is required to complete MFA to log in to the, the returned value of `member_authenticated`\n   * will be `false`, and an `intermediate_session_token` will be returned.\n   * The `intermediate_session_token` can be passed into the\n   * [OTP SMS Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-otp-sms) to complete the\n   * MFA step and acquire a full member session.\n   * The `intermediate_session_token` can also be used with the\n   * [Exchange Intermediate Session endpoint](https://stytch.com/docs/b2b/api/exchange-intermediate-session)\n   * or the\n   * [Create Organization via Discovery endpoint](https://stytch.com/docs/b2b/api/create-organization-via-discovery) to join a different Organization or create a new one.\n   * The `session_duration_minutes` and `session_custom_claims` parameters will be ignored.\n   *\n   * If a valid `session_token` or `session_jwt` is passed in, the Member will not be required to complete an\n   * MFA step.\n   *\n   * If the Member is logging in via an OAuth provider that does not fully verify the email, the returned\n   * value of `member_authenticated` will be `false`, and an `intermediate_session_token` will be returned.\n   * The `primary_required` field details the authentication flow the Member must perform in order to\n   * [complete a step-up authentication](https://stytch.com/docs/b2b/guides/oauth/auth-flows) into the\n   * organization. The `intermediate_session_token` must be passed into that authentication flow.\n   *\n   * We\u2019re actively accepting requests for new OAuth providers! Please [email us](mailto:support@stytch.com)\n   * or [post in our community](https://stytch.com/docs/b2b/resources) if you are looking for an OAuth\n   * provider that is not currently supported.\n   * @param data {@link B2BOAuthAuthenticateRequest}\n   * @returns {@link B2BOAuthAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  authenticate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/oauth/authenticate`,\n      headers,\n      data\n    });\n  }\n}\nexports.OAuth = OAuth;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OAuthProviders = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Response type for `organizations.members.oauthProviders.github`.\n\n// Response type for `organizations.members.oauthProviders.google`.\n\n// Response type for `organizations.members.oauthProviders.hubspot`.\n\n// Response type for `organizations.members.oauthProviders.microsoft`.\n\n/**\n * Request type for `organizations.members.oauthProviders.github`,\n * `organizations.members.oauthProviders.google`, `organizations.members.oauthProviders.hubspot`,\n * `organizations.members.oauthProviders.microsoft`.\n */\n\n// Request type for `organizations.members.oauthProviders.slack`.\n\n// Response type for `organizations.members.oauthProviders.slack`.\n\n// MANUAL(ProviderInformationRequest)(TYPES)\n/**\n * @deprecated Since version 10.11.0. Please use {@link B2BOrganizationsMembersOAuthProvidersProviderInformationRequest} instead.\n */\n\n// ENDMANUAL(ProviderInformationRequest)\n\nclass OAuthProviders {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Retrieve the saved Google access token and ID token for a member. After a successful OAuth login, Stytch\n   * will save the\n   * issued access token and ID token from the identity provider. If a refresh token has been issued, Stytch\n   * will refresh the\n   * access token automatically.\n   *\n   * Google One Tap does not return access tokens. If the member has only authenticated through Google One\n   * Tap and not through a regular Google OAuth flow, this endpoint will not return any tokens.\n   *\n   * __Note:__ Google does not issue a refresh token on every login, and refresh tokens may expire if unused.\n   * To force a refresh token to be issued, pass the `?provider_prompt=consent` query param into the\n   * [Start Google OAuth flow](https://stytch.com/docs/b2b/api/oauth-google-start) endpoint.\n   * @param params {@link B2BOrganizationsMembersOAuthProvidersProviderInformationRequest}\n   * @returns {@link B2BOrganizationsMembersOAuthProvidersGoogleResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  google(params) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/b2b/organizations/${params.organization_id}/members/${params.member_id}/oauth_providers/google`,\n      headers,\n      params: {\n        include_refresh_token: params.include_refresh_token\n      }\n    });\n  }\n\n  /**\n   * Retrieve the saved Microsoft access token and ID token for a member. After a successful OAuth login,\n   * Stytch will save the\n   * issued access token and ID token from the identity provider. If a refresh token has been issued, Stytch\n   * will refresh the\n   * access token automatically.\n   * @param params {@link B2BOrganizationsMembersOAuthProvidersProviderInformationRequest}\n   * @returns {@link B2BOrganizationsMembersOAuthProvidersMicrosoftResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  microsoft(params) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/b2b/organizations/${params.organization_id}/members/${params.member_id}/oauth_providers/microsoft`,\n      headers,\n      params: {\n        include_refresh_token: params.include_refresh_token\n      }\n    });\n  }\n\n  /**\n   * Retrieve the saved Slack access token and ID token for a member. After a successful OAuth login, Stytch\n   * will save the\n   * issued access token and ID token from the identity provider.\n   * @param params {@link B2BOrganizationsMembersOAuthProvidersSlackRequest}\n   * @returns {@link B2BOrganizationsMembersOAuthProvidersSlackResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  slack(params) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/b2b/organizations/${params.organization_id}/members/${params.member_id}/oauth_providers/slack`,\n      headers,\n      params: {}\n    });\n  }\n\n  /**\n   * Retrieve the saved Hubspot access token and ID token for a member. After a successful OAuth login,\n   * Stytch will save the\n   * issued access token and ID token from the identity provider. If a refresh token has been issued, Stytch\n   * will refresh the\n   * access token automatically.\n   * @param params {@link B2BOrganizationsMembersOAuthProvidersProviderInformationRequest}\n   * @returns {@link B2BOrganizationsMembersOAuthProvidersHubspotResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  hubspot(params) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/b2b/organizations/${params.organization_id}/members/${params.member_id}/oauth_providers/hubspot`,\n      headers,\n      params: {\n        include_refresh_token: params.include_refresh_token\n      }\n    });\n  }\n\n  /**\n   * Retrieve the saved GitHub access token for a Member. After a successful OAuth login, Stytch will save\n   * the\n   * issued access token from the identity provider. GitHub does not issue refresh tokens, but will\n   * invalidate access\n   * tokens after very long periods of inactivity.\n   * @param params {@link B2BOrganizationsMembersOAuthProvidersProviderInformationRequest}\n   * @returns {@link B2BOrganizationsMembersOAuthProvidersGithubResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  github(params) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/b2b/organizations/${params.organization_id}/members/${params.member_id}/oauth_providers/github`,\n      headers,\n      params: {\n        include_refresh_token: params.include_refresh_token\n      }\n    });\n  }\n}\nexports.OAuthProviders = OAuthProviders;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Members = void 0;\nvar _method_options = require(\"../shared/method_options\");\nvar _organizations_members_oauth_providers = require(\"./organizations_members_oauth_providers\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `organizations.members.create`.\n\n// Response type for `organizations.members.create`.\n\n// Request type for `organizations.members.dangerouslyGet`.\n\n// Request type for `organizations.members.deleteMFAPhoneNumber`.\n\n// Response type for `organizations.members.deleteMFAPhoneNumber`.\n\n// Request type for `organizations.members.deletePassword`.\n\n// Response type for `organizations.members.deletePassword`.\n\n// Request type for `organizations.members.delete`.\n\n// Response type for `organizations.members.delete`.\n\n// Request type for `organizations.members.deleteTOTP`.\n\n// Response type for `organizations.members.deleteTOTP`.\n\n// Request type for `organizations.members.get`.\n\n// Response type for `organizations.members.dangerouslyGet`, `organizations.members.get`.\n\n// Request type for `organizations.members.oidcProviders`.\n\n// Response type for `organizations.members.oidcProviders`.\n\n// Request type for `organizations.members.reactivate`.\n\n// Response type for `organizations.members.reactivate`.\n\n// Request type for `organizations.members.search`.\n\n// Response type for `organizations.members.search`.\n\n// Request type for `organizations.members.unlinkRetiredEmail`.\n\n// Response type for `organizations.members.unlinkRetiredEmail`.\n\n// Request type for `organizations.members.update`.\n\n// Response type for `organizations.members.update`.\n\nclass Members {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.oauthProviders = new _organizations_members_oauth_providers.OAuthProviders(this.fetchConfig);\n  }\n\n  /**\n   * Updates a specified by `organization_id` and `member_id`.\n   * @param data {@link B2BOrganizationsMembersUpdateRequest}\n   * @param options {@link B2BOrganizationsMembersUpdateRequestOptions}\n   * @returns {@link B2BOrganizationsMembersUpdateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  update(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"PUT\",\n      url: `/v1/b2b/organizations/${data.organization_id}/members/${data.member_id}`,\n      headers,\n      data: {\n        name: data.name,\n        trusted_metadata: data.trusted_metadata,\n        untrusted_metadata: data.untrusted_metadata,\n        is_breakglass: data.is_breakglass,\n        mfa_phone_number: data.mfa_phone_number,\n        mfa_enrolled: data.mfa_enrolled,\n        roles: data.roles,\n        preserve_existing_sessions: data.preserve_existing_sessions,\n        default_mfa_method: data.default_mfa_method,\n        email_address: data.email_address,\n        external_id: data.external_id,\n        unlink_email: data.unlink_email\n      }\n    });\n  }\n\n  /**\n   * Deletes a specified by `organization_id` and `member_id`.\n   * @param data {@link B2BOrganizationsMembersDeleteRequest}\n   * @param options {@link B2BOrganizationsMembersDeleteRequestOptions}\n   * @returns {@link B2BOrganizationsMembersDeleteResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  delete(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/b2b/organizations/${data.organization_id}/members/${data.member_id}`,\n      headers,\n      data: {}\n    });\n  }\n\n  /**\n   * Reactivates a deleted's status and its associated email status (if applicable) to active, specified by\n   * `organization_id` and `member_id`. This endpoint will only work for Members with at least one verified\n   * email where their `email_address_verified` is `true`.\n   * @param data {@link B2BOrganizationsMembersReactivateRequest}\n   * @param options {@link B2BOrganizationsMembersReactivateRequestOptions}\n   * @returns {@link B2BOrganizationsMembersReactivateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  reactivate(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"PUT\",\n      url: `/v1/b2b/organizations/${data.organization_id}/members/${data.member_id}/reactivate`,\n      headers,\n      data: {}\n    });\n  }\n\n  /**\n   * Delete a's MFA phone number.\n   *\n   * To change a Member's phone number, you must first call this endpoint to delete the existing phone number.\n   *\n   * Existing Member Sessions that include a phone number authentication factor will not be revoked if the\n   * phone number is deleted, and MFA will not be enforced until the Member logs in again.\n   * If you wish to enforce MFA immediately after a phone number is deleted, you can do so by prompting the\n   * Member to enter a new phone number\n   * and calling the [OTP SMS send](https://stytch.com/docs/b2b/api/otp-sms-send) endpoint, then calling the\n   * [OTP SMS Authenticate](https://stytch.com/docs/b2b/api/authenticate-otp-sms) endpoint.\n   * @param data {@link B2BOrganizationsMembersDeleteMFAPhoneNumberRequest}\n   * @param options {@link B2BOrganizationsMembersDeleteMFAPhoneNumberRequestOptions}\n   * @returns {@link B2BOrganizationsMembersDeleteMFAPhoneNumberResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  deleteMFAPhoneNumber(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/b2b/organizations/${data.organization_id}/members/mfa_phone_numbers/${data.member_id}`,\n      headers,\n      data: {}\n    });\n  }\n\n  /**\n   * Delete a Member's MFA TOTP registration.\n   *\n   * To mint a new registration for a Member, you must first call this endpoint to delete the existing\n   * registration.\n   *\n   * Existing Member Sessions that include the TOTP authentication factor will not be revoked if the\n   * registration is deleted, and MFA will not be enforced until the Member logs in again.\n   * @param data {@link B2BOrganizationsMembersDeleteTOTPRequest}\n   * @param options {@link B2BOrganizationsMembersDeleteTOTPRequestOptions}\n   * @returns {@link B2BOrganizationsMembersDeleteTOTPResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  deleteTOTP(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/b2b/organizations/${data.organization_id}/members/${data.member_id}/totp`,\n      headers,\n      data: {}\n    });\n  }\n\n  /**\n   * Search for Members within specified Organizations. An array with at least one `organization_id` is\n   * required. Submitting an empty `query` returns all non-deleted Members within the specified Organizations.\n   *\n   * *All fuzzy search filters require a minimum of three characters.\n   * @param data {@link B2BOrganizationsMembersSearchRequest}\n   * @param options {@link B2BOrganizationsMembersSearchRequestOptions}\n   * @returns {@link B2BOrganizationsMembersSearchResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  search(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/organizations/members/search`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Delete a's password.\n   * @param data {@link B2BOrganizationsMembersDeletePasswordRequest}\n   * @param options {@link B2BOrganizationsMembersDeletePasswordRequestOptions}\n   * @returns {@link B2BOrganizationsMembersDeletePasswordResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  deletePassword(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/b2b/organizations/${data.organization_id}/members/passwords/${data.member_password_id}`,\n      headers,\n      data: {}\n    });\n  }\n\n  /**\n   * Get a Member by `member_id`. This endpoint does not require an `organization_id`, enabling you to get\n   * members across organizations. This is a dangerous operation. Incorrect use may open you up to indirect\n   * object reference (IDOR) attacks. We recommend using the\n   * [Get Member](https://stytch.com/docs/b2b/api/get-member) API instead.\n   * @param params {@link B2BOrganizationsMembersDangerouslyGetRequest}\n   * @returns {@link B2BOrganizationsMembersGetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  dangerouslyGet(params) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/b2b/organizations/members/dangerously_get/${params.member_id}`,\n      headers,\n      params: {\n        include_deleted: params.include_deleted\n      }\n    });\n  }\n\n  /**\n   * Retrieve the saved OIDC access tokens and ID tokens for a member. After a successful OIDC login, Stytch\n   * will save the\n   * issued access token and ID token from the identity provider. If a refresh token has been issued, Stytch\n   * will refresh the\n   * access token automatically.\n   * @param params {@link B2BOrganizationsMembersOIDCProviderInformationRequest}\n   * @returns {@link B2BOrganizationsMembersOIDCProvidersResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  oidcProviders(params) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/b2b/organizations/${params.organization_id}/members/${params.member_id}/oidc_providers`,\n      headers,\n      params: {\n        include_refresh_token: params.include_refresh_token\n      }\n    });\n  }\n\n  /**\n   * Unlinks a retired email address from a specified by their `organization_id` and `member_id`. The email\n   * address\n   * to be retired can be identified in the request body by either its `email_id`, its `email_address`, or\n   * both. If using\n   * both identifiers they must refer to the same email.\n   *\n   * A previously active email address can be marked as retired in one of two ways:\n   *\n   * - It's replaced with a new primary email address during an explicit Member update.\n   * - A new email address is surfaced by an OAuth, SAML or OIDC provider. In this case the new email address\n   * becomes the\n   *   Member's primary email address and the old primary email address is retired.\n   *\n   * A retired email address cannot be used by other Members in the same Organization. However, unlinking\n   * retired email\n   * addresses allows them to be subsequently re-used by other Organization Members. Retired email addresses\n   * can be viewed\n   * on the [Member object](https://stytch.com/docs/b2b/api/member-object).\n   *  %}\n   * @param data {@link B2BOrganizationsMembersUnlinkRetiredEmailRequest}\n   * @param options {@link B2BOrganizationsMembersUnlinkRetiredEmailRequestOptions}\n   * @returns {@link B2BOrganizationsMembersUnlinkRetiredEmailResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  unlinkRetiredEmail(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/organizations/${data.organization_id}/members/${data.member_id}/unlink_retired_email`,\n      headers,\n      data: {\n        email_id: data.email_id,\n        email_address: data.email_address\n      }\n    });\n  }\n\n  /**\n   * Creates a. An `organization_id` and `email_address` are required.\n   * @param data {@link B2BOrganizationsMembersCreateRequest}\n   * @param options {@link B2BOrganizationsMembersCreateRequestOptions}\n   * @returns {@link B2BOrganizationsMembersCreateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  create(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/organizations/${data.organization_id}/members`,\n      headers,\n      data: {\n        email_address: data.email_address,\n        name: data.name,\n        trusted_metadata: data.trusted_metadata,\n        untrusted_metadata: data.untrusted_metadata,\n        create_member_as_pending: data.create_member_as_pending,\n        is_breakglass: data.is_breakglass,\n        mfa_phone_number: data.mfa_phone_number,\n        mfa_enrolled: data.mfa_enrolled,\n        roles: data.roles,\n        external_id: data.external_id\n      }\n    });\n  }\n\n  /**\n   * Get a Member by `member_id` or `email_address`.\n   * @param params {@link B2BOrganizationsMembersGetRequest}\n   * @returns {@link B2BOrganizationsMembersGetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  get(params) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/b2b/organizations/${params.organization_id}/member`,\n      headers,\n      params: {\n        ...params\n      }\n    });\n  }\n}\nexports.Members = Members;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Organizations = void 0;\nvar _method_options = require(\"../shared/method_options\");\nvar _organizations_members = require(\"./organizations_members\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `organizations.create`.\n\n// Response type for `organizations.create`.\n\n// Request type for `organizations.delete`.\n\n// Response type for `organizations.delete`.\n\n// Request type for `organizations.get`.\n\n// Response type for `organizations.get`.\n\n// Request type for `organizations.search`.\n\n// Response type for `organizations.search`.\n\n// Request type for `organizations.update`.\n\n// Response type for `organizations.update`.\n\n// MANUAL(SearchQueryOperand)(TYPES)\n\n// ENDMANUAL(SearchQueryOperand)\n\nclass Organizations {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.members = new _organizations_members.Members(this.fetchConfig);\n  }\n\n  /**\n   * Creates an. An `organization_name` and a unique `organization_slug` are required.\n   *\n   * By default, `email_invites` and `sso_jit_provisioning` will be set to `ALL_ALLOWED`, and `mfa_policy`\n   * will be set to `OPTIONAL` if no Organization authentication settings are explicitly defined in the\n   * request.\n   *\n   * *See the [Organization authentication settings](https://stytch.com/docs/b2b/api/org-auth-settings)\n   * resource to learn more about fields like `email_jit_provisioning`, `email_invites`,\n   * `sso_jit_provisioning`, etc., and their behaviors.\n   * @param data {@link B2BOrganizationsCreateRequest}\n   * @returns {@link B2BOrganizationsCreateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  create(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/organizations`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Returns an specified by `organization_id`.\n   * @param params {@link B2BOrganizationsGetRequest}\n   * @returns {@link B2BOrganizationsGetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  get(params) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/b2b/organizations/${params.organization_id}`,\n      headers,\n      params: {}\n    });\n  }\n\n  /**\n   * Updates an specified by `organization_id`. An Organization must always have at least one auth setting\n   * set to either `RESTRICTED` or `ALL_ALLOWED` in order to provision new Members.\n   *\n   * *See the [Organization authentication settings](https://stytch.com/docs/b2b/api/org-auth-settings)\n   * resource to learn more about fields like `email_jit_provisioning`, `email_invites`,\n   * `sso_jit_provisioning`, etc., and their behaviors.\n   * @param data {@link B2BOrganizationsUpdateRequest}\n   * @param options {@link B2BOrganizationsUpdateRequestOptions}\n   * @returns {@link B2BOrganizationsUpdateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  update(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"PUT\",\n      url: `/v1/b2b/organizations/${data.organization_id}`,\n      headers,\n      data: {\n        organization_name: data.organization_name,\n        organization_slug: data.organization_slug,\n        organization_logo_url: data.organization_logo_url,\n        trusted_metadata: data.trusted_metadata,\n        sso_default_connection_id: data.sso_default_connection_id,\n        sso_jit_provisioning: data.sso_jit_provisioning,\n        sso_jit_provisioning_allowed_connections: data.sso_jit_provisioning_allowed_connections,\n        email_allowed_domains: data.email_allowed_domains,\n        email_jit_provisioning: data.email_jit_provisioning,\n        email_invites: data.email_invites,\n        auth_methods: data.auth_methods,\n        allowed_auth_methods: data.allowed_auth_methods,\n        mfa_policy: data.mfa_policy,\n        rbac_email_implicit_role_assignments: data.rbac_email_implicit_role_assignments,\n        mfa_methods: data.mfa_methods,\n        allowed_mfa_methods: data.allowed_mfa_methods,\n        oauth_tenant_jit_provisioning: data.oauth_tenant_jit_provisioning,\n        allowed_oauth_tenants: data.allowed_oauth_tenants,\n        claimed_email_domains: data.claimed_email_domains\n      }\n    });\n  }\n\n  /**\n   * Deletes an specified by `organization_id`. All Members of the Organization will also be deleted.\n   * @param data {@link B2BOrganizationsDeleteRequest}\n   * @param options {@link B2BOrganizationsDeleteRequestOptions}\n   * @returns {@link B2BOrganizationsDeleteResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  delete(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/b2b/organizations/${data.organization_id}`,\n      headers,\n      data: {}\n    });\n  }\n\n  /**\n   * Search for Organizations. If you send a request with no body params, no filtering will be applied and\n   * the endpoint will return all Organizations. All fuzzy search filters require a minimum of three\n   * characters.\n   * @param data {@link B2BOrganizationsSearchRequest}\n   * @returns {@link B2BOrganizationsSearchResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  search(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/organizations/search`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * @param params {@link B2BOrganizationsMetricsRequest}\n   * @returns {@link B2BOrganizationsMetricsResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  metrics(params) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/b2b/organizations/${params.organization_id}/metrics`,\n      headers,\n      params: {}\n    });\n  }\n}\nexports.Organizations = Organizations;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Discovery = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `otps.email.discovery.authenticate`.\n\n// Response type for `otps.email.discovery.authenticate`.\n\n// Request type for `otps.email.discovery.send`.\n\n// Response type for `otps.email.discovery.send`.\n\nclass Discovery {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Send a discovery OTP to an email address. The OTP is valid for 10 minutes. Only the most recently sent\n   * OTP is valid: when an OTP is sent, all OTPs previously sent to the same email address are invalidated,\n   * even if unused or unexpired.\n   * @param data {@link B2BOTPEmailDiscoverySendRequest}\n   * @returns {@link B2BOTPEmailDiscoverySendResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  send(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/otps/email/discovery/send`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Authenticates the OTP and returns an intermediate session token. Intermediate session tokens can be used\n   * for various Discovery login flows and are valid for 10 minutes.\n   * @param data {@link B2BOTPEmailDiscoveryAuthenticateRequest}\n   * @returns {@link B2BOTPEmailDiscoveryAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  authenticate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/otps/email/discovery/authenticate`,\n      headers,\n      data\n    });\n  }\n}\nexports.Discovery = Discovery;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Email = void 0;\nrequire(\"../shared/method_options\");\nvar _otp_email_discovery = require(\"./otp_email_discovery\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `otps.email.authenticate`.\n\n// Response type for `otps.email.authenticate`.\n\n// Request type for `otps.email.loginOrSignup`.\n\n// Response type for `otps.email.loginOrSignup`.\n\nclass Email {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.discovery = new _otp_email_discovery.Discovery(this.fetchConfig);\n  }\n\n  /**\n   * Send either a login or signup email OTP to a Member. A new, pending, or invited Member will receive a\n   * signup email OTP. Non-active members will have a pending status until they successfully authenticate. An\n   * active Member will receive a login email OTP.\n   *\n   * The OTP is valid for 10 minutes. Only the most recently sent OTP is valid: when an OTP is sent, all OTPs\n   * previously sent to the same email address are invalidated, even if unused or unexpired.\n   * @param data {@link B2BOTPEmailLoginOrSignupRequest}\n   * @returns {@link B2BOTPEmailLoginOrSignupResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  loginOrSignup(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/otps/email/login_or_signup`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Authenticate a with a one-time passcode (OTP). This endpoint requires an OTP that is not expired or\n   * previously used.\n   * OTPs have a default expiry of 10 minutes. If the Member\u2019s status is `pending` or `invited`, they will be\n   * updated to `active`.\n   * Provide the `session_duration_minutes` parameter to set the lifetime of the session. If the\n   * `session_duration_minutes` parameter is not specified, a Stytch session will be created with a 60 minute\n   * duration.\n   *\n   * If the Member is required to complete MFA to log in to the, the returned value of `member_authenticated`\n   * will be `false`, and an `intermediate_session_token` will be returned.\n   * The `intermediate_session_token` can be passed into the\n   * [OTP SMS Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-otp-sms),\n   * [TOTP Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-totp),\n   * or [Recovery Codes Recover endpoint](https://stytch.com/docs/b2b/api/recovery-codes-recover) to complete\n   * the MFA step and acquire a full member session.\n   * The `intermediate_session_token` can also be used with the\n   * [Exchange Intermediate Session endpoint](https://stytch.com/docs/b2b/api/exchange-intermediate-session)\n   * or the\n   * [Create Organization via Discovery endpoint](https://stytch.com/docs/b2b/api/create-organization-via-discovery) to join a different Organization or create a new one.\n   * The `session_duration_minutes` and `session_custom_claims` parameters will be ignored.\n   *\n   * If a valid `session_token` or `session_jwt` is passed in, the Member will not be required to complete an\n   * MFA step.\n   * @param data {@link B2BOTPEmailAuthenticateRequest}\n   * @returns {@link B2BOTPEmailAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  authenticate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/otps/email/authenticate`,\n      headers,\n      data\n    });\n  }\n}\nexports.Email = Email;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sms = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `otps.sms.authenticate`.\n\n// Response type for `otps.sms.authenticate`.\n\n// Request type for `otps.sms.send`.\n\n// Response type for `otps.sms.send`.\n\nclass Sms {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Send a One-Time Passcode (OTP) to a's phone number.\n   *\n   * If the Member already has a phone number, the `mfa_phone_number` field is not needed; the endpoint will\n   * send an OTP to the number associated with the Member.\n   * If the Member does not have a phone number, the endpoint will send an OTP to the `mfa_phone_number`\n   * provided and link the `mfa_phone_number` with the Member.\n   *\n   * An error will be thrown if the Member already has a phone number and the provided `mfa_phone_number`\n   * does not match the existing one.\n   *\n   * OTP codes expire after two minutes. Note that sending another OTP code before the first has expired will\n   * invalidate the first code.\n   *\n   * If a Member has a phone number and is enrolled in MFA, then after a successful primary authentication\n   * event (e.g. [email magic link](https://stytch.com/docs/b2b/api/authenticate-magic-link) or\n   * [SSO](https://stytch.com/docs/b2b/api/sso-authenticate) login is complete), an SMS OTP will\n   * automatically be sent to their phone number. In that case, this endpoint should only be used for\n   * subsequent authentication events, such as prompting a Member for an OTP again after a period of\n   * inactivity.\n   *\n   * Passing an intermediate session token, session token, or session JWT is not required, but if passed must\n   * match the Member ID passed.\n   *\n   * ### Cost to send SMS OTP\n   * Before configuring SMS or WhatsApp OTPs, please review how Stytch\n   * [bills the costs of international OTPs](https://stytch.com/pricing) and understand how to protect your\n   * app against [toll fraud](https://stytch.com/docs/guides/passcodes/toll-fraud/overview).\n   *\n   * Even when international SMS is enabled, we do not support sending SMS to countries on our\n   * [Unsupported countries list](https://stytch.com/docs/guides/passcodes/unsupported-countries).\n   *\n   * __Note:__ SMS to phone numbers outside of the US and Canada is disabled by default for customers who did\n   * not use SMS prior to October 2023. If you're interested in sending international SMS, please reach out\n   * to [support@stytch.com](mailto:support@stytch.com?subject=Enable%20international%20SMS).\n   * @param data {@link B2BOTPSmsSendRequest}\n   * @returns {@link B2BOTPSmsSendResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  send(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/otps/sms/send`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * SMS OTPs may not be used as a primary authentication mechanism. They can be used to complete an MFA\n   * requirement, or they can be used as a step-up factor to be added to an existing session.\n   *\n   * This endpoint verifies that the one-time passcode (OTP) is valid and hasn't expired or been previously\n   * used. OTP codes expire after two minutes.\n   *\n   * A given Member may only have a single active OTP code at any given time. If a Member requests another\n   * OTP code before the first one has expired, the first one will be invalidated.\n   *\n   * Exactly one of `intermediate_session_token`, `session_token`, or `session_jwt` must be provided in the\n   * request.\n   * If an intermediate session token is provided, this operation will consume it.\n   *\n   * Intermediate session tokens are generated upon successful calls to primary authenticate methods in the\n   * case where MFA is required,\n   * such as [email magic link authenticate](https://stytch.com/docs/b2b/api/authenticate-magic-link),\n   * or upon successful calls to discovery authenticate methods, such as\n   * [email magic link discovery authenticate](https://stytch.com/docs/b2b/api/authenticate-discovery-magic-link).\n   *\n   * If the's MFA policy is `REQUIRED_FOR_ALL`, a successful OTP authentication will change the's\n   * `mfa_enrolled` status to `true` if it is not already `true`.\n   * If the Organization's MFA policy is `OPTIONAL`, the Member's MFA enrollment can be toggled by passing in\n   * a value for the `set_mfa_enrollment` field.\n   * The Member's MFA enrollment can also be toggled through the\n   * [Update Member](https://stytch.com/docs/b2b/api/update-member) endpoint.\n   *\n   * Provide the `session_duration_minutes` parameter to set the lifetime of the session. If the\n   * `session_duration_minutes` parameter is not specified, a Stytch session will be created with a duration\n   * of 60 minutes.\n   * @param data {@link B2BOTPSmsAuthenticateRequest}\n   * @returns {@link B2BOTPSmsAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  authenticate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/otps/sms/authenticate`,\n      headers,\n      data\n    });\n  }\n}\nexports.Sms = Sms;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OTPs = void 0;\nrequire(\"../shared/method_options\");\nvar _otp_email = require(\"./otp_email\");\nvar _otp_sms = require(\"./otp_sms\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\nclass OTPs {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.sms = new _otp_sms.Sms(this.fetchConfig);\n    this.email = new _otp_email.Email(this.fetchConfig);\n  }\n}\nexports.OTPs = OTPs;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Email = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `passwords.discovery.email.reset`.\n\n// Response type for `passwords.discovery.email.reset`.\n\n// Request type for `passwords.discovery.email.resetStart`.\n\n// Response type for `passwords.discovery.email.resetStart`.\n\nclass Email {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Initiates a password reset for the email address provided, when cross-org passwords are enabled. This\n   * will trigger an email to be sent to the address, containing a magic link that will allow them to set a\n   * new password and authenticate.\n   *\n   * This endpoint adapts to your Project's password strength configuration.\n   * If you're using [zxcvbn](https://stytch.com/docs/guides/passwords/strength-policy), the default, your\n   * passwords are considered valid\n   * if the strength score is >= 3. If you're using\n   * [LUDS](https://stytch.com/docs/guides/passwords/strength-policy), your passwords are\n   * considered valid if they meet the requirements that you've set with Stytch.\n   * You may update your password strength configuration in the\n   * [stytch dashboard](https://stytch.com/dashboard/password-strength-config).\n   * @param data {@link B2BPasswordsDiscoveryEmailResetStartRequest}\n   * @returns {@link B2BPasswordsDiscoveryEmailResetStartResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  resetStart(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/passwords/discovery/email/reset/start`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Reset the password associated with an email and start an intermediate session. This endpoint checks that\n   * the password reset token is valid, hasn\u2019t expired, or already been used.\n   *\n   * The provided password needs to meet the project's password strength requirements, which can be checked\n   * in advance with the password strength endpoint. If the token and password are accepted, the password is\n   * securely stored for future authentication and the user is authenticated.\n   *\n   * Resetting a password will start an intermediate session and return a list of discovered organizations\n   * the session can be exchanged into.\n   * @param data {@link B2BPasswordsDiscoveryEmailResetRequest}\n   * @returns {@link B2BPasswordsDiscoveryEmailResetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  reset(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/passwords/discovery/email/reset`,\n      headers,\n      data\n    });\n  }\n}\nexports.Email = Email;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Discovery = void 0;\nrequire(\"../shared/method_options\");\nvar _passwords_discovery_email = require(\"./passwords_discovery_email\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `passwords.discovery.authenticate`.\n\n// Response type for `passwords.discovery.authenticate`.\n\nclass Discovery {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.email = new _passwords_discovery_email.Email(this.fetchConfig);\n  }\n\n  /**\n   * Authenticate an email/password combination in the discovery flow. This authenticate flow is only valid\n   * for cross-org passwords use cases, and is not tied to a specific organization.\n   *\n   * If you have breach detection during authentication enabled in your\n   * [password strength policy](https://stytch.com/docs/b2b/guides/passwords/strength-policies) and the\n   * member's credentials have appeared in the HaveIBeenPwned dataset, this endpoint will return a\n   * `member_reset_password` error even if the member enters a correct password. We force a password reset in\n   * this case to ensure that the member is the legitimate owner of the email address and not a malicious\n   * actor abusing the compromised credentials.\n   *\n   * If successful, this endpoint will create a new intermediate session and return a list of discovered\n   * organizations that can be session exchanged into.\n   * @param data {@link B2BPasswordsDiscoveryAuthenticateRequest}\n   * @returns {@link B2BPasswordsDiscoveryAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  authenticate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/passwords/discovery/authenticate`,\n      headers,\n      data\n    });\n  }\n}\nexports.Discovery = Discovery;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Email = void 0;\nvar _method_options = require(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `passwords.email.requireReset`.\n\n// Response type for `passwords.email.requireReset`.\n\n// Request type for `passwords.email.reset`.\n\n// Response type for `passwords.email.reset`.\n\n// Request type for `passwords.email.resetStart`.\n\n// Response type for `passwords.email.resetStart`.\n\nclass Email {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Initiates a password reset for the email address provided. This will trigger an email to be sent to the\n   * address, containing a magic link that will allow them to set a new password and authenticate.\n   *\n   * This endpoint adapts to your Project's password strength configuration.\n   * If you're using [zxcvbn](https://stytch.com/docs/guides/passwords/strength-policy), the default, your\n   * passwords are considered valid\n   * if the strength score is >= 3. If you're using\n   * [LUDS](https://stytch.com/docs/guides/passwords/strength-policy), your passwords are\n   * considered valid if they meet the requirements that you've set with Stytch.\n   * You may update your password strength configuration in the\n   * [stytch dashboard](https://stytch.com/dashboard/password-strength-config).\n   * @param data {@link B2BPasswordsEmailResetStartRequest}\n   * @returns {@link B2BPasswordsEmailResetStartResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  resetStart(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/passwords/email/reset/start`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Reset the's password and authenticate them. This endpoint checks that the password reset token is valid,\n   * hasn\u2019t expired, or already been used.\n   *\n   * The provided password needs to meet our password strength requirements, which can be checked in advance\n   * with the password strength endpoint. If the token and password are accepted, the password is securely\n   * stored for future authentication and the user is authenticated.\n   *\n   * If the Member is required to complete MFA to log in to the Organization, the returned value of\n   * `member_authenticated` will be `false`, and an `intermediate_session_token` will be returned.\n   * The `intermediate_session_token` can be passed into the\n   * [OTP SMS Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-otp-sms) to complete the\n   * MFA step and acquire a full member session.\n   * The `session_duration_minutes` and `session_custom_claims` parameters will be ignored.\n   *\n   * If a valid `session_token` or `session_jwt` is passed in, the Member will not be required to complete an\n   * MFA step.\n   *\n   * Note that a successful password reset by email will revoke all active sessions for the `member_id`.\n   * @param data {@link B2BPasswordsEmailResetRequest}\n   * @returns {@link B2BPasswordsEmailResetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  reset(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/passwords/email/reset`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Require a password be reset by the associated email address. This endpoint is only functional for\n   * cross-org password use cases.\n   * @param data {@link B2BPasswordsEmailRequireResetRequest}\n   * @param options {@link B2BPasswordsEmailRequireResetRequestOptions}\n   * @returns {@link B2BPasswordsEmailRequireResetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  requireReset(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/passwords/email/require_reset`,\n      headers,\n      data\n    });\n  }\n}\nexports.Email = Email;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExistingPassword = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `passwords.existingPassword.reset`.\n\n// Response type for `passwords.existingPassword.reset`.\n\nclass ExistingPassword {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Reset the\u2019s password using their existing password.\n   *\n   * This endpoint adapts to your Project's password strength configuration.\n   * If you're using [zxcvbn](https://stytch.com/docs/guides/passwords/strength-policy), the default, your\n   * passwords are considered valid\n   * if the strength score is >= 3. If you're using\n   * [LUDS](https://stytch.com/docs/guides/passwords/strength-policy), your passwords are\n   * considered valid if they meet the requirements that you've set with Stytch.\n   * You may update your password strength configuration in the\n   * [stytch dashboard](https://stytch.com/dashboard/password-strength-config).\n   *\n   * If the Member is required to complete MFA to log in to the Organization, the returned value of\n   * `member_authenticated` will be `false`, and an `intermediate_session_token` will be returned.\n   * The `intermediate_session_token` can be passed into the\n   * [OTP SMS Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-otp-sms) to complete the\n   * MFA step and acquire a full member session.\n   * The `session_duration_minutes` and `session_custom_claims` parameters will be ignored.\n   *\n   * If a valid `session_token` or `session_jwt` is passed in, the Member will not be required to complete an\n   * MFA step.\n   *\n   * Note that a successful password reset via an existing password will revoke all active sessions for the\n   * `member_id`.\n   * @param data {@link B2BPasswordsExistingPasswordResetRequest}\n   * @returns {@link B2BPasswordsExistingPasswordResetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  reset(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/passwords/existing_password/reset`,\n      headers,\n      data\n    });\n  }\n}\nexports.ExistingPassword = ExistingPassword;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sessions = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `passwords.sessions.reset`.\n\n// Response type for `passwords.sessions.reset`.\n\nclass Sessions {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Reset the's password using their existing session. The endpoint will error if the session does not\n   * contain an authentication factor that has been issued within the last 5 minutes. Either `session_token`\n   * or `session_jwt` should be provided.\n   *\n   * Note that a successful password reset via an existing session will revoke all active sessions for the\n   * `member_id`, except for the one used during the reset flow.\n   * @param data {@link B2BPasswordsSessionResetRequest}\n   * @returns {@link B2BPasswordsSessionResetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  reset(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/passwords/session/reset`,\n      headers,\n      data\n    });\n  }\n}\nexports.Sessions = Sessions;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Passwords = void 0;\nrequire(\"../shared/method_options\");\nvar _passwords_discovery = require(\"./passwords_discovery\");\nvar _passwords_email = require(\"./passwords_email\");\nvar _passwords_existing_password = require(\"./passwords_existing_password\");\nvar _shared = require(\"../shared\");\nvar _passwords_session = require(\"./passwords_session\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `passwords.authenticate`.\n\n// Response type for `passwords.authenticate`.\n\n// Request type for `passwords.migrate`.\n\n// Response type for `passwords.migrate`.\n\n// Request type for `passwords.strengthCheck`.\n\n// Response type for `passwords.strengthCheck`.\n\nclass Passwords {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.email = new _passwords_email.Email(this.fetchConfig);\n    this.sessions = new _passwords_session.Sessions(this.fetchConfig);\n    this.existingPassword = new _passwords_existing_password.ExistingPassword(this.fetchConfig);\n    this.discovery = new _passwords_discovery.Discovery(this.fetchConfig);\n  }\n\n  /**\n   * This API allows you to check whether the user\u2019s provided password is valid, and to provide feedback to\n   * the user on how to increase the strength of their password.\n   *\n   * This endpoint adapts to your Project's password strength configuration. If you're using\n   * [zxcvbn](https://stytch.com/docs/guides/passwords/strength-policy), the default, your passwords are\n   * considered valid if the strength score is >= 3. If you're using\n   * [LUDS](https://stytch.com/docs/guides/passwords/strength-policy), your passwords are considered valid if\n   * they meet the requirements that you've set with Stytch. You may update your password strength\n   * configuration in the [stytch dashboard](https://stytch.com/dashboard/password-strength-config).\n   *\n   * ## Password feedback\n   * The zxcvbn_feedback and luds_feedback objects contains relevant fields for you to relay feedback to\n   * users that failed to create a strong enough password.\n   *\n   * If you're using [zxcvbn](https://stytch.com/docs/guides/passwords/strength-policy), the feedback object\n   * will contain warning and suggestions for any password that does not meet the\n   * [zxcvbn](https://stytch.com/docs/guides/passwords/strength-policy) strength requirements. You can return\n   * these strings directly to the user to help them craft a strong password.\n   *\n   * If you're using [LUDS](https://stytch.com/docs/guides/passwords/strength-policy), the feedback object\n   * will contain a collection of fields that the user failed or passed. You'll want to prompt the user to\n   * create a password that meets all requirements that they failed.\n   * @param data {@link B2BPasswordsStrengthCheckRequest}\n   * @returns {@link B2BPasswordsStrengthCheckResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  strengthCheck(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/passwords/strength_check`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Adds an existing password to a member's email that doesn't have a password yet. We support migrating\n   * members from passwords stored with bcrypt, scrypt, argon2, MD-5, SHA-1, and PBKDF2. This endpoint has a\n   * rate limit of 100 requests per second.\n   *\n   * The member's email will be marked as verified when you use this endpoint. If you are using\n   * **cross-organization passwords**, call this method separately for each `organization_id` associated with\n   * the given `email_address` to ensure the email is verified across all of their organizations.\n   * @param data {@link B2BPasswordsMigrateRequest}\n   * @returns {@link B2BPasswordsMigrateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  migrate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/passwords/migrate`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Authenticate a member with their email address and password. This endpoint verifies that the member has\n   * a password currently set, and that the entered password is correct.\n   *\n   * If you have breach detection during authentication enabled in your\n   * [password strength policy](https://stytch.com/docs/b2b/guides/passwords/strength-policies) and the\n   * member's credentials have appeared in the HaveIBeenPwned dataset, this endpoint will return a\n   * `member_reset_password` error even if the member enters a correct password. We force a password reset in\n   * this case to ensure that the member is the legitimate owner of the email address and not a malicious\n   * actor abusing the compromised credentials.\n   *\n   * If the is required to complete MFA to log in to the, the returned value of `member_authenticated` will\n   * be `false`, and an `intermediate_session_token` will be returned.\n   * The `intermediate_session_token` can be passed into the\n   * [OTP SMS Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-otp-sms) to complete the\n   * MFA step and acquire a full member session.\n   * The `session_duration_minutes` and `session_custom_claims` parameters will be ignored.\n   *\n   * If a valid `session_token` or `session_jwt` is passed in, the Member will not be required to complete an\n   * MFA step.\n   * @param data {@link B2BPasswordsAuthenticateRequest}\n   * @returns {@link B2BPasswordsAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  authenticate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/passwords/authenticate`,\n      headers,\n      data\n    });\n  }\n}\nexports.Passwords = Passwords;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PolicyCache = void 0;\nexports.performAuthorizationCheck = performAuthorizationCheck;\nexports.performScopeAuthorizationCheck = performScopeAuthorizationCheck;\nvar _errors = require(\"../shared/errors\");\n// We want to refresh if the policy is more than 5 minutes old\nconst MAX_AGE_MS = 1000 * 60 * 5;\n\n// PolicyCache handles local caching of RBAC policy information\n// It is based on https://github.com/panva/jose/blob/main/src/jwks/remote.ts\n// Instead of using a background worker/setInterval strategy, it refreshes on usage\n// and tracks the timestamp internally. this has a few _very nice_ properties:\n// - It works very well in Jest environments, since there's no boilerplate required to tear down the setInterval\n// - No work is done if RBAC is not used and the policy is not required\nclass PolicyCache {\n  constructor(rbac) {\n    this.rbac = rbac;\n  }\n  fresh() {\n    return !!this._timestamp && Date.now() < this._timestamp + MAX_AGE_MS;\n  }\n  async reload() {\n    const policyResponse = await this.rbac.policy();\n    this._policy = policyResponse.policy;\n    this._timestamp = Date.now();\n  }\n  async getPolicy() {\n    if (!this._policy || !this.fresh()) {\n      await this.reload();\n    }\n    return this._policy;\n  }\n}\nexports.PolicyCache = PolicyCache;\nfunction performAuthorizationCheck({\n  policy,\n  subjectRoles,\n  subjectOrgID,\n  authorizationCheck\n}) {\n  if (subjectOrgID !== authorizationCheck.organization_id) {\n    throw new _errors.ClientError(\"tenancy_mismatch\", \"Member belongs to different organization\");\n  }\n  const hasPermission = policy.roles.filter(role => subjectRoles.includes(role.role_id)).flatMap(role => role.permissions).some(permission => {\n    const hasMatchingAction = permission.actions.includes(authorizationCheck.action) || permission.actions.includes(\"*\");\n    const hasMatchingResource = authorizationCheck.resource_id === permission.resource_id;\n    return hasMatchingAction && hasMatchingResource;\n  });\n  if (!hasPermission) {\n    throw new _errors.ClientError(\"invalid_permissions\", \"Member does not have permission to perform the requested action\");\n  }\n}\nfunction performScopeAuthorizationCheck({\n  policy,\n  tokenScopes,\n  subjectOrgID,\n  authorizationCheck\n}) {\n  if (subjectOrgID !== authorizationCheck.organization_id) {\n    throw new _errors.ClientError(\"tenancy_mismatch\", \"Member belongs to different organization\");\n  }\n  const hasPermission = policy.scopes.filter(scope => tokenScopes.includes(scope.scope)).flatMap(scope => scope.permissions).some(permission => {\n    const hasMatchingAction = permission.actions.includes(authorizationCheck.action) || permission.actions.includes(\"*\");\n    const hasMatchingResource = authorizationCheck.resource_id === permission.resource_id;\n    return hasMatchingAction && hasMatchingResource;\n  });\n  if (!hasPermission) {\n    throw new _errors.ClientError(\"invalid_permissions\", \"Member does not have permission to perform the requested action\");\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RBAC = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Response type for `rbac.policy`.\n\nclass RBAC {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Get the active RBAC Policy for your current Stytch Project. An RBAC Policy is the canonical document\n   * that stores all defined Resources and Roles within your RBAC permissioning model.\n   *\n   * When using the backend SDKs, the RBAC Policy will be cached to allow for local evaluations, eliminating\n   * the need for an extra request to Stytch. The policy will be refreshed if an authorization check is\n   * requested and the RBAC policy was last updated more than 5 minutes ago.\n   *\n   * Resources and Roles can be created and managed within the\n   * [Dashboard](https://stytch.com/docs/dashboard/rbac). Additionally,\n   * [Role assignment](https://stytch.com/docs/b2b/guides/rbac/role-assignment) can be programmatically\n   * managed through certain Stytch API endpoints.\n   *\n   * Check out the [RBAC overview](https://stytch.com/docs/b2b/guides/rbac/overview) to learn more about\n   * Stytch's RBAC permissioning model.\n   * @param params {@link B2BRBACPolicyRequest}\n   * @returns {@link B2BRBACPolicyResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  policy() {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/b2b/rbac/policy`,\n      headers\n    });\n  }\n}\nexports.RBAC = RBAC;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RecoveryCodes = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `recoveryCodes.get`.\n\n// Response type for `recoveryCodes.get`.\n\n// Request type for `recoveryCodes.recover`.\n\n// Response type for `recoveryCodes.recover`.\n\n// Request type for `recoveryCodes.rotate`.\n\n// Response type for `recoveryCodes.rotate`.\n\nclass RecoveryCodes {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Allows a to complete an MFA flow by consuming a recovery code. This consumes the recovery code and\n   * returns a session token that can be used to authenticate the Member.\n   * @param data {@link B2BRecoveryCodesRecoverRequest}\n   * @returns {@link B2BRecoveryCodesRecoverResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  recover(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/recovery_codes/recover`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Returns a's full set of active recovery codes.\n   * @param params {@link B2BRecoveryCodesGetRequest}\n   * @returns {@link B2BRecoveryCodesGetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  get(params) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/b2b/recovery_codes/${params.organization_id}/${params.member_id}`,\n      headers,\n      params: {}\n    });\n  }\n\n  /**\n   * Rotate a's recovery codes. This invalidates all existing recovery codes and generates a new set of\n   * recovery codes.\n   * @param data {@link B2BRecoveryCodesRotateRequest}\n   * @returns {@link B2BRecoveryCodesRotateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  rotate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/recovery_codes/rotate`,\n      headers,\n      data\n    });\n  }\n}\nexports.RecoveryCodes = RecoveryCodes;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Connection = void 0;\nvar _method_options = require(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `scim.connection.create`.\n\n// Response type for `scim.connection.create`.\n\n// Request type for `scim.connection.delete`.\n\n// Response type for `scim.connection.delete`.\n\n// Request type for `scim.connection.getGroups`.\n\n// Response type for `scim.connection.getGroups`.\n\n// Request type for `scim.connection.get`.\n\n// Response type for `scim.connection.get`.\n\n// Request type for `scim.connection.rotateCancel`.\n\n// Response type for `scim.connection.rotateCancel`.\n\n// Request type for `scim.connection.rotateComplete`.\n\n// Response type for `scim.connection.rotateComplete`.\n\n// Request type for `scim.connection.rotateStart`.\n\n// Response type for `scim.connection.rotateStart`.\n\n// Request type for `scim.connection.update`.\n\n// Response type for `scim.connection.update`.\n\nclass Connection {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Update a SCIM Connection.\n   * @param data {@link B2BSCIMConnectionUpdateRequest}\n   * @param options {@link B2BSCIMConnectionUpdateRequestOptions}\n   * @returns {@link B2BSCIMConnectionUpdateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  update(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"PUT\",\n      url: `/v1/b2b/scim/${data.organization_id}/connection/${data.connection_id}`,\n      headers,\n      data: {\n        display_name: data.display_name,\n        identity_provider: data.identity_provider,\n        scim_group_implicit_role_assignments: data.scim_group_implicit_role_assignments\n      }\n    });\n  }\n\n  /**\n   * Deletes a SCIM Connection.\n   * @param data {@link B2BSCIMConnectionDeleteRequest}\n   * @param options {@link B2BSCIMConnectionDeleteRequestOptions}\n   * @returns {@link B2BSCIMConnectionDeleteResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  delete(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/b2b/scim/${data.organization_id}/connection/${data.connection_id}`,\n      headers,\n      data: {}\n    });\n  }\n\n  /**\n   * Start a SCIM token rotation.\n   * @param data {@link B2BSCIMConnectionRotateStartRequest}\n   * @param options {@link B2BSCIMConnectionRotateStartRequestOptions}\n   * @returns {@link B2BSCIMConnectionRotateStartResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  rotateStart(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/scim/${data.organization_id}/connection/${data.connection_id}/rotate/start`,\n      headers,\n      data: {}\n    });\n  }\n\n  /**\n   * Completes a SCIM token rotation. This will complete the current token rotation process and update the\n   * active token to be the new token supplied in the\n   * [start SCIM token rotation](https://stytch.com/docs/b2b/api/scim-rotate-token-start) response.\n   * @param data {@link B2BSCIMConnectionRotateCompleteRequest}\n   * @param options {@link B2BSCIMConnectionRotateCompleteRequestOptions}\n   * @returns {@link B2BSCIMConnectionRotateCompleteResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  rotateComplete(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/scim/${data.organization_id}/connection/${data.connection_id}/rotate/complete`,\n      headers,\n      data: {}\n    });\n  }\n\n  /**\n   * Cancel a SCIM token rotation. This will cancel the current token rotation process, keeping the original\n   * token active.\n   * @param data {@link B2BSCIMConnectionRotateCancelRequest}\n   * @param options {@link B2BSCIMConnectionRotateCancelRequestOptions}\n   * @returns {@link B2BSCIMConnectionRotateCancelResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  rotateCancel(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/scim/${data.organization_id}/connection/${data.connection_id}/rotate/cancel`,\n      headers,\n      data: {}\n    });\n  }\n\n  /**\n   * Gets a paginated list of all SCIM Groups associated with a given Connection.\n   * @param params {@link B2BSCIMConnectionGetGroupsRequest}\n   * @param options {@link B2BSCIMConnectionGetGroupsRequestOptions}\n   * @returns {@link B2BSCIMConnectionGetGroupsResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  getGroups(params, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/b2b/scim/${params.organization_id}/connection/${params.connection_id}`,\n      headers,\n      params: {\n        cursor: params.cursor,\n        limit: params.limit\n      }\n    });\n  }\n\n  /**\n   * Create a new SCIM Connection.\n   * @param data {@link B2BSCIMConnectionCreateRequest}\n   * @param options {@link B2BSCIMConnectionCreateRequestOptions}\n   * @returns {@link B2BSCIMConnectionCreateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  create(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/scim/${data.organization_id}/connection`,\n      headers,\n      data: {\n        display_name: data.display_name,\n        identity_provider: data.identity_provider\n      }\n    });\n  }\n\n  /**\n   * Get SCIM Connection.\n   * @param params {@link B2BSCIMConnectionGetRequest}\n   * @param options {@link B2BSCIMConnectionGetRequestOptions}\n   * @returns {@link B2BSCIMConnectionGetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  get(params, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/b2b/scim/${params.organization_id}/connection`,\n      headers,\n      params: {}\n    });\n  }\n}\nexports.Connection = Connection;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SCIM = void 0;\nrequire(\"../shared/method_options\");\nvar _scim_connection = require(\"./scim_connection\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\nclass SCIM {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.connection = new _scim_connection.Connection(this.fetchConfig);\n  }\n}\nexports.SCIM = SCIM;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sessions = void 0;\nvar _method_options = require(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\nvar _sessions = require(\"../shared/sessions\");\nvar _rbac_local = require(\"./rbac_local\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `sessions.authenticate`.\n\n// Response type for `sessions.authenticate`.\n\n// Request type for `sessions.exchangeAccessToken`.\n\n// Response type for `sessions.exchangeAccessToken`.\n\n// Request type for `sessions.exchange`.\n\n// Response type for `sessions.exchange`.\n\n// Request type for `sessions.getJWKS`.\n\n// Response type for `sessions.getJWKS`.\n\n// Request type for `sessions.get`.\n\n// Response type for `sessions.get`.\n\n// Request type for `sessions.migrate`.\n\n// Response type for `sessions.migrate`.\n\n// Request type for `sessions.revoke`.\n\n// Response type for `sessions.revoke`.\n\n// MANUAL(authenticateJwt)(TYPES)\n\n// Request type for `sessions.authenticateJwt`\n\n// Request type for `sessions.authenticateJwtLocal`\n\n// ENDMANUAL(authenticateJwt)\n\nclass Sessions {\n  constructor(fetchConfig, jwtConfig, policyCache) {\n    this.fetchConfig = fetchConfig;\n    this.jwksClient = jwtConfig.jwks;\n    this.jwtOptions = {\n      audience: jwtConfig.projectID,\n      issuer: jwtConfig.issuers,\n      typ: \"JWT\"\n    };\n    this.policyCache = policyCache;\n  }\n\n  /**\n   * Retrieves all active Sessions for a Member.\n   * @param params {@link B2BSessionsGetRequest}\n   * @returns {@link B2BSessionsGetResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  get(params) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/b2b/sessions`,\n      headers,\n      params: {\n        ...params\n      }\n    });\n  }\n\n  /**\n   * Authenticates a Session and updates its lifetime by the specified `session_duration_minutes`. If the\n   * `session_duration_minutes` is not specified, a Session will not be extended. This endpoint requires\n   * either a `session_jwt` or `session_token` be included in the request. It will return an error if both\n   * are present.\n   *\n   * You may provide a JWT that needs to be refreshed and is expired according to its `exp` claim. A new JWT\n   * will be returned if both the signature and the underlying Session are still valid. See our\n   * [How to use Stytch Session JWTs](https://stytch.com/docs/b2b/guides/sessions/resources/using-jwts) guide\n   * for more information.\n   *\n   * If an `authorization_check` object is passed in, this method will also check if the Member is authorized\n   * to perform the given action on the given Resource in the specified. A is authorized if their Member\n   * Session contains a Role, assigned\n   * [explicitly or implicitly](https://stytch.com/docs/b2b/guides/rbac/role-assignment), with adequate\n   * permissions.\n   * In addition, the `organization_id` passed in the authorization check must match the Member's\n   * Organization.\n   *\n   * If the Member is not authorized to perform the specified action on the specified Resource, or if the\n   * `organization_id` does not match the Member's Organization, a 403 error will be thrown.\n   * Otherwise, the response will contain a list of Roles that satisfied the authorization check.\n   * @param data {@link B2BSessionsAuthenticateRequest}\n   * @returns {@link B2BSessionsAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  authenticate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/sessions/authenticate`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Revoke a Session and immediately invalidate all its tokens. To revoke a specific Session, pass either\n   * the `member_session_id`, `session_token`, or `session_jwt`. To revoke all Sessions for a Member, pass\n   * the `member_id`.\n   * @param data {@link B2BSessionsRevokeRequest}\n   * @param options {@link B2BSessionsRevokeRequestOptions}\n   * @returns {@link B2BSessionsRevokeResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  revoke(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/sessions/revoke`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Use this endpoint to exchange a's existing session for another session in a different. This can be used\n   * to accept an invite, but not to create a new member via domain matching.\n   *\n   * To create a new member via domain matching, use the\n   * [Exchange Intermediate Session](https://stytch.com/docs/b2b/api/exchange-intermediate-session) flow\n   * instead.\n   *\n   * Only Email Magic Link, OAuth, and SMS OTP factors can be transferred between sessions. Other\n   * authentication factors, such as password factors, will not be transferred to the new session.\n   * Any OAuth Tokens owned by the Member will not be transferred to the new Organization.\n   * SMS OTP factors can be used to fulfill MFA requirements for the target Organization if both the original\n   * and target Member have the same phone number and the phone number is verified for both Members.\n   * HubSpot and Slack OAuth registrations will not be transferred between sessions. Instead, you will\n   * receive a corresponding factor with type `\"oauth_exchange_slack\"` or `\"oauth_exchange_hubspot\"`\n   *\n   * If the Member is required to complete MFA to log in to the Organization, the returned value of\n   * `member_authenticated` will be `false`, and an `intermediate_session_token` will be returned.\n   * The `intermediate_session_token` can be passed into the\n   * [OTP SMS Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-otp-sms) to complete the\n   * MFA step and acquire a full member session.\n   * The `intermediate_session_token` can also be used with the\n   * [Exchange Intermediate Session endpoint](https://stytch.com/docs/b2b/api/exchange-intermediate-session)\n   * or the\n   * [Create Organization via Discovery endpoint](https://stytch.com/docs/b2b/api/create-organization-via-discovery) to join a different Organization or create a new one.\n   * The `session_duration_minutes` and `session_custom_claims` parameters will be ignored.\n   * @param data {@link B2BSessionsExchangeRequest}\n   * @returns {@link B2BSessionsExchangeResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  exchange(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/sessions/exchange`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Use this endpoint to exchange a Connected Apps Access Token back into a Member Session for the\n   * underlying Member.\n   * This session can be used with the Stytch SDKs and APIs.\n   *\n   * The Access Token must contain the `full_access` scope and must not be more than 5 minutes old. Access\n   * Tokens may only be exchanged a single time.\n   *\n   * Because the Member previously completed MFA and satisfied all Organization authentication requirements\n   * at the time of the original Access Token issuance, this endpoint will never return an\n   * `intermediate_session_token` or require MFA.\n   * @param data {@link B2BSessionsExchangeAccessTokenRequest}\n   * @returns {@link B2BSessionsExchangeAccessTokenResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  exchangeAccessToken(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/sessions/exchange_access_token`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Migrate a session from an external OIDC compliant endpoint. Stytch will call the external UserInfo\n   * endpoint defined in your Stytch Project settings in the [Dashboard](https://stytch.com/docs/dashboard),\n   * and then perform a lookup using the `session_token`. If the response contains a valid email address,\n   * Stytch will attempt to match that email address with an existing in your and create a Stytch Session.\n   * You will need to create the member before using this endpoint.\n   * @param data {@link B2BSessionsMigrateRequest}\n   * @returns {@link B2BSessionsMigrateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  migrate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/sessions/migrate`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Get the JSON Web Key Set (JWKS) for a project.\n   *\n   * JWKS are rotated every ~6 months. Upon rotation, new JWTs will be signed using the new key, and both\n   * keys will be returned by this endpoint for a period of 1 month.\n   *\n   * JWTs have a set lifetime of 5 minutes, so there will be a 5 minute period where some JWTs will be signed\n   * by the old JWKS, and some JWTs will be signed by the new JWKS. The correct JWKS to use for validation is\n   * determined by matching the `kid` value of the JWT and JWKS.\n   *\n   * If you're using one of our [backend SDKs](https://stytch.com/docs/b2b/sdks), the JWKS rotation will be\n   * handled for you.\n   *\n   * If you're using your own JWT validation library, many have built-in support for JWKS rotation, and\n   * you'll just need to supply this API endpoint. If not, your application should decide which JWKS to use\n   * for validation by inspecting the `kid` value.\n   *\n   * See our\n   * [How to use Stytch Session JWTs](https://stytch.com/docs/b2b/guides/sessions/resources/using-jwts) guide\n   * for more information.\n   * @param params {@link B2BSessionsGetJWKSRequest}\n   * @returns {@link B2BSessionsGetJWKSResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  getJWKS(params) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/b2b/sessions/jwks/${params.project_id}`,\n      headers,\n      params: {}\n    });\n  }\n\n  // MANUAL(authenticateJwt)(SERVICE_METHOD)\n  // ADDIMPORT: import { JwtConfig, authenticateSessionJwtLocal } from \"../shared/sessions\";\n  // ADDIMPORT: import { performAuthorizationCheck } from \"./rbac_local\";\n  /** Parse a JWT and verify the signature, preferring local verification over remote.\n   *\n   * If max_token_age_seconds is set, remote verification will be forced if the JWT was issued at\n   * (based on the \"iat\" claim) more than that many seconds ago.\n   *\n   * To force remote validation for all tokens, set max_token_age_seconds to zero or use the\n   * authenticate method instead.\n   */\n  async authenticateJwt(params) {\n    try {\n      const member_session = await this.authenticateJwtLocal(params);\n      return {\n        member_session,\n        session_jwt: params.session_jwt\n      };\n    } catch (err) {\n      // JWT could not be verified locally. Check with the Stytch API.\n      return this.authenticate({\n        session_jwt: params.session_jwt,\n        authorization_check: params.authorization_check\n      });\n    }\n  }\n\n  /** Parse a JWT and verify the signature locally (without calling /authenticate in the API).\n   *\n   * If maxTokenAge is set, this will return an error if the JWT was issued (based on the \"iat\"\n   * claim) more than maxTokenAge seconds ago.\n   *\n   * If max_token_age_seconds is explicitly set to zero, all tokens will be considered too old,\n   * even if they are otherwise valid.\n   *\n   * The value for current_date is used to compare timestamp claims (\"exp\", \"nbf\", \"iat\"). It\n   * defaults to the current date (new Date()).\n   *\n   * The value for clock_tolerance_seconds is the maximum allowable difference when comparing\n   * timestamps. It defaults to zero.\n   */\n  async authenticateJwtLocal(params) {\n    const sess = await (0, _sessions.authenticateSessionJwtLocal)(this.jwksClient, this.jwtOptions, params.session_jwt, {\n      clock_tolerance_seconds: params.clock_tolerance_seconds,\n      max_token_age_seconds: params.max_token_age_seconds,\n      current_date: params.current_date\n    });\n    const organizationClaim = \"https://stytch.com/organization\";\n    const {\n      [organizationClaim]: orgClaimUntyped,\n      ...claims\n    } = sess.custom_claims;\n    const orgClaim = orgClaimUntyped;\n    if (params.authorization_check) {\n      const policy = await this.policyCache.getPolicy();\n      await (0, _rbac_local.performAuthorizationCheck)({\n        policy,\n        subjectRoles: sess.roles,\n        subjectOrgID: orgClaim.organization_id,\n        authorizationCheck: params.authorization_check\n      });\n    }\n    return {\n      member_session_id: sess.session_id,\n      member_id: sess.sub,\n      organization_id: orgClaim.organization_id,\n      authentication_factors: sess.authentication_factors,\n      started_at: sess.started_at,\n      last_accessed_at: sess.last_accessed_at,\n      expires_at: sess.expires_at,\n      custom_claims: claims,\n      roles: sess.roles\n    };\n  }\n\n  // ENDMANUAL(authenticateJwt)\n}\nexports.Sessions = Sessions;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.External = void 0;\nvar _method_options = require(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `sso.external.createConnection`.\n\n// Response type for `sso.external.createConnection`.\n\n// Request type for `sso.external.updateConnection`.\n\n// Response type for `sso.external.updateConnection`.\n\nclass External {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Create a new External SSO Connection.\n   * @param data {@link B2BSSOExternalCreateConnectionRequest}\n   * @param options {@link B2BSSOExternalCreateConnectionRequestOptions}\n   * @returns {@link B2BSSOExternalCreateConnectionResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  createConnection(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/sso/external/${data.organization_id}`,\n      headers,\n      data: {\n        external_organization_id: data.external_organization_id,\n        external_connection_id: data.external_connection_id,\n        display_name: data.display_name,\n        connection_implicit_role_assignments: data.connection_implicit_role_assignments,\n        group_implicit_role_assignments: data.group_implicit_role_assignments\n      }\n    });\n  }\n\n  /**\n   * Updates an existing External SSO connection.\n   * @param data {@link B2BSSOExternalUpdateConnectionRequest}\n   * @param options {@link B2BSSOExternalUpdateConnectionRequestOptions}\n   * @returns {@link B2BSSOExternalUpdateConnectionResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  updateConnection(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"PUT\",\n      url: `/v1/b2b/sso/external/${data.organization_id}/connections/${data.connection_id}`,\n      headers,\n      data: {\n        display_name: data.display_name,\n        external_connection_implicit_role_assignments: data.external_connection_implicit_role_assignments,\n        external_group_implicit_role_assignments: data.external_group_implicit_role_assignments\n      }\n    });\n  }\n}\nexports.External = External;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OIDC = void 0;\nvar _method_options = require(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `sso.oidc.createConnection`.\n\n// Response type for `sso.oidc.createConnection`.\n\n// Request type for `sso.oidc.updateConnection`.\n\n// Response type for `sso.oidc.updateConnection`.\n\nclass OIDC {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Create a new OIDC Connection.\n   * @param data {@link B2BSSOOIDCCreateConnectionRequest}\n   * @param options {@link B2BSSOOIDCCreateConnectionRequestOptions}\n   * @returns {@link B2BSSOOIDCCreateConnectionResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  createConnection(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/sso/oidc/${data.organization_id}`,\n      headers,\n      data: {\n        display_name: data.display_name,\n        identity_provider: data.identity_provider\n      }\n    });\n  }\n\n  /**\n   * Updates an existing OIDC connection.\n   *\n   * When the value of `issuer` changes, Stytch will attempt to retrieve the\n   * [OpenID Provider Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata)\n   * document found at `$/.well-known/openid-configuration`.\n   * If the metadata document can be retrieved successfully, Stytch will use it to infer the values of\n   * `authorization_url`, `token_url`, `jwks_url`, and `userinfo_url`.\n   * The `client_id` and `client_secret` values cannot be inferred from the metadata document, and *must* be\n   * passed in explicitly.\n   *\n   * If the metadata document cannot be retrieved, Stytch will still update the connection using values from\n   * the request body.\n   *\n   * If the metadata document can be retrieved, and values are passed in the request body, the explicit\n   * values passed in from the request body will take precedence over the values inferred from the metadata\n   * document.\n   *\n   * Note that a newly created connection will not become active until all of the following fields are\n   * provided:\n   * * `issuer`\n   * * `client_id`\n   * * `client_secret`\n   * * `authorization_url`\n   * * `token_url`\n   * * `userinfo_url`\n   * * `jwks_url`\n   * @param data {@link B2BSSOOIDCUpdateConnectionRequest}\n   * @param options {@link B2BSSOOIDCUpdateConnectionRequestOptions}\n   * @returns {@link B2BSSOOIDCUpdateConnectionResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  updateConnection(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"PUT\",\n      url: `/v1/b2b/sso/oidc/${data.organization_id}/connections/${data.connection_id}`,\n      headers,\n      data: {\n        display_name: data.display_name,\n        client_id: data.client_id,\n        client_secret: data.client_secret,\n        issuer: data.issuer,\n        authorization_url: data.authorization_url,\n        token_url: data.token_url,\n        userinfo_url: data.userinfo_url,\n        jwks_url: data.jwks_url,\n        identity_provider: data.identity_provider,\n        custom_scopes: data.custom_scopes,\n        attribute_mapping: data.attribute_mapping\n      }\n    });\n  }\n}\nexports.OIDC = OIDC;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SAML = void 0;\nvar _method_options = require(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `sso.saml.createConnection`.\n\n// Response type for `sso.saml.createConnection`.\n\n// Request type for `sso.saml.deleteVerificationCertificate`.\n\n// Response type for `sso.saml.deleteVerificationCertificate`.\n\n// Request type for `sso.saml.updateByURL`.\n\n// Response type for `sso.saml.updateByURL`.\n\n// Request type for `sso.saml.updateConnection`.\n\n// Response type for `sso.saml.updateConnection`.\n\nclass SAML {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Create a new SAML Connection.\n   * @param data {@link B2BSSOSAMLCreateConnectionRequest}\n   * @param options {@link B2BSSOSAMLCreateConnectionRequestOptions}\n   * @returns {@link B2BSSOSAMLCreateConnectionResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  createConnection(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/sso/saml/${data.organization_id}`,\n      headers,\n      data: {\n        display_name: data.display_name,\n        identity_provider: data.identity_provider\n      }\n    });\n  }\n\n  /**\n   * Updates an existing SAML connection.\n   *\n   * Note that a newly created connection will not become active until all of the following are provided:\n   * * `idp_sso_url`\n   * * `attribute_mapping`\n   * * `idp_entity_id`\n   * * `x509_certificate`\n   * @param data {@link B2BSSOSAMLUpdateConnectionRequest}\n   * @param options {@link B2BSSOSAMLUpdateConnectionRequestOptions}\n   * @returns {@link B2BSSOSAMLUpdateConnectionResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  updateConnection(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"PUT\",\n      url: `/v1/b2b/sso/saml/${data.organization_id}/connections/${data.connection_id}`,\n      headers,\n      data: {\n        idp_entity_id: data.idp_entity_id,\n        display_name: data.display_name,\n        attribute_mapping: data.attribute_mapping,\n        x509_certificate: data.x509_certificate,\n        idp_sso_url: data.idp_sso_url,\n        saml_connection_implicit_role_assignments: data.saml_connection_implicit_role_assignments,\n        saml_group_implicit_role_assignments: data.saml_group_implicit_role_assignments,\n        alternative_audience_uri: data.alternative_audience_uri,\n        identity_provider: data.identity_provider,\n        signing_private_key: data.signing_private_key,\n        nameid_format: data.nameid_format,\n        alternative_acs_url: data.alternative_acs_url,\n        idp_initiated_auth_disabled: data.idp_initiated_auth_disabled\n      }\n    });\n  }\n\n  /**\n   * Used to update an existing SAML connection using an IDP metadata URL.\n   *\n   * A newly created connection will not become active until all the following are provided:\n   * * `idp_sso_url`\n   * * `idp_entity_id`\n   * * `x509_certificate`\n   * * `attribute_mapping` (must be supplied using [Update SAML Connection](update-saml-connection))\n   * @param data {@link B2BSSOSAMLUpdateByURLRequest}\n   * @param options {@link B2BSSOSAMLUpdateByURLRequestOptions}\n   * @returns {@link B2BSSOSAMLUpdateByURLResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  updateByURL(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"PUT\",\n      url: `/v1/b2b/sso/saml/${data.organization_id}/connections/${data.connection_id}/url`,\n      headers,\n      data: {\n        metadata_url: data.metadata_url\n      }\n    });\n  }\n\n  /**\n   * Delete a SAML verification certificate.\n   *\n   * You may need to do this when rotating certificates from your IdP, since Stytch allows a maximum of 5\n   * certificates per connection. There must always be at least one certificate per active connection.\n   * @param data {@link B2BSSOSAMLDeleteVerificationCertificateRequest}\n   * @param options {@link B2BSSOSAMLDeleteVerificationCertificateRequestOptions}\n   * @returns {@link B2BSSOSAMLDeleteVerificationCertificateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  deleteVerificationCertificate(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/b2b/sso/saml/${data.organization_id}/connections/${data.connection_id}/verification_certificates/${data.certificate_id}`,\n      headers,\n      data: {}\n    });\n  }\n}\nexports.SAML = SAML;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SSO = void 0;\nvar _method_options = require(\"../shared/method_options\");\nvar _sso_external = require(\"./sso_external\");\nvar _sso_oidc = require(\"./sso_oidc\");\nvar _shared = require(\"../shared\");\nvar _sso_saml = require(\"./sso_saml\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `sso.authenticate`.\n\n// Response type for `sso.authenticate`.\n\n// Request type for `sso.deleteConnection`.\n\n// Response type for `sso.deleteConnection`.\n\n// Request type for `sso.getConnections`.\n\n// Response type for `sso.getConnections`.\n\nclass SSO {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n    this.oidc = new _sso_oidc.OIDC(this.fetchConfig);\n    this.saml = new _sso_saml.SAML(this.fetchConfig);\n    this.external = new _sso_external.External(this.fetchConfig);\n  }\n\n  /**\n   * Get all SSO Connections owned by the organization.\n   * @param params {@link B2BSSOGetConnectionsRequest}\n   * @param options {@link B2BSSOGetConnectionsRequestOptions}\n   * @returns {@link B2BSSOGetConnectionsResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  getConnections(params, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"GET\",\n      url: `/v1/b2b/sso/${params.organization_id}`,\n      headers,\n      params: {}\n    });\n  }\n\n  /**\n   * Delete an existing SSO connection.\n   * @param data {@link B2BSSODeleteConnectionRequest}\n   * @param options {@link B2BSSODeleteConnectionRequestOptions}\n   * @returns {@link B2BSSODeleteConnectionResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  deleteConnection(data, options) {\n    const headers = {};\n    if (options?.authorization) {\n      (0, _method_options.addAuthorizationHeaders)(headers, options.authorization);\n    }\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"DELETE\",\n      url: `/v1/b2b/sso/${data.organization_id}/connections/${data.connection_id}`,\n      headers,\n      data: {}\n    });\n  }\n\n  /**\n   * Authenticate a user given a token.\n   * This endpoint verifies that the user completed the SSO Authentication flow by verifying that the token\n   * is valid and hasn't expired.\n   * Provide the `session_duration_minutes` parameter to set the lifetime of the session.\n   * If the `session_duration_minutes` parameter is not specified, a Stytch session will be created with a 60\n   * minute duration.\n   * To link this authentication event to an existing Stytch session, include either the `session_token` or\n   * `session_jwt` param.\n   *\n   * If the is required to complete MFA to log in to the, the returned value of `member_authenticated` will\n   * be `false`, and an `intermediate_session_token` will be returned.\n   * The `intermediate_session_token` can be passed into the\n   * [OTP SMS Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-otp-sms),\n   * [TOTP Authenticate endpoint](https://stytch.com/docs/b2b/api/authenticate-totp),\n   * or [Recovery Codes Recover endpoint](https://stytch.com/docs/b2b/api/recovery-codes-recover) to complete\n   * the MFA step and acquire a full member session.\n   * The `session_duration_minutes` and `session_custom_claims` parameters will be ignored.\n   *\n   * If a valid `session_token` or `session_jwt` is passed in, the Member will not be required to complete an\n   * MFA step.\n   * @param data {@link B2BSSOAuthenticateRequest}\n   * @returns {@link B2BSSOAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  authenticate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/sso/authenticate`,\n      headers,\n      data\n    });\n  }\n}\nexports.SSO = SSO;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TOTPs = void 0;\nrequire(\"../shared/method_options\");\nvar _shared = require(\"../shared\");\n// !!!\n// WARNING: This file is autogenerated\n// Only modify code within MANUAL() sections\n// or your changes may be overwritten later!\n// !!!\n\n// Request type for `totps.authenticate`.\n\n// Response type for `totps.authenticate`.\n\n// Request type for `totps.create`.\n\n// Response type for `totps.create`.\n\n// Request type for `totps.migrate`.\n\n// Response type for `totps.migrate`.\n\nclass TOTPs {\n  constructor(fetchConfig) {\n    this.fetchConfig = fetchConfig;\n  }\n\n  /**\n   * Create a new TOTP instance for a. The Member can use the authenticator application of their choice to\n   * scan the QR code or enter the secret.\n   *\n   * Passing an intermediate session token, session token, or session JWT is not required, but if passed must\n   * match the Member ID passed.\n   * @param data {@link B2BTOTPsCreateRequest}\n   * @returns {@link B2BTOTPsCreateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  create(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/totp`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Authenticate a Member provided TOTP.\n   * @param data {@link B2BTOTPsAuthenticateRequest}\n   * @returns {@link B2BTOTPsAuthenticateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  authenticate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/totp/authenticate`,\n      headers,\n      data\n    });\n  }\n\n  /**\n   * Migrate an existing TOTP instance for a. Recovery codes are not required and will be minted for the\n   * Member if not provided.\n   * @param data {@link B2BTOTPsMigrateRequest}\n   * @returns {@link B2BTOTPsMigrateResponse}\n   * @async\n   * @throws A {@link StytchError} on a non-2xx response from the Stytch API\n   * @throws A {@link RequestError} when the Stytch API cannot be reached\n   */\n  migrate(data) {\n    const headers = {};\n    return (0, _shared.request)(this.fetchConfig, {\n      method: \"POST\",\n      url: `/v1/b2b/totp/migrate`,\n      headers,\n      data\n    });\n  }\n}\nexports.TOTPs = TOTPs;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IDP = void 0;\nvar jose = _interopRequireWildcard(require(\"jose\"));\nvar _shared = require(\"../shared\");\nvar _rbac_local = require(\"./rbac_local\");\nvar _errors = require(\"../shared/errors\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nclass IDP {\n  constructor(fetchConfig, jwtConfig, policyCache) {\n    this.fetchConfig = fetchConfig;\n    this.jwtConfig = jwtConfig;\n    this.jwksClient = jwtConfig.jwks;\n    this.policyCache = policyCache;\n  }\n  async introspectTokenNetwork(data, options) {\n    const fetchConfig = {\n      ...this.fetchConfig,\n      headers: {\n        [\"User-Agent\"]: this.fetchConfig.headers[\"User-Agent\"],\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    };\n    const params = {\n      token: data.token,\n      client_id: data.client_id\n    };\n    if (data.client_secret && data.client_secret.length > 0) {\n      params.client_secret = data.client_secret;\n    }\n    if (data.token_type_hint && data.token_type_hint.length > 0) {\n      params.token_type_hint = data.token_type_hint;\n    }\n    let response;\n    try {\n      response = await (0, _shared.request)(fetchConfig, {\n        method: \"POST\",\n        url: `/v1/public/${this.jwtConfig.projectID}/oauth2/introspect`,\n        dataRaw: new URLSearchParams(params)\n      });\n    } catch (err) {\n      throw new _errors.ClientError(\"token_invalid\", \"Could not introspect token\", err);\n    }\n    if (!response.active) {\n      throw new _errors.ClientError(\"token_invalid\", \"Token was not active\", null);\n    }\n    const {\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      aud: _aud,\n      exp: _exp,\n      iat: _iat,\n      iss: _iss,\n      nbf: _nbf,\n      sub: _sub,\n      status_code: _status_code,\n      scope: _scope,\n      active: _active,\n      request_id: _request_id,\n      token_type: _token_type,\n      client_id: _client_id,\n      \"https://stytch.com/organization\": _organization_claim,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      ...customClaims\n    } = response;\n    if (options?.authorization_check) {\n      const policy = await this.policyCache.getPolicy();\n      const organization_id = _organization_claim[\"organization_id\"];\n      (0, _rbac_local.performScopeAuthorizationCheck)({\n        policy,\n        subjectOrgID: organization_id,\n        tokenScopes: _scope.trim().split(\" \"),\n        authorizationCheck: options.authorization_check\n      });\n    }\n    const organization = {\n      organization_id: _organization_claim.organization_id,\n      slug: _organization_claim.slug\n    };\n    return {\n      subject: _sub,\n      scope: _scope,\n      audience: _aud,\n      expires_at: _exp,\n      issued_at: _iat,\n      issuer: _iss,\n      not_before: _nbf,\n      token_type: _token_type,\n      organization,\n      custom_claims: customClaims\n    };\n  }\n  async introspectTokenLocal(tokenJWT, options) {\n    const jwtOptions = {\n      audience: this.jwtConfig.projectID,\n      issuer: this.jwtConfig.issuers,\n      typ: \"JWT\"\n    };\n    const now = options?.current_date || new Date();\n    let payload;\n    try {\n      const token = await jose.jwtVerify(tokenJWT, this.jwksClient, {\n        ...jwtOptions,\n        clockTolerance: options?.clock_tolerance_seconds,\n        currentDate: now\n      });\n      payload = token.payload;\n    } catch (err) {\n      throw new _errors.ClientError(\"jwt_invalid\", \"Could not verify JWT\", err);\n    }\n\n    // The custom claim set is all the claims in the payload except for the standard claims and\n    // the scope and token_type claims. The cleanest way to collect those seems to be naming what we want\n    // to omit and using ...rest for to collect the custom claims.\n    const {\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      aud: _aud,\n      exp: _exp,\n      iat: _iat,\n      iss: _iss,\n      jti: _jti,\n      nbf: _nbf,\n      sub: _sub,\n      scope: _scope,\n      \"https://stytch.com/organization\": _organization_claim,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      ...custom_claims\n    } = payload;\n    if (options?.authorization_check) {\n      const policy = await this.policyCache.getPolicy();\n      (0, _rbac_local.performScopeAuthorizationCheck)({\n        policy,\n        subjectOrgID: _organization_claim[\"organization_id\"],\n        tokenScopes: _scope.trim().split(\" \"),\n        authorizationCheck: options.authorization_check\n      });\n    }\n    const organization = {\n      organization_id: _organization_claim.organization_id,\n      slug: _organization_claim.slug\n    };\n    return {\n      subject: _sub,\n      expires_at: _exp,\n      audience: _aud,\n      issued_at: _iat,\n      issuer: _iss,\n      not_before: _nbf,\n      scope: _scope,\n      token_type: \"access_token\",\n      organization,\n      custom_claims\n    };\n  }\n}\nexports.IDP = IDP;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.B2BClient = void 0;\nvar jose = _interopRequireWildcard(require(\"jose\"));\nvar _client = require(\"../shared/client\");\nvar _discovery = require(\"./discovery\");\nvar _fraud = require(\"../b2c/fraud\");\nvar _impersonation = require(\"./impersonation\");\nvar _sessions = require(\"../shared/sessions\");\nvar _m2m = require(\"../b2c/m2m\");\nvar _magic_links = require(\"./magic_links\");\nvar _oauth = require(\"./oauth\");\nvar _organizations = require(\"./organizations\");\nvar _otp = require(\"./otp\");\nvar _passwords = require(\"./passwords\");\nvar _rbac_local = require(\"./rbac_local\");\nvar _project = require(\"../b2c/project\");\nvar _rbac = require(\"./rbac\");\nvar _recovery_codes = require(\"./recovery_codes\");\nvar _scim = require(\"./scim\");\nvar _sessions2 = require(\"./sessions\");\nvar _sso = require(\"./sso\");\nvar _totps = require(\"./totps\");\nvar _idp = require(\"./idp\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nclass B2BClient extends _client.BaseClient {\n  constructor(config) {\n    super(config);\n    this.jwtConfig = {\n      // Only allow JWTs that were meant for this project.\n      projectID: config.project_id,\n      // Fetch the signature verification keys for this project as needed.\n      jwks: jose.createRemoteJWKSet(new URL(`/v1/b2b/sessions/jwks/${config.project_id}`, this.fetchConfig.baseURL)),\n      issuers: [`stytch.com/${config.project_id}`, (0, _sessions.trimTrailingSlash)(this.fetchConfig.baseURL)]\n    };\n    const policyCache = new _rbac_local.PolicyCache(new _rbac.RBAC(this.fetchConfig));\n    this.discovery = new _discovery.Discovery(this.fetchConfig);\n    this.fraud = new _fraud.Fraud(this.fetchConfig);\n    this.impersonation = new _impersonation.Impersonation(this.fetchConfig);\n    this.m2m = new _m2m.M2M(this.fetchConfig, this.jwtConfig);\n    this.magicLinks = new _magic_links.MagicLinks(this.fetchConfig);\n    this.oauth = new _oauth.OAuth(this.fetchConfig);\n    this.otps = new _otp.OTPs(this.fetchConfig);\n    this.organizations = new _organizations.Organizations(this.fetchConfig);\n    this.passwords = new _passwords.Passwords(this.fetchConfig);\n    this.project = new _project.Project(this.fetchConfig);\n    this.rbac = new _rbac.RBAC(this.fetchConfig);\n    this.recoveryCodes = new _recovery_codes.RecoveryCodes(this.fetchConfig);\n    this.scim = new _scim.SCIM(this.fetchConfig);\n    this.sso = new _sso.SSO(this.fetchConfig);\n    this.sessions = new _sessions2.Sessions(this.fetchConfig, this.jwtConfig, policyCache);\n    this.totps = new _totps.TOTPs(this.fetchConfig);\n    this.idp = new _idp.IDP(this.fetchConfig, this.jwtConfig, policyCache);\n  }\n}\nexports.B2BClient = B2BClient;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {\n  Client: true,\n  B2BClient: true,\n  envs: true\n};\nObject.defineProperty(exports, \"B2BClient\", {\n  enumerable: true,\n  get: function () {\n    return _client2.B2BClient;\n  }\n});\nObject.defineProperty(exports, \"Client\", {\n  enumerable: true,\n  get: function () {\n    return _client.Client;\n  }\n});\nexports.envs = exports.default = void 0;\nvar _client = require(\"./b2c/client\");\nvar _client2 = require(\"./b2b/client\");\nvar _index = require(\"./b2c/index\");\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _index[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _index[key];\n    }\n  });\n});\nvar _index2 = require(\"./b2b/index\");\nObject.keys(_index2).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _index2[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _index2[key];\n    }\n  });\n});\nvar _envs = _interopRequireWildcard(require(\"./shared/envs\"));\nexports.envs = _envs;\nvar _errors = require(\"./shared/errors\");\nObject.keys(_errors).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _errors[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _errors[key];\n    }\n  });\n});\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar _default = exports.default = {\n  Client: _client.Client,\n  B2BClient: _client2.B2BClient\n};", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/jkwasniewski/src/stytch-b2b-demo/backend-cf/.wrangler/tmp/bundle-eygzm5/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/jkwasniewski/src/stytch-b2b-demo/backend-cf/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/jkwasniewski/src/stytch-b2b-demo/backend-cf/.wrangler/tmp/bundle-eygzm5/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/jkwasniewski/src/stytch-b2b-demo/backend-cf/.wrangler/tmp/bundle-eygzm5/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/jkwasniewski/src/stytch-b2b-demo/backend-cf/src/index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/jkwasniewski/src/stytch-b2b-demo/backend-cf/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/jkwasniewski/src/stytch-b2b-demo/backend-cf/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/jkwasniewski/src/stytch-b2b-demo/backend-cf/src/index.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "import stytch from 'stytch';\n\nexport interface Env {\n  STYTCH_PROJECT_ID: string;\n  STYTCH_SECRET: string;\n  APP_DOMAIN: string;\n}\n\nconst ROLES = [{\n  name: 'newbie',\n  value: '10',\n}, {\n  name: 'novice',\n  value: '20',\n}, {\n  name: 'head baker',\n  value: '30',\n}, {\n  name: 'baker overlord',\n  value: '40'\n}]\n\n// We are being hacky.. please don't judge me\nfunction monkeyPatchStytchClientSettings(client: any) {\n  client.fetchConfig.cache = undefined;\n}\n\nexport default {\n  async fetch(request: Request, env: Env): Promise<Response> {\n    const url = new URL(request.url);\n    const DEFAULT_HEADERS = {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': env.APP_DOMAIN,\n      'Access-Control-Allow-Methods': 'GET,POST,OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type,Authorization',\n    };\n\n    // CORS preflight\n    if (request.method === 'OPTIONS') {\n      return new Response(null, {\n        status: 204,\n        headers: DEFAULT_HEADERS,\n      });\n    }\n\n    const stytchClient = new stytch.B2BClient({\n      project_id: (env.STYTCH_PROJECT_ID as string) || '',\n      secret: (env.STYTCH_SECRET as string) || '',\n    });\n    monkeyPatchStytchClientSettings(stytchClient);\n\n\n    if (url.pathname === '/api/leaderboard' && request.method === 'GET') {\n      try {\n        const orgs = await stytchClient.organizations.search({\n          limit: 10,\n        })\n        const members = await stytchClient.organizations.members.search({\n          limit: 200,\n          organization_ids: orgs.organizations.map((org) => org.organization_id),\n        });\n        const leaderboard = members.members.map((member) => ({\n          name: member.email_address,\n          baked: member.trusted_metadata?.baked,\n          organization: orgs.organizations.find((org) => org.organization_id === member.organization_id)?.organization_name,\n        })).sort((a, b) => b.baked - a.baked);\n        return new Response(JSON.stringify({ leaderboard }), {\n          headers: DEFAULT_HEADERS,\n        });\n      } catch (err: any) {\n        return new Response(JSON.stringify({ error: err.message }), {\n          status: 401,\n          headers: DEFAULT_HEADERS,\n        });\n      }\n    }\n\n    // Validate device fingerprint using telemetry id\n    if (url.pathname === '/api/validate' && request.method === 'POST') {\n      try {\n        const body = await request.json();\n        const { telemetryId } = body;\n        const response = await stytchClient.fraud.fingerprint.lookup({\n          telemetry_id: telemetryId,\n        });\n        return new Response(JSON.stringify({ verdict: response.verdict }), {\n          headers: DEFAULT_HEADERS,\n        });\n      } catch (err: any) {\n        return new Response(JSON.stringify({ error: err.message }), {\n          status: 401,\n          headers: DEFAULT_HEADERS,\n        });\n      }\n    }\n\n    const sessionToken = request.headers.get('Authorization')?.split(' ')[1];\n    if (!sessionToken) return new Response('Unauthorized', { status: 401, headers: DEFAULT_HEADERS });\n    const session = await stytchClient.sessions.authenticate({ session_token: sessionToken})\n    if (!session) return new Response('Unauthorized', { status: 401, headers: DEFAULT_HEADERS });\n\n    // Validate device fingerprint using telemetry id\n    if (url.pathname === '/api/feed' && request.method === 'POST') {\n      try {\n        const body = await request.json();\n        const { count } = body;\n        const response = await stytchClient.organizations.members.update({\n          organization_id: session.organization.organization_id,\n          member_id: session.member.member_id,\n          trusted_metadata: {\n            baked: (count + (session.member.trusted_metadata?.baked || 0)),\n          },\n        });\n        return new Response(JSON.stringify({ response }), {\n          headers: DEFAULT_HEADERS,\n        });\n      } catch (err: any) {\n        return new Response(JSON.stringify({ error: err.message }), {\n          status: 401,\n          headers: DEFAULT_HEADERS,\n        });\n      }\n    }\n\n    // Validate device fingerprint using telemetry id\n    if (url.pathname === '/api/promote' && request.method === 'GET') {\n      try {\n        const roles = ROLES.filter((role) => role.value <= session.member.trusted_metadata?.baked)\n        await stytchClient.organizations.members.update({\n          organization_id: session.organization.organization_id,\n          member_id: session.member.member_id,\n          roles: roles.map((role) => role.name),\n        });\n        return new Response(JSON.stringify({ role: roles.slice(-1)[0].name || 'nobody' }), {\n          headers: DEFAULT_HEADERS,\n        });\n      } catch (err: any) {\n        return new Response(JSON.stringify({ error: err.message }), {\n          status: 401,\n          headers: DEFAULT_HEADERS,\n        });\n      }\n    }\n\n    return new Response('Not found', { status: 404, headers: DEFAULT_HEADERS });\n  },\n};\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n"],
  "mappings": "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",
  "names": ["message", "types", "tag", "p2s", "getCryptoKey", "deriveKey", "p2s", "decrypt", "encrypt", "decrypt", "bitLength", "tag", "byteLength", "getNamedCurve", "tag", "encrypt", "wrap", "unwrap", "tag", "bitLength", "decrypt", "p2s", "tag", "unwrap", "protectedHeader", "tag", "init_decrypt", "tag", "init_decrypt", "init_decrypt", "bitLength", "encrypt", "p2s", "wrap", "init_encrypt", "tag", "init_encrypt", "jwe", "getCryptoKey", "getCryptoKey", "init_verify", "init_verify", "init_verify", "init_verify", "init_decrypt", "init_encrypt", "getCryptoKey", "init_sign", "init_sign", "init_sign", "init_sign", "init_encrypt", "jwk", "base64url_exports", "decode", "encode", "init_base64url", "decode", "init_base64url", "decode", "init_base64url", "generateKeyPair", "generateSecret", "runtime_default", "init_runtime", "base64url_exports", "runtime_default", "generateKeyPair", "generateSecret", "init_decrypt", "init_encrypt", "init_verify", "init_sign", "init_base64url", "init_runtime", "i", "nodeInterop", "message", "nodeInterop", "require_sessions", "mode", "nodeInterop", "require_client", "nodeInterop", "require_impersonation", "require_magic_links_email", "require_magic_links", "require_oauth", "require_passwords_email", "require_passwords_existing_password", "require_passwords_session", "require_passwords", "require_sessions", "require_totps", "require_idp", "nodeInterop", "require_client", "nodeInterop", "nodeInterop", "stytch"]
}
